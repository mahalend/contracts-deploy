{"id":"c79d4dac439ff1bc9af241fed478c7b0","_format":"hh-sol-build-info-1","solcVersion":"0.7.5","solcLongVersion":"0.7.5+commit.eb77ed08","input":{"language":"Solidity","sources":{"@aave/aave-token/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"},"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface IGovernancePowerDelegationToken {\n  \n  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\n\n  /**\n   * @dev emitted when a user delegates to another\n   * @param delegator the delegator\n   * @param delegatee the delegatee\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   **/\n  event DelegateChanged(\n    address indexed delegator,\n    address indexed delegatee,\n    DelegationType delegationType\n  );\n\n  /**\n   * @dev emitted when an action changes the delegated power of a user\n   * @param user the user which delegated power has changed\n   * @param amount the amount of delegated power for the user\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   **/\n  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);\n\n  /**\n   * @dev delegates the specific power to a delegatee\n   * @param delegatee the user which delegated power has changed\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   **/\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\n  /**\n   * @dev delegates all the powers to a specific user\n   * @param delegatee the user to which the power will be delegated\n   **/\n  function delegate(address delegatee) external virtual;\n  /**\n   * @dev returns the delegatee of an user\n   * @param delegator the address of the delegator\n   **/\n  function getDelegateeByType(address delegator, DelegationType delegationType)\n    external\n    virtual\n    view\n    returns (address);\n\n  /**\n   * @dev returns the current delegated power of a user. The current power is the\n   * power delegated at the time of the last snapshot\n   * @param user the user\n   **/\n  function getPowerCurrent(address user, DelegationType delegationType)\n    external\n    virtual\n    view\n    returns (uint256);\n\n  /**\n   * @dev returns the delegated power of a user at a certain block\n   * @param user the user\n   **/\n  function getPowerAtBlock(\n    address user,\n    uint256 blockNumber,\n    DelegationType delegationType\n  ) external virtual view returns (uint256);\n \n  /**\n  * @dev returns the total supply at a certain block number\n  **/\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\n}"},"@aave/aave-token/contracts/open-zeppelin/Address.sol":{"content":"pragma solidity ^0.7.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}"},"@aave/aave-token/contracts/open-zeppelin/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.5;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"},"@aave/aave-token/contracts/open-zeppelin/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.5;\n\nimport \"./Context.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string internal _name;\n    string internal _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}"},"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol":{"content":"pragma solidity ^0.7.5;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"},"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\nimport {SafeMath} from '../../open-zeppelin/SafeMath.sol';\nimport {ERC20} from '../../open-zeppelin/ERC20.sol';\nimport {\n  IGovernancePowerDelegationToken\n} from '../../interfaces/IGovernancePowerDelegationToken.sol';\n\n/**\n * @notice implementation of the AAVE token contract\n * @author Aave\n */\nabstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {\n  using SafeMath for uint256;\n  /// @notice The EIP-712 typehash for the delegation struct used by the contract\n  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(\n    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'\n  );\n\n  bytes32 public constant DELEGATE_TYPEHASH = keccak256(\n    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'\n  );\n\n  /// @dev snapshot of a value on a specific block, used for votes\n  struct Snapshot {\n    uint128 blockNumber;\n    uint128 value;\n  }\n\n  /**\n   * @dev delegates one specific power to a delegatee\n   * @param delegatee the user which delegated power has changed\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   **/\n  function delegateByType(address delegatee, DelegationType delegationType) external override {\n    _delegateByType(msg.sender, delegatee, delegationType);\n  }\n\n  /**\n   * @dev delegates all the powers to a specific user\n   * @param delegatee the user to which the power will be delegated\n   **/\n  function delegate(address delegatee) external override {\n    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);\n    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);\n  }\n\n  /**\n   * @dev returns the delegatee of an user\n   * @param delegator the address of the delegator\n   **/\n  function getDelegateeByType(address delegator, DelegationType delegationType)\n    external\n    override\n    view\n    returns (address)\n  {\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\n\n    return _getDelegatee(delegator, delegates);\n  }\n\n  /**\n   * @dev returns the current delegated power of a user. The current power is the\n   * power delegated at the time of the last snapshot\n   * @param user the user\n   **/\n  function getPowerCurrent(address user, DelegationType delegationType)\n    external\n    override\n    view\n    returns (uint256)\n  {\n    (\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\n      mapping(address => uint256) storage snapshotsCounts,\n\n    ) = _getDelegationDataByType(delegationType);\n\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);\n  }\n\n  /**\n   * @dev returns the delegated power of a user at a certain block\n   * @param user the user\n   **/\n  function getPowerAtBlock(\n    address user,\n    uint256 blockNumber,\n    DelegationType delegationType\n  ) external override view returns (uint256) {\n    (\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\n      mapping(address => uint256) storage snapshotsCounts,\n\n    ) = _getDelegationDataByType(delegationType);\n\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);\n  }\n\n  /**\n   * @dev returns the total supply at a certain block number\n   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum\n   * In this initial implementation with no AAVE minting, simply returns the current supply\n   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future\n   **/\n  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {\n    return super.totalSupply();\n  }\n\n  /**\n   * @dev delegates the specific power to a delegatee\n   * @param delegatee the user which delegated power has changed\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   **/\n  function _delegateByType(\n    address delegator,\n    address delegatee,\n    DelegationType delegationType\n  ) internal {\n    require(delegatee != address(0), 'INVALID_DELEGATEE');\n\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\n\n    uint256 delegatorBalance = balanceOf(delegator);\n\n    address previousDelegatee = _getDelegatee(delegator, delegates);\n\n    delegates[delegator] = delegatee;\n\n    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);\n    emit DelegateChanged(delegator, delegatee, delegationType);\n  }\n\n  /**\n   * @dev moves delegated power from one user to another\n   * @param from the user from which delegated power is moved\n   * @param to the user that will receive the delegated power\n   * @param amount the amount of delegated power to be moved\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   **/\n  function _moveDelegatesByType(\n    address from,\n    address to,\n    uint256 amount,\n    DelegationType delegationType\n  ) internal {\n    if (from == to) {\n      return;\n    }\n\n    (\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\n      mapping(address => uint256) storage snapshotsCounts,\n\n    ) = _getDelegationDataByType(delegationType);\n\n    if (from != address(0)) {\n      uint256 previous = 0;\n      uint256 fromSnapshotsCount = snapshotsCounts[from];\n\n      if (fromSnapshotsCount != 0) {\n        previous = snapshots[from][fromSnapshotsCount - 1].value;\n      } else {\n        previous = balanceOf(from);\n      }\n\n      _writeSnapshot(\n        snapshots,\n        snapshotsCounts,\n        from,\n        uint128(previous),\n        uint128(previous.sub(amount))\n      );\n\n      emit DelegatedPowerChanged(from, previous.sub(amount), delegationType);\n    }\n    if (to != address(0)) {\n      uint256 previous = 0;\n      uint256 toSnapshotsCount = snapshotsCounts[to];\n      if (toSnapshotsCount != 0) {\n        previous = snapshots[to][toSnapshotsCount - 1].value;\n      } else {\n        previous = balanceOf(to);\n      }\n\n      _writeSnapshot(\n        snapshots,\n        snapshotsCounts,\n        to,\n        uint128(previous),\n        uint128(previous.add(amount))\n      );\n\n      emit DelegatedPowerChanged(to, previous.add(amount), delegationType);\n    }\n  }\n\n  /**\n   * @dev searches a snapshot by block number. Uses binary search.\n   * @param snapshots the snapshots mapping\n   * @param snapshotsCounts the number of snapshots\n   * @param user the user for which the snapshot is being searched\n   * @param blockNumber the block number being searched\n   **/\n  function _searchByBlockNumber(\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\n    mapping(address => uint256) storage snapshotsCounts,\n    address user,\n    uint256 blockNumber\n  ) internal view returns (uint256) {\n    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');\n\n    uint256 snapshotsCount = snapshotsCounts[user];\n\n    if (snapshotsCount == 0) {\n      return balanceOf(user);\n    }\n\n    // First check most recent balance\n    if (snapshots[user][snapshotsCount - 1].blockNumber <= blockNumber) {\n      return snapshots[user][snapshotsCount - 1].value;\n    }\n\n    // Next check implicit zero balance\n    if (snapshots[user][0].blockNumber > blockNumber) {\n      return 0;\n    }\n\n    uint256 lower = 0;\n    uint256 upper = snapshotsCount - 1;\n    while (upper > lower) {\n      uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n      Snapshot memory snapshot = snapshots[user][center];\n      if (snapshot.blockNumber == blockNumber) {\n        return snapshot.value;\n      } else if (snapshot.blockNumber < blockNumber) {\n        lower = center;\n      } else {\n        upper = center - 1;\n      }\n    }\n    return snapshots[user][lower].value;\n  }\n\n  /**\n   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type\n   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,\n   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts\n   * who inherit from this to provide access to the delegation data by overriding this method.\n   * @param delegationType the type of delegation\n   **/\n  function _getDelegationDataByType(DelegationType delegationType)\n    internal\n    virtual\n    view\n    returns (\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\n      mapping(address => uint256) storage, //snapshots count\n      mapping(address => address) storage //delegatees list\n    );\n\n  /**\n   * @dev Writes a snapshot for an owner of tokens\n   * @param owner The owner of the tokens\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\n   * @param newValue The value after the operation\n   */\n  function _writeSnapshot(\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\n    mapping(address => uint256) storage snapshotsCounts,\n    address owner,\n    uint128 oldValue,\n    uint128 newValue\n  ) internal {\n    uint128 currentBlock = uint128(block.number);\n\n    uint256 ownerSnapshotsCount = snapshotsCounts[owner];\n    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];\n\n    // Doing multiple operations in the same block\n    if (\n      ownerSnapshotsCount != 0 &&\n      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock\n    ) {\n      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;\n    } else {\n      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);\n      snapshotsCounts[owner] = ownerSnapshotsCount + 1;\n    }\n  }\n\n  /**\n   * @dev returns the user delegatee. If a user never performed any delegation,\n   * his delegated address will be 0x0. In that case we simply return the user itself\n   * @param delegator the address of the user for which return the delegatee\n   * @param delegates the array of delegates for a particular type of delegation\n   **/\n  function _getDelegatee(address delegator, mapping(address => address) storage delegates)\n    internal\n    view\n    returns (address)\n  {\n    address previousDelegatee = delegates[delegator];\n\n    if (previousDelegatee == address(0)) {\n      return delegator;\n    }\n\n    return previousDelegatee;\n  }\n}\n"},"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\n\ninterface IAaveDistributionManager {\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\n    external;\n}\n"},"@aave/safety-module/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\nimport {IERC20} from './IERC20.sol';\n\n/**\n * @dev Interface for ERC20 including metadata\n **/\ninterface IERC20Detailed is IERC20 {\n  function name() external view returns (string memory);\n\n  function symbol() external view returns (string memory);\n\n  function decimals() external view returns (uint8);\n}\n"},"@aave/safety-module/contracts/interfaces/IStakedAave.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface IStakedAave {\n  function stake(address to, uint256 amount) external;\n\n  function redeem(address to, uint256 amount) external;\n\n  function cooldown() external;\n\n  function claimRewards(address to, uint256 amount) external;\n}\n"},"@aave/safety-module/contracts/interfaces/ITransferHook.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\ninterface ITransferHook {\n  function onTransfer(\n    address from,\n    address to,\n    uint256 amount\n  ) external;\n}\n"},"@aave/safety-module/contracts/lib/Address.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.7.5;\n\n/**\n * @dev Collection of functions related to the address type\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n    // for accounts without code, i.e. `keccak256('')`\n    bytes32 codehash;\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      codehash := extcodehash(account)\n    }\n    return (codehash != accountHash && codehash != 0x0);\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n}\n"},"@aave/safety-module/contracts/lib/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.5;\n\n/**\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"},"@aave/safety-module/contracts/lib/DistributionTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nlibrary DistributionTypes {\n  struct AssetConfigInput {\n    uint128 emissionPerSecond;\n    uint256 totalStaked;\n    address underlyingAsset;\n  }\n\n  struct UserStakeInput {\n    address underlyingAsset;\n    uint256 stakedByUser;\n    uint256 totalStaked;\n  }\n}\n"},"@aave/safety-module/contracts/lib/ERC20.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\nimport {Context} from './Context.sol';\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\nimport {SafeMath} from './SafeMath.sol';\n\n/**\n * @title ERC20\n * @notice Basic ERC20 implementation\n * @author Aave\n **/\ncontract ERC20 is Context, IERC20, IERC20Detailed {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) private _balances;\n  mapping(address => mapping(address => uint256)) private _allowances;\n  uint256 private _totalSupply;\n  string private _name;\n  string private _symbol;\n  uint8 private _decimals;\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    uint8 decimals\n  ) public {\n    _name = name;\n    _symbol = symbol;\n    _decimals = decimals;\n  }\n\n  /**\n   * @return the name of the token\n   **/\n  function name() public view override returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @return the symbol of the token\n   **/\n  function symbol() public view override returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @return the decimals of the token\n   **/\n  function decimals() public view override returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @return the total supply of the token\n   **/\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @return the balance of the token\n   **/\n  function balanceOf(address account) public view override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev executes a transfer of tokens from msg.sender to recipient\n   * @param recipient the recipient of the tokens\n   * @param amount the amount of tokens being transferred\n   * @return true if the transfer succeeds, false otherwise\n   **/\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev returns the allowance of spender on the tokens owned by owner\n   * @param owner the owner of the tokens\n   * @param spender the user allowed to spend the owner's tokens\n   * @return the amount of owner's tokens spender is allowed to spend\n   **/\n  function allowance(address owner, address spender)\n    public\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev allows spender to spend the tokens owned by msg.sender\n   * @param spender the user allowed to spend msg.sender tokens\n   * @return true\n   **/\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\n   * @param sender the owner of the tokens\n   * @param recipient the recipient of the tokens\n   * @param amount the amount of tokens being transferred\n   * @return true if the transfer succeeds, false otherwise\n   **/\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) public virtual override returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(\n      sender,\n      _msgSender(),\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\n    );\n    return true;\n  }\n\n  /**\n   * @dev increases the allowance of spender to spend msg.sender tokens\n   * @param spender the user allowed to spend on behalf of msg.sender\n   * @param addedValue the amount being added to the allowance\n   * @return true\n   **/\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev decreases the allowance of spender to spend msg.sender tokens\n   * @param spender the user allowed to spend on behalf of msg.sender\n   * @param subtractedValue the amount being subtracted to the allowance\n   * @return true\n   **/\n  function decreaseAllowance(address spender, uint256 subtractedValue)\n    public\n    virtual\n    returns (bool)\n  {\n    _approve(\n      _msgSender(),\n      spender,\n      _allowances[_msgSender()][spender].sub(\n        subtractedValue,\n        'ERC20: decreased allowance below zero'\n      )\n    );\n    return true;\n  }\n\n  function _transfer(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) internal virtual {\n    require(sender != address(0), 'ERC20: transfer from the zero address');\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  function _mint(address account, uint256 amount) internal virtual {\n    require(account != address(0), 'ERC20: mint to the zero address');\n\n    _beforeTokenTransfer(address(0), account, amount);\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  function _burn(address account, uint256 amount) internal virtual {\n    require(account != address(0), 'ERC20: burn from the zero address');\n\n    _beforeTokenTransfer(account, address(0), amount);\n\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  function _approve(\n    address owner,\n    address spender,\n    uint256 amount\n  ) internal virtual {\n    require(owner != address(0), 'ERC20: approve from the zero address');\n    require(spender != address(0), 'ERC20: approve to the zero address');\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  function _setName(string memory newName) internal {\n    _name = newName;\n  }\n\n  function _setSymbol(string memory newSymbol) internal {\n    _symbol = newSymbol;\n  }\n\n  function _setDecimals(uint8 newDecimals) internal {\n    _decimals = newDecimals;\n  }\n\n  function _beforeTokenTransfer(\n    address from,\n    address to,\n    uint256 amount\n  ) internal virtual {}\n}\n"},"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\nimport {ERC20} from '../lib/ERC20.sol';\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\n\n/**\n * @title ERC20WithSnapshot\n * @notice ERC20 including snapshots of balances on transfer-related actions\n * @author Aave\n **/\ncontract ERC20WithSnapshot is ERC20 {\n  using SafeMath for uint256;\n\n  /// @dev snapshot of a value on a specific block, used for balances\n  struct Snapshot {\n    uint128 blockNumber;\n    uint128 value;\n  }\n\n  mapping(address => mapping(uint256 => Snapshot)) public _snapshots;\n  mapping(address => uint256) public _countsSnapshots;\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\n  /// to control all potential reentrancies by calling back the this contract\n  ITransferHook public _aaveGovernance;\n\n  event SnapshotDone(address owner, uint128 oldValue, uint128 newValue);\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    uint8 decimals\n  ) public ERC20(name, symbol, decimals) {}\n\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\n    _aaveGovernance = aaveGovernance;\n  }\n\n  /**\n   * @dev Writes a snapshot for an owner of tokens\n   * @param owner The owner of the tokens\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\n   * @param newValue The value after the operation\n   */\n  function _writeSnapshot(\n    address owner,\n    uint128 oldValue,\n    uint128 newValue\n  ) internal virtual {\n    uint128 currentBlock = uint128(block.number);\n\n    uint256 ownerCountOfSnapshots = _countsSnapshots[owner];\n    mapping(uint256 => Snapshot) storage snapshotsOwner = _snapshots[owner];\n\n    // Doing multiple operations in the same block\n    if (\n      ownerCountOfSnapshots != 0 &&\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].blockNumber == currentBlock\n    ) {\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].value = newValue;\n    } else {\n      snapshotsOwner[ownerCountOfSnapshots] = Snapshot(currentBlock, newValue);\n      _countsSnapshots[owner] = ownerCountOfSnapshots.add(1);\n    }\n\n    emit SnapshotDone(owner, oldValue, newValue);\n  }\n\n  /**\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\n   * - On _transfer, it writes snapshots for both \"from\" and \"to\"\n   * - On _mint, only for _to\n   * - On _burn, only for _from\n   * @param from the from address\n   * @param to the to address\n   * @param amount the amount to transfer\n   */\n  function _beforeTokenTransfer(\n    address from,\n    address to,\n    uint256 amount\n  ) internal virtual override {\n    if (from == to) {\n      return;\n    }\n\n    if (from != address(0)) {\n      uint256 fromBalance = balanceOf(from);\n      _writeSnapshot(from, uint128(fromBalance), uint128(fromBalance.sub(amount)));\n    }\n    if (to != address(0)) {\n      uint256 toBalance = balanceOf(to);\n      _writeSnapshot(to, uint128(toBalance), uint128(toBalance.add(amount)));\n    }\n\n    // caching the aave governance address to avoid multiple state loads\n    ITransferHook aaveGovernance = _aaveGovernance;\n    if (aaveGovernance != ITransferHook(0)) {\n      aaveGovernance.onTransfer(from, to, amount);\n    }\n  }\n}\n"},"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\nimport {ERC20} from '../lib/ERC20.sol';\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {\n  GovernancePowerDelegationERC20\n} from '@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol';\n\n/**\n * @title ERC20WithSnapshot\n * @notice ERC20 including snapshots of balances on transfer-related actions\n * @author Aave\n **/\nabstract contract GovernancePowerWithSnapshot is GovernancePowerDelegationERC20 {\n  using SafeMath for uint256;\n\n  /**\n   * @dev The following storage layout points to the prior StakedToken.sol implementation:\n   * _snapshots => _votingSnapshots\n   * _snapshotsCounts =>  _votingSnapshotsCounts\n   * _aaveGovernance => _aaveGovernance\n   */\n  mapping(address => mapping(uint256 => Snapshot)) public _votingSnapshots;\n  mapping(address => uint256) public _votingSnapshotsCounts;\n\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\n  /// to control all potential reentrancies by calling back the this contract\n  ITransferHook public _aaveGovernance;\n\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\n    _aaveGovernance = aaveGovernance;\n  }\n}\n"},"@aave/safety-module/contracts/lib/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.5;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {SafeMath} from './SafeMath.sol';\nimport {Address} from './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = address(token).call(data);\n    require(success, 'SafeERC20: low-level call failed');\n\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"},"@aave/safety-module/contracts/lib/SafeMath.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n * Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, 'SafeMath: addition overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, 'SafeMath: subtraction overflow');\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, 'SafeMath: multiplication overflow');\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, 'SafeMath: division by zero');\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, 'SafeMath: modulo by zero');\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n"},"@aave/safety-module/contracts/stake/AaveDistributionManager.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\n\n/**\n * @title AaveDistributionManager\n * @notice Accounting contract to manage multiple staking distributions\n * @author Aave\n **/\ncontract AaveDistributionManager is IAaveDistributionManager {\n  using SafeMath for uint256;\n\n  struct AssetData {\n    uint128 emissionPerSecond;\n    uint128 lastUpdateTimestamp;\n    uint256 index;\n    mapping(address => uint256) users;\n  }\n\n  uint256 public immutable DISTRIBUTION_END;\n\n  address public immutable EMISSION_MANAGER;\n\n  uint8 public constant PRECISION = 18;\n\n  mapping(address => AssetData) public assets;\n\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\n  event AssetIndexUpdated(address indexed asset, uint256 index);\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\n\n  constructor(address emissionManager, uint256 distributionDuration) public {\n    DISTRIBUTION_END = block.timestamp.add(distributionDuration);\n    EMISSION_MANAGER = emissionManager;\n  }\n\n  /**\n   * @dev Configures the distribution of rewards for a list of assets\n   * @param assetsConfigInput The list of configurations to apply\n   **/\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\n    external\n    override\n  {\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\n\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\n\n      _updateAssetStateInternal(\n        assetsConfigInput[i].underlyingAsset,\n        assetConfig,\n        assetsConfigInput[i].totalStaked\n      );\n\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\n\n      emit AssetConfigUpdated(\n        assetsConfigInput[i].underlyingAsset,\n        assetsConfigInput[i].emissionPerSecond\n      );\n    }\n  }\n\n  /**\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\n   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\n   * @param assetConfig Storage pointer to the distribution's config\n   * @param totalStaked Current total of staked assets for this distribution\n   * @return The new distribution index\n   **/\n  function _updateAssetStateInternal(\n    address underlyingAsset,\n    AssetData storage assetConfig,\n    uint256 totalStaked\n  ) internal returns (uint256) {\n    uint256 oldIndex = assetConfig.index;\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\n\n    if (block.timestamp == lastUpdateTimestamp) {\n      return oldIndex;\n    }\n\n    uint256 newIndex =\n      _getAssetIndex(oldIndex, assetConfig.emissionPerSecond, lastUpdateTimestamp, totalStaked);\n\n    if (newIndex != oldIndex) {\n      assetConfig.index = newIndex;\n      emit AssetIndexUpdated(underlyingAsset, newIndex);\n    }\n\n    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);\n\n    return newIndex;\n  }\n\n  /**\n   * @dev Updates the state of an user in a distribution\n   * @param user The user's address\n   * @param asset The address of the reference asset of the distribution\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n   * @param totalStaked Total tokens staked in the distribution\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _updateUserAssetInternal(\n    address user,\n    address asset,\n    uint256 stakedByUser,\n    uint256 totalStaked\n  ) internal returns (uint256) {\n    AssetData storage assetData = assets[asset];\n    uint256 userIndex = assetData.users[user];\n    uint256 accruedRewards = 0;\n\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\n\n    if (userIndex != newIndex) {\n      if (stakedByUser != 0) {\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\n      }\n\n      assetData.users[user] = newIndex;\n      emit UserIndexUpdated(user, asset, newIndex);\n    }\n\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n   * @param user The address of the user\n   * @param stakes List of structs of the user data related with his stake\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\n    internal\n    returns (uint256)\n  {\n    uint256 accruedRewards = 0;\n\n    for (uint256 i = 0; i < stakes.length; i++) {\n      accruedRewards = accruedRewards.add(\n        _updateUserAssetInternal(\n          user,\n          stakes[i].underlyingAsset,\n          stakes[i].stakedByUser,\n          stakes[i].totalStaked\n        )\n      );\n    }\n\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Return the accrued rewards for an user over a list of distribution\n   * @param user The address of the user\n   * @param stakes List of structs of the user data related with his stake\n   * @return The accrued rewards for the user until the moment\n   **/\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\n    internal\n    view\n    returns (uint256)\n  {\n    uint256 accruedRewards = 0;\n\n    for (uint256 i = 0; i < stakes.length; i++) {\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\n      uint256 assetIndex =\n        _getAssetIndex(\n          assetConfig.index,\n          assetConfig.emissionPerSecond,\n          assetConfig.lastUpdateTimestamp,\n          stakes[i].totalStaked\n        );\n\n      accruedRewards = accruedRewards.add(\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\n      );\n    }\n    return accruedRewards;\n  }\n\n  /**\n   * @dev Internal function for the calculation of user's rewards on a distribution\n   * @param principalUserBalance Amount staked by the user on a distribution\n   * @param reserveIndex Current index of the distribution\n   * @param userIndex Index stored for the user, representation his staking moment\n   * @return The rewards\n   **/\n  function _getRewards(\n    uint256 principalUserBalance,\n    uint256 reserveIndex,\n    uint256 userIndex\n  ) internal pure returns (uint256) {\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)).div(10**uint256(PRECISION));\n  }\n\n  /**\n   * @dev Calculates the next value of an specific distribution index, with validations\n   * @param currentIndex Current index of the distribution\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n   * @param lastUpdateTimestamp Last moment this distribution was updated\n   * @param totalBalance of tokens considered for the distribution\n   * @return The new index.\n   **/\n  function _getAssetIndex(\n    uint256 currentIndex,\n    uint256 emissionPerSecond,\n    uint128 lastUpdateTimestamp,\n    uint256 totalBalance\n  ) internal view returns (uint256) {\n    if (\n      emissionPerSecond == 0 ||\n      totalBalance == 0 ||\n      lastUpdateTimestamp == block.timestamp ||\n      lastUpdateTimestamp >= DISTRIBUTION_END\n    ) {\n      return currentIndex;\n    }\n\n    uint256 currentTimestamp =\n      block.timestamp > DISTRIBUTION_END ? DISTRIBUTION_END : block.timestamp;\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\n    return\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\n        currentIndex\n      );\n  }\n\n  /**\n   * @dev Returns the data of an user on a distribution\n   * @param user Address of the user\n   * @param asset The address of the reference asset of the distribution\n   * @return The new index\n   **/\n  function getUserAssetData(address user, address asset) public view returns (uint256) {\n    return assets[asset].users[user];\n  }\n}\n"},"@aave/safety-module/contracts/stake/StakedAave.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {StakedToken} from './StakedToken.sol';\n\n/**\n * @title StakedAave\n * @notice StakedToken with AAVE token as staked token\n * @author Aave\n **/\ncontract StakedAave is StakedToken {\n  string internal constant NAME = 'Staked Aave';\n  string internal constant SYMBOL = 'stkAAVE';\n  uint8 internal constant DECIMALS = 18;\n\n  constructor(\n    IERC20 stakedToken,\n    IERC20 rewardToken,\n    uint256 cooldownSeconds,\n    uint256 unstakeWindow,\n    address rewardsVault,\n    address emissionManager,\n    uint128 distributionDuration\n  )\n    public\n    StakedToken(\n      stakedToken,\n      rewardToken,\n      cooldownSeconds,\n      unstakeWindow,\n      rewardsVault,\n      emissionManager,\n      distributionDuration,\n      NAME,\n      SYMBOL,\n      DECIMALS\n    )\n  {}\n}\n"},"@aave/safety-module/contracts/stake/StakedAaveV2.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {StakedTokenV2} from './StakedTokenV2.sol';\n\n/**\n * @title StakedAaveV2\n * @notice StakedTokenV2 with AAVE token as staked token\n * @author Aave\n **/\ncontract StakedAaveV2 is StakedTokenV2 {\n  string internal constant NAME = 'Staked Aave';\n  string internal constant SYMBOL = 'stkAAVE';\n  uint8 internal constant DECIMALS = 18;\n\n  constructor(\n    IERC20 stakedToken,\n    IERC20 rewardToken,\n    uint256 cooldownSeconds,\n    uint256 unstakeWindow,\n    address rewardsVault,\n    address emissionManager,\n    uint128 distributionDuration,\n    address governance\n  )\n    public\n    StakedTokenV2(\n      stakedToken,\n      rewardToken,\n      cooldownSeconds,\n      unstakeWindow,\n      rewardsVault,\n      emissionManager,\n      distributionDuration,\n      NAME,\n      SYMBOL,\n      DECIMALS,\n      governance\n    )\n  {}\n}\n"},"@aave/safety-module/contracts/stake/StakedToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {IStakedAave} from '../interfaces/IStakedAave.sol';\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\nimport {ERC20WithSnapshot} from '../lib/ERC20WithSnapshot.sol';\nimport {SafeERC20} from '../lib/SafeERC20.sol';\nimport {VersionedInitializable} from '../utils/VersionedInitializable.sol';\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\nimport {AaveDistributionManager} from './AaveDistributionManager.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\n\n/**\n * @title StakedToken\n * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\n * @author Aave\n **/\ncontract StakedToken is\n  IStakedAave,\n  ERC20WithSnapshot,\n  VersionedInitializable,\n  AaveDistributionManager\n{\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n\n  uint256 public constant REVISION = 1;\n\n  IERC20 public immutable STAKED_TOKEN;\n  IERC20 public immutable REWARD_TOKEN;\n  uint256 public immutable COOLDOWN_SECONDS;\n\n  /// @notice Seconds available to redeem once the cooldown period is fullfilled\n  uint256 public immutable UNSTAKE_WINDOW;\n\n  /// @notice Address to pull from the rewards, needs to have approved this contract\n  address public immutable REWARDS_VAULT;\n\n  mapping(address => uint256) public stakerRewardsToClaim;\n  mapping(address => uint256) public stakersCooldowns;\n\n  event Staked(address indexed from, address indexed onBehalfOf, uint256 amount);\n  event Redeem(address indexed from, address indexed to, uint256 amount);\n\n  event RewardsAccrued(address user, uint256 amount);\n  event RewardsClaimed(address indexed from, address indexed to, uint256 amount);\n\n  event Cooldown(address indexed user);\n\n  constructor(\n    IERC20 stakedToken,\n    IERC20 rewardToken,\n    uint256 cooldownSeconds,\n    uint256 unstakeWindow,\n    address rewardsVault,\n    address emissionManager,\n    uint128 distributionDuration,\n    string memory name,\n    string memory symbol,\n    uint8 decimals\n  )\n    public\n    ERC20WithSnapshot(name, symbol, decimals)\n    AaveDistributionManager(emissionManager, distributionDuration)\n  {\n    STAKED_TOKEN = stakedToken;\n    REWARD_TOKEN = rewardToken;\n    COOLDOWN_SECONDS = cooldownSeconds;\n    UNSTAKE_WINDOW = unstakeWindow;\n    REWARDS_VAULT = rewardsVault;\n  }\n\n  /**\n   * @dev Called by the proxy contract\n   **/\n  function initialize(\n    ITransferHook aaveGovernance,\n    string calldata name,\n    string calldata symbol,\n    uint8 decimals\n  ) external initializer {\n    _setName(name);\n    _setSymbol(symbol);\n    _setDecimals(decimals);\n    _setAaveGovernance(aaveGovernance);\n  }\n\n  function stake(address onBehalfOf, uint256 amount) external override {\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\n    uint256 balanceOfUser = balanceOf(onBehalfOf);\n\n    uint256 accruedRewards =\n      _updateUserAssetInternal(onBehalfOf, address(this), balanceOfUser, totalSupply());\n    if (accruedRewards != 0) {\n      emit RewardsAccrued(onBehalfOf, accruedRewards);\n      stakerRewardsToClaim[onBehalfOf] = stakerRewardsToClaim[onBehalfOf].add(accruedRewards);\n    }\n\n    stakersCooldowns[onBehalfOf] = getNextCooldownTimestamp(0, amount, onBehalfOf, balanceOfUser);\n\n    _mint(onBehalfOf, amount);\n    IERC20(STAKED_TOKEN).safeTransferFrom(msg.sender, address(this), amount);\n\n    emit Staked(msg.sender, onBehalfOf, amount);\n  }\n\n  /**\n   * @dev Redeems staked tokens, and stop earning rewards\n   * @param to Address to redeem to\n   * @param amount Amount to redeem\n   **/\n  function redeem(address to, uint256 amount) external override {\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\n    //solium-disable-next-line\n    uint256 cooldownStartTimestamp = stakersCooldowns[msg.sender];\n    require(\n      block.timestamp > cooldownStartTimestamp.add(COOLDOWN_SECONDS),\n      'INSUFFICIENT_COOLDOWN'\n    );\n    require(\n      block.timestamp.sub(cooldownStartTimestamp.add(COOLDOWN_SECONDS)) <= UNSTAKE_WINDOW,\n      'UNSTAKE_WINDOW_FINISHED'\n    );\n    uint256 balanceOfMessageSender = balanceOf(msg.sender);\n\n    uint256 amountToRedeem = (amount > balanceOfMessageSender) ? balanceOfMessageSender : amount;\n\n    _updateCurrentUnclaimedRewards(msg.sender, balanceOfMessageSender, true);\n\n    _burn(msg.sender, amountToRedeem);\n\n    if (balanceOfMessageSender.sub(amountToRedeem) == 0) {\n      stakersCooldowns[msg.sender] = 0;\n    }\n\n    IERC20(STAKED_TOKEN).safeTransfer(to, amountToRedeem);\n\n    emit Redeem(msg.sender, to, amountToRedeem);\n  }\n\n  /**\n   * @dev Activates the cooldown period to unstake\n   * - It can't be called if the user is not staking\n   **/\n  function cooldown() external override {\n    require(balanceOf(msg.sender) != 0, 'INVALID_BALANCE_ON_COOLDOWN');\n    //solium-disable-next-line\n    stakersCooldowns[msg.sender] = block.timestamp;\n\n    emit Cooldown(msg.sender);\n  }\n\n  /**\n   * @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\n   * @param to Address to stake for\n   * @param amount Amount to stake\n   **/\n  function claimRewards(address to, uint256 amount) external override {\n    uint256 newTotalRewards =\n      _updateCurrentUnclaimedRewards(msg.sender, balanceOf(msg.sender), false);\n    uint256 amountToClaim = (amount == type(uint256).max) ? newTotalRewards : amount;\n\n    stakerRewardsToClaim[msg.sender] = newTotalRewards.sub(amountToClaim, 'INVALID_AMOUNT');\n\n    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);\n\n    emit RewardsClaimed(msg.sender, to, amountToClaim);\n  }\n\n  /**\n   * @dev Internal ERC20 _transfer of the tokenized staked tokens\n   * @param from Address to transfer from\n   * @param to Address to transfer to\n   * @param amount Amount to transfer\n   **/\n  function _transfer(\n    address from,\n    address to,\n    uint256 amount\n  ) internal override {\n    uint256 balanceOfFrom = balanceOf(from);\n    // Sender\n    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);\n\n    // Recipient\n    if (from != to) {\n      uint256 balanceOfTo = balanceOf(to);\n      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);\n\n      uint256 previousSenderCooldown = stakersCooldowns[from];\n      stakersCooldowns[to] = getNextCooldownTimestamp(\n        previousSenderCooldown,\n        amount,\n        to,\n        balanceOfTo\n      );\n      // if cooldown was set and whole balance of sender was transferred - clear cooldown\n      if (balanceOfFrom == amount && previousSenderCooldown != 0) {\n        stakersCooldowns[from] = 0;\n      }\n    }\n\n    super._transfer(from, to, amount);\n  }\n\n  /**\n   * @dev Updates the user state related with his accrued rewards\n   * @param user Address of the user\n   * @param userBalance The current balance of the user\n   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\n   * @return The unclaimed rewards that were added to the total accrued\n   **/\n  function _updateCurrentUnclaimedRewards(\n    address user,\n    uint256 userBalance,\n    bool updateStorage\n  ) internal returns (uint256) {\n    uint256 accruedRewards =\n      _updateUserAssetInternal(user, address(this), userBalance, totalSupply());\n    uint256 unclaimedRewards = stakerRewardsToClaim[user].add(accruedRewards);\n\n    if (accruedRewards != 0) {\n      if (updateStorage) {\n        stakerRewardsToClaim[user] = unclaimedRewards;\n      }\n      emit RewardsAccrued(user, accruedRewards);\n    }\n\n    return unclaimedRewards;\n  }\n\n  /**\n   * @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\n   *  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient\n   *  - Weighted average of from/to cooldown timestamps if:\n   *    # The sender doesn't have the cooldown activated (timestamp 0).\n   *    # The sender timestamp is expired\n   *    # The sender has a \"worse\" timestamp\n   *  - If the receiver's cooldown timestamp expired (too old), the next is 0\n   * @param fromCooldownTimestamp Cooldown timestamp of the sender\n   * @param amountToReceive Amount\n   * @param toAddress Address of the recipient\n   * @param toBalance Current balance of the receiver\n   * @return The new cooldown timestamp\n   **/\n  function getNextCooldownTimestamp(\n    uint256 fromCooldownTimestamp,\n    uint256 amountToReceive,\n    address toAddress,\n    uint256 toBalance\n  ) public view returns (uint256) {\n    uint256 toCooldownTimestamp = stakersCooldowns[toAddress];\n    if (toCooldownTimestamp == 0) {\n      return 0;\n    }\n\n    uint256 minimalValidCooldownTimestamp =\n      block.timestamp.sub(COOLDOWN_SECONDS).sub(UNSTAKE_WINDOW);\n\n    if (minimalValidCooldownTimestamp > toCooldownTimestamp) {\n      toCooldownTimestamp = 0;\n    } else {\n      uint256 fromCooldownTimestamp =\n        (minimalValidCooldownTimestamp > fromCooldownTimestamp)\n          ? block.timestamp\n          : fromCooldownTimestamp;\n\n      if (fromCooldownTimestamp < toCooldownTimestamp) {\n        return toCooldownTimestamp;\n      } else {\n        toCooldownTimestamp = (\n          amountToReceive.mul(fromCooldownTimestamp).add(toBalance.mul(toCooldownTimestamp))\n        )\n          .div(amountToReceive.add(toBalance));\n      }\n    }\n    return toCooldownTimestamp;\n  }\n\n  /**\n   * @dev Return the total rewards pending to claim by an staker\n   * @param staker The staker address\n   * @return The rewards\n   */\n  function getTotalRewardsBalance(address staker) external view returns (uint256) {\n    DistributionTypes.UserStakeInput[] memory userStakeInputs =\n      new DistributionTypes.UserStakeInput[](1);\n    userStakeInputs[0] = DistributionTypes.UserStakeInput({\n      underlyingAsset: address(this),\n      stakedByUser: balanceOf(staker),\n      totalStaked: totalSupply()\n    });\n    return stakerRewardsToClaim[staker].add(_getUnclaimedRewards(staker, userStakeInputs));\n  }\n\n  /**\n   * @dev returns the revision of the implementation contract\n   * @return The revision\n   */\n  function getRevision() internal pure override returns (uint256) {\n    return REVISION;\n  }\n}\n"},"@aave/safety-module/contracts/stake/StakedTokenV2.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\npragma experimental ABIEncoderV2;\n\nimport {ERC20} from '@aave/aave-token/contracts/open-zeppelin/ERC20.sol';\n\nimport {IERC20} from '../interfaces/IERC20.sol';\nimport {IStakedAave} from '../interfaces/IStakedAave.sol';\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\n\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\nimport {SafeMath} from '../lib/SafeMath.sol';\nimport {SafeERC20} from '../lib/SafeERC20.sol';\n\nimport {VersionedInitializable} from '../utils/VersionedInitializable.sol';\nimport {AaveDistributionManager} from './AaveDistributionManager.sol';\nimport {GovernancePowerWithSnapshot} from '../lib/GovernancePowerWithSnapshot.sol';\n\n/**\n * @title StakedToken\n * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\n * @author Aave\n **/\ncontract StakedTokenV2 is\n  IStakedAave,\n  GovernancePowerWithSnapshot,\n  VersionedInitializable,\n  AaveDistributionManager\n{\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n\n  /// @dev Start of Storage layout from StakedToken v1\n  uint256 public constant REVISION = 2;\n\n  IERC20 public immutable STAKED_TOKEN;\n  IERC20 public immutable REWARD_TOKEN;\n  uint256 public immutable COOLDOWN_SECONDS;\n\n  /// @notice Seconds available to redeem once the cooldown period is fullfilled\n  uint256 public immutable UNSTAKE_WINDOW;\n\n  /// @notice Address to pull from the rewards, needs to have approved this contract\n  address public immutable REWARDS_VAULT;\n\n  mapping(address => uint256) public stakerRewardsToClaim;\n  mapping(address => uint256) public stakersCooldowns;\n\n  /// @dev End of Storage layout from StakedToken v1\n\n  /// @dev To see the voting mappings, go to GovernancePowerWithSnapshot.sol\n  mapping(address => address) internal _votingDelegates;\n\n  mapping(address => mapping(uint256 => Snapshot)) internal _propositionPowerSnapshots;\n  mapping(address => uint256) internal _propositionPowerSnapshotsCounts;\n  mapping(address => address) internal _propositionPowerDelegates;\n\n  bytes32 public DOMAIN_SEPARATOR;\n  bytes public constant EIP712_REVISION = bytes('1');\n  bytes32 internal constant EIP712_DOMAIN =\n    keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)');\n  bytes32 public constant PERMIT_TYPEHASH =\n    keccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');\n\n  /// @dev owner => next valid nonce to submit with permit()\n  mapping(address => uint256) public _nonces;\n\n  event Staked(address indexed from, address indexed onBehalfOf, uint256 amount);\n  event Redeem(address indexed from, address indexed to, uint256 amount);\n\n  event RewardsAccrued(address user, uint256 amount);\n  event RewardsClaimed(address indexed from, address indexed to, uint256 amount);\n\n  event Cooldown(address indexed user);\n\n  constructor(\n    IERC20 stakedToken,\n    IERC20 rewardToken,\n    uint256 cooldownSeconds,\n    uint256 unstakeWindow,\n    address rewardsVault,\n    address emissionManager,\n    uint128 distributionDuration,\n    string memory name,\n    string memory symbol,\n    uint8 decimals,\n    address governance\n  ) public ERC20(name, symbol) AaveDistributionManager(emissionManager, distributionDuration) {\n    STAKED_TOKEN = stakedToken;\n    REWARD_TOKEN = rewardToken;\n    COOLDOWN_SECONDS = cooldownSeconds;\n    UNSTAKE_WINDOW = unstakeWindow;\n    REWARDS_VAULT = rewardsVault;\n    _aaveGovernance = ITransferHook(governance);\n    ERC20._setupDecimals(decimals);\n  }\n\n  /**\n   * @dev Called by the proxy contract\n   **/\n  function initialize() external initializer {\n    uint256 chainId;\n\n    //solium-disable-next-line\n    assembly {\n      chainId := chainid()\n    }\n\n    DOMAIN_SEPARATOR = keccak256(\n      abi.encode(\n        EIP712_DOMAIN,\n        keccak256(bytes(name())),\n        keccak256(EIP712_REVISION),\n        chainId,\n        address(this)\n      )\n    );\n  }\n\n  function stake(address onBehalfOf, uint256 amount) external override {\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\n    uint256 balanceOfUser = balanceOf(onBehalfOf);\n\n    uint256 accruedRewards =\n      _updateUserAssetInternal(onBehalfOf, address(this), balanceOfUser, totalSupply());\n    if (accruedRewards != 0) {\n      emit RewardsAccrued(onBehalfOf, accruedRewards);\n      stakerRewardsToClaim[onBehalfOf] = stakerRewardsToClaim[onBehalfOf].add(accruedRewards);\n    }\n\n    stakersCooldowns[onBehalfOf] = getNextCooldownTimestamp(0, amount, onBehalfOf, balanceOfUser);\n\n    _mint(onBehalfOf, amount);\n    IERC20(STAKED_TOKEN).safeTransferFrom(msg.sender, address(this), amount);\n\n    emit Staked(msg.sender, onBehalfOf, amount);\n  }\n\n  /**\n   * @dev Redeems staked tokens, and stop earning rewards\n   * @param to Address to redeem to\n   * @param amount Amount to redeem\n   **/\n  function redeem(address to, uint256 amount) external override {\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\n    //solium-disable-next-line\n    uint256 cooldownStartTimestamp = stakersCooldowns[msg.sender];\n    require(\n      block.timestamp > cooldownStartTimestamp.add(COOLDOWN_SECONDS),\n      'INSUFFICIENT_COOLDOWN'\n    );\n    require(\n      block.timestamp.sub(cooldownStartTimestamp.add(COOLDOWN_SECONDS)) <= UNSTAKE_WINDOW,\n      'UNSTAKE_WINDOW_FINISHED'\n    );\n    uint256 balanceOfMessageSender = balanceOf(msg.sender);\n\n    uint256 amountToRedeem = (amount > balanceOfMessageSender) ? balanceOfMessageSender : amount;\n\n    _updateCurrentUnclaimedRewards(msg.sender, balanceOfMessageSender, true);\n\n    _burn(msg.sender, amountToRedeem);\n\n    if (balanceOfMessageSender.sub(amountToRedeem) == 0) {\n      stakersCooldowns[msg.sender] = 0;\n    }\n\n    IERC20(STAKED_TOKEN).safeTransfer(to, amountToRedeem);\n\n    emit Redeem(msg.sender, to, amountToRedeem);\n  }\n\n  /**\n   * @dev Activates the cooldown period to unstake\n   * - It can't be called if the user is not staking\n   **/\n  function cooldown() external override {\n    require(balanceOf(msg.sender) != 0, 'INVALID_BALANCE_ON_COOLDOWN');\n    //solium-disable-next-line\n    stakersCooldowns[msg.sender] = block.timestamp;\n\n    emit Cooldown(msg.sender);\n  }\n\n  /**\n   * @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\n   * @param to Address to stake for\n   * @param amount Amount to stake\n   **/\n  function claimRewards(address to, uint256 amount) external override {\n    uint256 newTotalRewards =\n      _updateCurrentUnclaimedRewards(msg.sender, balanceOf(msg.sender), false);\n    uint256 amountToClaim = (amount == type(uint256).max) ? newTotalRewards : amount;\n\n    stakerRewardsToClaim[msg.sender] = newTotalRewards.sub(amountToClaim, 'INVALID_AMOUNT');\n\n    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);\n\n    emit RewardsClaimed(msg.sender, to, amountToClaim);\n  }\n\n  /**\n   * @dev Internal ERC20 _transfer of the tokenized staked tokens\n   * @param from Address to transfer from\n   * @param to Address to transfer to\n   * @param amount Amount to transfer\n   **/\n  function _transfer(\n    address from,\n    address to,\n    uint256 amount\n  ) internal override {\n    uint256 balanceOfFrom = balanceOf(from);\n    // Sender\n    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);\n\n    // Recipient\n    if (from != to) {\n      uint256 balanceOfTo = balanceOf(to);\n      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);\n\n      uint256 previousSenderCooldown = stakersCooldowns[from];\n      stakersCooldowns[to] = getNextCooldownTimestamp(\n        previousSenderCooldown,\n        amount,\n        to,\n        balanceOfTo\n      );\n      // if cooldown was set and whole balance of sender was transferred - clear cooldown\n      if (balanceOfFrom == amount && previousSenderCooldown != 0) {\n        stakersCooldowns[from] = 0;\n      }\n    }\n\n    super._transfer(from, to, amount);\n  }\n\n  /**\n   * @dev Updates the user state related with his accrued rewards\n   * @param user Address of the user\n   * @param userBalance The current balance of the user\n   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\n   * @return The unclaimed rewards that were added to the total accrued\n   **/\n  function _updateCurrentUnclaimedRewards(\n    address user,\n    uint256 userBalance,\n    bool updateStorage\n  ) internal returns (uint256) {\n    uint256 accruedRewards =\n      _updateUserAssetInternal(user, address(this), userBalance, totalSupply());\n    uint256 unclaimedRewards = stakerRewardsToClaim[user].add(accruedRewards);\n\n    if (accruedRewards != 0) {\n      if (updateStorage) {\n        stakerRewardsToClaim[user] = unclaimedRewards;\n      }\n      emit RewardsAccrued(user, accruedRewards);\n    }\n\n    return unclaimedRewards;\n  }\n\n  /**\n   * @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\n   *  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient\n   *  - Weighted average of from/to cooldown timestamps if:\n   *    # The sender doesn't have the cooldown activated (timestamp 0).\n   *    # The sender timestamp is expired\n   *    # The sender has a \"worse\" timestamp\n   *  - If the receiver's cooldown timestamp expired (too old), the next is 0\n   * @param fromCooldownTimestamp Cooldown timestamp of the sender\n   * @param amountToReceive Amount\n   * @param toAddress Address of the recipient\n   * @param toBalance Current balance of the receiver\n   * @return The new cooldown timestamp\n   **/\n  function getNextCooldownTimestamp(\n    uint256 fromCooldownTimestamp,\n    uint256 amountToReceive,\n    address toAddress,\n    uint256 toBalance\n  ) public view returns (uint256) {\n    uint256 toCooldownTimestamp = stakersCooldowns[toAddress];\n    if (toCooldownTimestamp == 0) {\n      return 0;\n    }\n\n    uint256 minimalValidCooldownTimestamp =\n      block.timestamp.sub(COOLDOWN_SECONDS).sub(UNSTAKE_WINDOW);\n\n    if (minimalValidCooldownTimestamp > toCooldownTimestamp) {\n      toCooldownTimestamp = 0;\n    } else {\n      uint256 fromCooldownTimestamp =\n        (minimalValidCooldownTimestamp > fromCooldownTimestamp)\n          ? block.timestamp\n          : fromCooldownTimestamp;\n\n      if (fromCooldownTimestamp < toCooldownTimestamp) {\n        return toCooldownTimestamp;\n      } else {\n        toCooldownTimestamp = (\n          amountToReceive.mul(fromCooldownTimestamp).add(toBalance.mul(toCooldownTimestamp))\n        )\n          .div(amountToReceive.add(toBalance));\n      }\n    }\n    return toCooldownTimestamp;\n  }\n\n  /**\n   * @dev Return the total rewards pending to claim by an staker\n   * @param staker The staker address\n   * @return The rewards\n   */\n  function getTotalRewardsBalance(address staker) external view returns (uint256) {\n    DistributionTypes.UserStakeInput[] memory userStakeInputs =\n      new DistributionTypes.UserStakeInput[](1);\n    userStakeInputs[0] = DistributionTypes.UserStakeInput({\n      underlyingAsset: address(this),\n      stakedByUser: balanceOf(staker),\n      totalStaked: totalSupply()\n    });\n    return stakerRewardsToClaim[staker].add(_getUnclaimedRewards(staker, userStakeInputs));\n  }\n\n  /**\n   * @dev returns the revision of the implementation contract\n   * @return The revision\n   */\n  function getRevision() internal pure override returns (uint256) {\n    return REVISION;\n  }\n\n  /**\n   * @dev implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\n   * @param owner the owner of the funds\n   * @param spender the spender\n   * @param value the amount\n   * @param deadline the deadline timestamp, type(uint256).max for no deadline\n   * @param v signature param\n   * @param s signature param\n   * @param r signature param\n   */\n\n  function permit(\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external {\n    require(owner != address(0), 'INVALID_OWNER');\n    //solium-disable-next-line\n    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\n    uint256 currentValidNonce = _nonces[owner];\n    bytes32 digest =\n      keccak256(\n        abi.encodePacked(\n          '\\x19\\x01',\n          DOMAIN_SEPARATOR,\n          keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))\n        )\n      );\n\n    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\n    _nonces[owner] = currentValidNonce.add(1);\n    _approve(owner, spender, value);\n  }\n\n  /**\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\n   * - On _transfer, it writes snapshots for both \"from\" and \"to\"\n   * - On _mint, only for _to\n   * - On _burn, only for _from\n   * @param from the from address\n   * @param to the to address\n   * @param amount the amount to transfer\n   */\n  function _beforeTokenTransfer(\n    address from,\n    address to,\n    uint256 amount\n  ) internal override {\n    address votingFromDelegatee = _votingDelegates[from];\n    address votingToDelegatee = _votingDelegates[to];\n\n    if (votingFromDelegatee == address(0)) {\n      votingFromDelegatee = from;\n    }\n    if (votingToDelegatee == address(0)) {\n      votingToDelegatee = to;\n    }\n\n    _moveDelegatesByType(\n      votingFromDelegatee,\n      votingToDelegatee,\n      amount,\n      DelegationType.VOTING_POWER\n    );\n\n    address propPowerFromDelegatee = _propositionPowerDelegates[from];\n    address propPowerToDelegatee = _propositionPowerDelegates[to];\n\n    if (propPowerFromDelegatee == address(0)) {\n      propPowerFromDelegatee = from;\n    }\n    if (propPowerToDelegatee == address(0)) {\n      propPowerToDelegatee = to;\n    }\n\n    _moveDelegatesByType(\n      propPowerFromDelegatee,\n      propPowerToDelegatee,\n      amount,\n      DelegationType.PROPOSITION_POWER\n    );\n\n    // caching the aave governance address to avoid multiple state loads\n    ITransferHook aaveGovernance = _aaveGovernance;\n    if (aaveGovernance != ITransferHook(0)) {\n      aaveGovernance.onTransfer(from, to, amount);\n    }\n  }\n\n  function _getDelegationDataByType(DelegationType delegationType)\n    internal\n    view\n    override\n    returns (\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\n      mapping(address => uint256) storage, //snapshots count\n      mapping(address => address) storage //delegatees list\n    )\n  {\n    if (delegationType == DelegationType.VOTING_POWER) {\n      return (_votingSnapshots, _votingSnapshotsCounts, _votingDelegates);\n    } else {\n      return (\n        _propositionPowerSnapshots,\n        _propositionPowerSnapshotsCounts,\n        _propositionPowerDelegates\n      );\n    }\n  }\n\n  /**\n   * @dev Delegates power from signatory to `delegatee`\n   * @param delegatee The address to delegate votes to\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n   * @param nonce The contract state required to match the signature\n   * @param expiry The time at which to expire the signature\n   * @param v The recovery byte of the signature\n   * @param r Half of the ECDSA signature pair\n   * @param s Half of the ECDSA signature pair\n   */\n  function delegateByTypeBySig(\n    address delegatee,\n    DelegationType delegationType,\n    uint256 nonce,\n    uint256 expiry,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) public {\n    bytes32 structHash =\n      keccak256(\n        abi.encode(DELEGATE_BY_TYPE_TYPEHASH, delegatee, uint256(delegationType), nonce, expiry)\n      );\n    bytes32 digest = keccak256(abi.encodePacked('\\x19\\x01', DOMAIN_SEPARATOR, structHash));\n    address signatory = ecrecover(digest, v, r, s);\n    require(signatory != address(0), 'INVALID_SIGNATURE');\n    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');\n    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');\n    _delegateByType(signatory, delegatee, delegationType);\n  }\n\n  /**\n   * @dev Delegates power from signatory to `delegatee`\n   * @param delegatee The address to delegate votes to\n   * @param nonce The contract state required to match the signature\n   * @param expiry The time at which to expire the signature\n   * @param v The recovery byte of the signature\n   * @param r Half of the ECDSA signature pair\n   * @param s Half of the ECDSA signature pair\n   */\n  function delegateBySig(\n    address delegatee,\n    uint256 nonce,\n    uint256 expiry,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) public {\n    bytes32 structHash = keccak256(abi.encode(DELEGATE_TYPEHASH, delegatee, nonce, expiry));\n    bytes32 digest = keccak256(abi.encodePacked('\\x19\\x01', DOMAIN_SEPARATOR, structHash));\n    address signatory = ecrecover(digest, v, r, s);\n    require(signatory != address(0), 'INVALID_SIGNATURE');\n    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');\n    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');\n    _delegateByType(signatory, delegatee, DelegationType.VOTING_POWER);\n    _delegateByType(signatory, delegatee, DelegationType.PROPOSITION_POWER);\n  }\n}\n"},"@aave/safety-module/contracts/utils/VersionedInitializable.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity 0.7.5;\n\n/**\n * @title VersionedInitializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n *\n * @author Aave, inspired by the OpenZeppelin Initializable contract\n */\nabstract contract VersionedInitializable {\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  uint256 internal lastInitializedRevision = 0;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    uint256 revision = getRevision();\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\n\n    lastInitializedRevision = revision;\n\n    _;\n  }\n\n  /// @dev returns the revision number of the contract.\n  /// Needs to be defined in the inherited class as a constant.\n  function getRevision() internal pure virtual returns (uint256);\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"},"contracts/hardhat-dependency-compiler/@aave/safety-module/contracts/stake/StakedAave.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity >0.0.0;\nimport '@aave/safety-module/contracts/stake/StakedAave.sol';\n"},"contracts/hardhat-dependency-compiler/@aave/safety-module/contracts/stake/StakedAaveV2.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity >0.0.0;\nimport '@aave/safety-module/contracts/stake/StakedAaveV2.sol';\n"}},"settings":{"optimizer":{"enabled":true,"runs":100000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"@aave/aave-token/contracts/open-zeppelin/Address.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@aave/aave-token/contracts/open-zeppelin/Address.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:57:18: Warning: This declaration shadows an existing declaration.\n    constructor (string memory name, string memory symbol) public {\n                 ^----------------^\n@aave/aave-token/contracts/open-zeppelin/ERC20.sol:66:5: The shadowed declaration is here:\n    function name() public view returns (string memory) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2287,"file":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","message":"The shadowed declaration is here:","start":2206}],"severity":"warning","sourceLocation":{"end":2031,"file":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","start":2013},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:57:38: Warning: This declaration shadows an existing declaration.\n    constructor (string memory name, string memory symbol) public {\n                                     ^------------------^\n@aave/aave-token/contracts/open-zeppelin/ERC20.sol:74:5: The shadowed declaration is here:\n    function symbol() public view returns (string memory) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2485,"file":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","message":"The shadowed declaration is here:","start":2400}],"severity":"warning","sourceLocation":{"end":2053,"file":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","start":2033},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/safety-module/contracts/lib/ERC20.sol:25:5: Warning: This declaration shadows an existing declaration.\n    string memory name,\n    ^----------------^\n@aave/safety-module/contracts/lib/ERC20.sol:37:3: The shadowed declaration is here:\n  function name() public view override returns (string memory) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":950,"file":"@aave/safety-module/contracts/lib/ERC20.sol","message":"The shadowed declaration is here:","start":866}],"severity":"warning","sourceLocation":{"end":685,"file":"@aave/safety-module/contracts/lib/ERC20.sol","start":667},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/safety-module/contracts/lib/ERC20.sol:26:5: Warning: This declaration shadows an existing declaration.\n    string memory symbol,\n    ^------------------^\n@aave/safety-module/contracts/lib/ERC20.sol:44:3: The shadowed declaration is here:\n  function symbol() public view override returns (string memory) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1092,"file":"@aave/safety-module/contracts/lib/ERC20.sol","message":"The shadowed declaration is here:","start":1004}],"severity":"warning","sourceLocation":{"end":711,"file":"@aave/safety-module/contracts/lib/ERC20.sol","start":691},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/safety-module/contracts/lib/ERC20.sol:27:5: Warning: This declaration shadows an existing declaration.\n    uint8 decimals\n    ^------------^\n@aave/safety-module/contracts/lib/ERC20.sol:51:3: The shadowed declaration is here:\n  function decimals() public view override returns (uint8) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1232,"file":"@aave/safety-module/contracts/lib/ERC20.sol","message":"The shadowed declaration is here:","start":1148}],"severity":"warning","sourceLocation":{"end":731,"file":"@aave/safety-module/contracts/lib/ERC20.sol","start":717},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/safety-module/contracts/stake/StakedToken.sol:265:7: Warning: This declaration shadows an existing declaration.\n      uint256 fromCooldownTimestamp =\n      ^---------------------------^\n@aave/safety-module/contracts/stake/StakedToken.sol:249:5: The shadowed declaration is here:\n    uint256 fromCooldownTimestamp,\n    ^---------------------------^\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":8392,"file":"@aave/safety-module/contracts/stake/StakedToken.sol","message":"The shadowed declaration is here:","start":8363}],"severity":"warning","sourceLocation":{"end":8878,"file":"@aave/safety-module/contracts/stake/StakedToken.sol","start":8849},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:295:7: Warning: This declaration shadows an existing declaration.\n      uint256 fromCooldownTimestamp =\n      ^---------------------------^\n@aave/safety-module/contracts/stake/StakedTokenV2.sol:279:5: The shadowed declaration is here:\n    uint256 fromCooldownTimestamp,\n    ^---------------------------^\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":9614,"file":"@aave/safety-module/contracts/stake/StakedTokenV2.sol","message":"The shadowed declaration is here:","start":9585}],"severity":"warning","sourceLocation":{"end":10100,"file":"@aave/safety-module/contracts/stake/StakedTokenV2.sol","start":10071},"type":"Warning"},{"component":"general","errorCode":"5815","formattedMessage":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol:33:3: Warning: Interface functions are implicitly \"virtual\"\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\n  ^-----------------------------------------------------------------------------------------^\n","message":"Interface functions are implicitly \"virtual\"","severity":"warning","sourceLocation":{"end":1212,"file":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","start":1121},"type":"Warning"},{"component":"general","errorCode":"5815","formattedMessage":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol:38:3: Warning: Interface functions are implicitly \"virtual\"\n  function delegate(address delegatee) external virtual;\n  ^----------------------------------------------------^\n","message":"Interface functions are implicitly \"virtual\"","severity":"warning","sourceLocation":{"end":1404,"file":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","start":1350},"type":"Warning"},{"component":"general","errorCode":"5815","formattedMessage":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol:43:3: Warning: Interface functions are implicitly \"virtual\"\n  function getDelegateeByType(address delegator, DelegationType delegationType)\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Interface functions are implicitly \"virtual\"","severity":"warning","sourceLocation":{"end":1648,"file":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","start":1514},"type":"Warning"},{"component":"general","errorCode":"5815","formattedMessage":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol:54:3: Warning: Interface functions are implicitly \"virtual\"\n  function getPowerCurrent(address user, DelegationType delegationType)\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Interface functions are implicitly \"virtual\"","severity":"warning","sourceLocation":{"end":1953,"file":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","start":1827},"type":"Warning"},{"component":"general","errorCode":"5815","formattedMessage":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol:64:3: Warning: Interface functions are implicitly \"virtual\"\n  function getPowerAtBlock(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Interface functions are implicitly \"virtual\"","severity":"warning","sourceLocation":{"end":2210,"file":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","start":2063},"type":"Warning"},{"component":"general","errorCode":"5815","formattedMessage":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol:73:3: Warning: Interface functions are implicitly \"virtual\"\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\n  ^----------------------------------------------------------------------------------^\n","message":"Interface functions are implicitly \"virtual\"","severity":"warning","sourceLocation":{"end":2371,"file":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","start":2287},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:57:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor (string memory name, string memory symbol) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2141,"file":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","start":2000},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/lib/ERC20.sol:24:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":814,"file":"@aave/safety-module/contracts/lib/ERC20.sol","start":650},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:31:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":1197,"file":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol","start":1072},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol:36:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(address emissionManager, uint256 distributionDuration) public {\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":1253,"file":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol","start":1068},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/stake/StakedToken.sol:52:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2442,"file":"@aave/safety-module/contracts/stake/StakedToken.sol","start":1858},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/stake/StakedAave.sol:18:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":911,"file":"@aave/safety-module/contracts/stake/StakedAave.sol","start":470},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:76:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":3585,"file":"@aave/safety-module/contracts/stake/StakedTokenV2.sol","start":2928},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:18:3: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  constructor(\n  ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":967,"file":"@aave/safety-module/contracts/stake/StakedAaveV2.sol","start":482},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:108:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {\n                         ^-----------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3647,"file":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol","start":3628},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:274:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    uint128 oldValue,\n    ^--------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9033,"file":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol","start":9017},"type":"Warning"}],"sources":{"@aave/aave-token/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"61:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"155:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"246:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8,"src":"272:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"271:9:0"},"scope":77,"src":"226:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"287:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":16,"src":"383:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"383:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"382:17:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":16,"src":"423:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"422:9:0"},"scope":77,"src":"364:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"438:209:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":26,"src":"670:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"670:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":26,"src":"689:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"669:35:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":26,"src":"723:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23,"name":"bool","nodeType":"ElementaryTypeName","src":"723:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"722:6:0"},"scope":77,"src":"652:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"735:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":36,"src":"1023:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":36,"src":"1038:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1038:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1022:32:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":36,"src":"1078:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1077:9:0"},"scope":77,"src":"1004:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1093:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":46,"src":"1757:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1757:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":46,"src":"1774:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:33:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":46,"src":"1808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1807:6:0"},"scope":77,"src":"1740:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1820:296:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":58,"src":"2143:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":58,"src":"2159:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2159:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":58,"src":"2178:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2142:51:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":58,"src":"2212:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2212:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2211:6:0"},"scope":77,"src":"2121:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2224:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":67,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":67,"src":"2402:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":67,"src":"2424:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2424:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":67,"src":"2444:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2444:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2401:57:0"},"src":"2387:72:0"},{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2465:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":76,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":76,"src":"2633:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2633:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":76,"src":"2656:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":76,"src":"2681:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:63:0"},"src":"2618:78:0"}],"scope":78,"src":"132:2566:0"}],"src":"37:2661:0"},"id":0},"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","exportedSymbols":{"IGovernancePowerDelegationToken":[155]},"id":156,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":155,"linearizedBaseContracts":[155],"name":"IGovernancePowerDelegationToken","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGovernancePowerDelegationToken.DelegationType","id":82,"members":[{"id":80,"name":"VOTING_POWER","nodeType":"EnumValue","src":"131:12:1"},{"id":81,"name":"PROPOSITION_POWER","nodeType":"EnumValue","src":"145:17:1"}],"name":"DelegationType","nodeType":"EnumDefinition","src":"110:53:1"},{"anonymous":false,"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"167:217:1","text":" @dev emitted when a user delegates to another\n @param delegator the delegator\n @param delegatee the delegatee\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"},"id":91,"name":"DelegateChanged","nodeType":"EventDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"indexed":true,"mutability":"mutable","name":"delegator","nodeType":"VariableDeclaration","scope":91,"src":"414:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":true,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":91,"src":"445:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":91,"src":"476:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":88,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"476:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"408:101:1"},"src":"387:123:1"},{"anonymous":false,"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"514:287:1","text":" @dev emitted when an action changes the delegated power of a user\n @param user the user which delegated power has changed\n @param amount the amount of delegated power for the user\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"},"id":100,"name":"DelegatedPowerChanged","nodeType":"EventDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":100,"src":"832:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"832:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":96,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":100,"src":"854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"indexed":false,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":100,"src":"870:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":97,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"870:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"831:69:1"},"src":"804:97:1"},{"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"905:213:1","text":" @dev delegates the specific power to a delegatee\n @param delegatee the user which delegated power has changed\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"},"functionSelector":"dc937e1c","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"delegateByType","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":108,"src":"1145:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":108,"src":"1164:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":104,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"1164:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"1144:50:1"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"1211:0:1"},"scope":155,"src":"1121:91:1","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1215:132:1","text":" @dev delegates all the powers to a specific user\n @param delegatee the user to which the power will be delegated*"},"functionSelector":"5c19a95c","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":114,"src":"1368:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"1368:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1367:19:1"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"1403:0:1"},"scope":155,"src":"1350:54:1","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1407:104:1","text":" @dev returns the delegatee of an user\n @param delegator the address of the delegator*"},"functionSelector":"6f50458d","id":124,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegateeByType","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"delegator","nodeType":"VariableDeclaration","scope":124,"src":"1542:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"1542:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":124,"src":"1561:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":118,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"1561:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"1541:50:1"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":124,"src":"1639:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:9:1"},"scope":155,"src":"1514:134:1","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"1652:172:1","text":" @dev returns the current delegated power of a user. The current power is the\n power delegated at the time of the last snapshot\n @param user the user*"},"functionSelector":"b2f4201d","id":134,"implemented":false,"kind":"function","modifiers":[],"name":"getPowerCurrent","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":134,"src":"1852:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":134,"src":"1866:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":128,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"1866:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"1851:45:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":134,"src":"1944:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1944:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1943:9:1"},"scope":155,"src":"1827:126:1","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"1957:103:1","text":" @dev returns the delegated power of a user at a certain block\n @param user the user*"},"functionSelector":"c2ffbb91","id":146,"implemented":false,"kind":"function","modifiers":[],"name":"getPowerAtBlock","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":146,"src":"2093:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":146,"src":"2111:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":146,"src":"2136:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":140,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"2136:14:1","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"2087:82:1"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":146,"src":"2201:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:9:1"},"scope":155,"src":"2063:147:1","stateMutability":"view","virtual":true,"visibility":"external"},{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"2215:69:1","text":" @dev returns the total supply at a certain block number*"},"functionSelector":"981b24d0","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupplyAt","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":154,"src":"2310:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:21:1"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":154,"src":"2362:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2361:9:1"},"scope":155,"src":"2287:84:1","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":156,"src":"61:2312:1"}],"src":"37:2336:1"},"id":1},"@aave/aave-token/contracts/open-zeppelin/Address.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/Address.sol","exportedSymbols":{"Address":[219]},"id":220,"nodeType":"SourceUnit","nodes":[{"id":157,"literals":["solidity","^","0.7",".5"],"nodeType":"PragmaDirective","src":"0:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"25:67:2","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":219,"linearizedBaseContracts":[219],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":183,"nodeType":"Block","src":"751:544:2","statements":[{"assignments":[167],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"codehash","nodeType":"VariableDeclaration","scope":183,"src":"1003:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1003:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":168,"nodeType":"VariableDeclarationStatement","src":"1003:16:2"},{"assignments":[170],"declarations":[{"constant":false,"id":170,"mutability":"mutable","name":"accountHash","nodeType":"VariableDeclaration","scope":183,"src":"1029:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1029:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":172,"initialValue":{"hexValue":"307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:66:2","typeDescriptions":{"typeIdentifier":"t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1","typeString":"int_const 8947...(69 digits omitted)...1552"},"value":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"},"nodeType":"VariableDeclarationStatement","src":"1029:88:2"},{"AST":{"nodeType":"YulBlock","src":"1192:36:2","statements":[{"nodeType":"YulAssignment","src":"1194:32:2","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1218:7:2"}],"functionName":{"name":"extcodehash","nodeType":"YulIdentifier","src":"1206:11:2"},"nodeType":"YulFunctionCall","src":"1206:20:2"},"variableNames":[{"name":"codehash","nodeType":"YulIdentifier","src":"1194:8:2"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":161,"isOffset":false,"isSlot":false,"src":"1218:7:2","valueSize":1},{"declaration":167,"isOffset":false,"isSlot":false,"src":"1194:8:2","valueSize":1}],"id":173,"nodeType":"InlineAssembly","src":"1183:45:2"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"codehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"1245:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":175,"name":"accountHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1257:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1245:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":177,"name":"codehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"1272:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"307830","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1284:3:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"1272:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1245:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1244:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":165,"id":182,"nodeType":"Return","src":"1237:51:2"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"115:565:2","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":184,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":184,"src":"705:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"705:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"704:17:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":184,"src":"745:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":163,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"744:6:2"},"scope":219,"src":"685:610:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"2283:320:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":195,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2309:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$219","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$219","typeString":"library Address"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2301:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"2301:7:2","typeDescriptions":{}}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2301:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2301:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":198,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2326:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2301:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2334:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2293:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2293:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"2293:73:2"},{"assignments":[204,null],"declarations":[{"constant":false,"id":204,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":217,"src":"2455:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":211,"initialValue":{"arguments":[{"hexValue":"","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2505:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":205,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2473:9:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2473:14:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":207,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2496:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2473:31:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2473:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2454:54:2"},{"expression":{"arguments":[{"id":213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2526:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2535:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2518:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2518:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"2518:78:2"}]},"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"1301:906:2","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":218,"src":"2231:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"2231:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":218,"src":"2258:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2230:43:2"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"2283:0:2"},"scope":219,"src":"2212:391:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":220,"src":"93:2512:2"}],"src":"0:2605:2"},"id":2},"@aave/aave-token/contracts/open-zeppelin/Context.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/Context.sol","exportedSymbols":{"Context":[242]},"id":243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":221,"literals":["solidity","^","0.7",".5"],"nodeType":"PragmaDirective","src":"33:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":242,"linearizedBaseContracts":[242],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":229,"nodeType":"Block","src":"660:34:3","statements":[{"expression":{"expression":{"id":226,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"677:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"677:10:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":225,"id":228,"nodeType":"Return","src":"670:17:3"}]},"id":230,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"609:2:3"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":230,"src":"643:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"643:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"642:17:3"},"scope":242,"src":"590:104:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":240,"nodeType":"Block","src":"765:165:3","statements":[{"expression":{"id":235,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"775:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$242","typeString":"contract Context"}},"id":236,"nodeType":"ExpressionStatement","src":"775:4:3"},{"expression":{"expression":{"id":237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"915:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"915:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":234,"id":239,"nodeType":"Return","src":"908:15:3"}]},"id":241,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"717:2:3"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":241,"src":"751:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":232,"name":"bytes","nodeType":"ElementaryTypeName","src":"751:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"750:14:3"},"scope":242,"src":"700:230:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":243,"src":"558:374:3"}],"src":"33:899:3"},"id":3},"@aave/aave-token/contracts/open-zeppelin/ERC20.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","exportedSymbols":{"Address":[219],"Context":[242],"ERC20":[749],"IERC20":[77],"SafeMath":[945]},"id":750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":244,"literals":["solidity","^","0.7",".5"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/Context.sol","file":"./Context.sol","id":245,"nodeType":"ImportDirective","scope":750,"sourceUnit":243,"src":"58:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/aave-token/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":246,"nodeType":"ImportDirective","scope":750,"sourceUnit":78,"src":"82:34:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol","file":"./SafeMath.sol","id":247,"nodeType":"ImportDirective","scope":750,"sourceUnit":946,"src":"117:24:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/Address.sol","file":"./Address.sol","id":248,"nodeType":"ImportDirective","scope":750,"sourceUnit":220,"src":"142:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":250,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":242,"src":"1348:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$242","typeString":"contract Context"}},"id":251,"nodeType":"InheritanceSpecifier","src":"1348:7:4"},{"baseName":{"id":252,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":77,"src":"1357:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":253,"nodeType":"InheritanceSpecifier","src":"1357:6:4"}],"contractDependencies":[77,242],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"167:1162:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":749,"linearizedBaseContracts":[749,77,242],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"id":256,"libraryName":{"id":254,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":945,"src":"1376:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$945","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1370:27:4","typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":259,"libraryName":{"id":257,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":219,"src":"1408:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$219","typeString":"library Address"}},"nodeType":"UsingForDirective","src":"1402:26:4","typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":263,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":749,"src":"1434:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":262,"keyType":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1434:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":269,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","scope":749,"src":"1487:69:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":268,"keyType":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1487:49:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":267,"keyType":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"1516:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1507:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":271,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","scope":749,"src":"1563:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":273,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":749,"src":"1598:21:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"1598:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":749,"src":"1625:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":274,"name":"string","nodeType":"ElementaryTypeName","src":"1625:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","scope":749,"src":"1654:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":276,"name":"uint8","nodeType":"ElementaryTypeName","src":"1654:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":297,"nodeType":"Block","src":"2062:79:4","statements":[{"expression":{"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":285,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2072:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":286,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2080:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2072:12:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":288,"nodeType":"ExpressionStatement","src":"2072:12:4"},{"expression":{"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":289,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2094:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":290,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2104:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2094:16:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":292,"nodeType":"ExpressionStatement","src":"2094:16:4"},{"expression":{"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":293,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2120:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2132:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2120:14:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":296,"nodeType":"ExpressionStatement","src":"2120:14:4"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"1684:311:4","text":" @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."},"id":298,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":298,"src":"2013:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":279,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":298,"src":"2033:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":281,"name":"string","nodeType":"ElementaryTypeName","src":"2033:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2012:42:4"},"returnParameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"2062:0:4"},"scope":749,"src":"2000:141:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":306,"nodeType":"Block","src":"2258:29:4","statements":[{"expression":{"id":304,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2275:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":303,"id":305,"nodeType":"Return","src":"2268:12:4"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"2147:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":307,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"2219:2:4"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":307,"src":"2243:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"2243:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2242:15:4"},"scope":749,"src":"2206:81:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":315,"nodeType":"Block","src":"2454:31:4","statements":[{"expression":{"id":313,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2471:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":312,"id":314,"nodeType":"Return","src":"2464:14:4"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2293:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":316,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"2415:2:4"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":316,"src":"2439:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":310,"name":"string","nodeType":"ElementaryTypeName","src":"2439:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2438:15:4"},"scope":749,"src":"2400:85:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":324,"nodeType":"Block","src":"3156:33:4","statements":[{"expression":{"id":322,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3173:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":321,"id":323,"nodeType":"Return","src":"3166:16:4"}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"2491:612:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":325,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"3125:2:4"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":325,"src":"3149:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":319,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:4"},"scope":749,"src":"3108:81:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8],"body":{"id":334,"nodeType":"Block","src":"3311:36:4","statements":[{"expression":{"id":332,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3328:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":331,"id":333,"nodeType":"Return","src":"3321:19:4"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"3195:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":335,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":{"id":328,"nodeType":"OverrideSpecifier","overrides":[],"src":"3284:8:4"},"parameters":{"id":327,"nodeType":"ParameterList","parameters":[],"src":"3269:2:4"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":335,"src":"3302:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3301:9:4"},"scope":749,"src":"3249:98:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[16],"body":{"id":348,"nodeType":"Block","src":"3480:42:4","statements":[{"expression":{"baseExpression":{"id":344,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3497:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":346,"indexExpression":{"id":345,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3507:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3497:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":343,"id":347,"nodeType":"Return","src":"3490:25:4"}]},"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"3353:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":349,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":340,"nodeType":"OverrideSpecifier","overrides":[],"src":"3453:8:4"},"parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":349,"src":"3424:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3423:17:4"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":349,"src":"3471:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3471:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3470:9:4"},"scope":749,"src":"3405:117:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[26],"body":{"id":369,"nodeType":"Block","src":"3817:80:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3837:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":363,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3851:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3862:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":360,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3827:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3827:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"3827:42:4"},{"expression":{"hexValue":"74727565","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3886:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":359,"id":368,"nodeType":"Return","src":"3879:11:4"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"3528:192:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":356,"nodeType":"OverrideSpecifier","overrides":[],"src":"3793:8:4"},"parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":370,"src":"3743:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"3743:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":370,"src":"3762:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3762:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:35:4"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":370,"src":"3811:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":357,"name":"bool","nodeType":"ElementaryTypeName","src":"3811:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3810:6:4"},"scope":749,"src":"3725:172:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[36],"body":{"id":387,"nodeType":"Block","src":"4053:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":381,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"4070:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":383,"indexExpression":{"id":382,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4082:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4070:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":385,"indexExpression":{"id":384,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4089:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4070:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":380,"id":386,"nodeType":"Return","src":"4063:34:4"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"3903:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":377,"nodeType":"OverrideSpecifier","overrides":[],"src":"4026:8:4"},"parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":388,"src":"3974:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":388,"src":"3989:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3989:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3973:32:4"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":388,"src":"4044:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"4044:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4043:9:4"},"scope":749,"src":"3955:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[46],"body":{"id":408,"nodeType":"Block","src":"4331:77:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":400,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4350:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4350:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":402,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"4364:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"4373:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":399,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"4341:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4341:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"4341:39:4"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4397:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":398,"id":407,"nodeType":"Return","src":"4390:11:4"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"4110:127:4","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":395,"nodeType":"OverrideSpecifier","overrides":[],"src":"4307:8:4"},"parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":409,"src":"4259:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":409,"src":"4276:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4276:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4258:33:4"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":409,"src":"4325:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4325:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4324:6:4"},"scope":749,"src":"4242:166:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[58],"body":{"id":446,"nodeType":"Block","src":"4980:205:4","statements":[{"expression":{"arguments":[{"id":423,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5000:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":424,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5008:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5019:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4990:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4990:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"4990:36:4"},{"expression":{"arguments":[{"id":429,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5045:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":430,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5053:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5053:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":439,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5105:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:42:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":432,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5067:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":434,"indexExpression":{"id":433,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5079:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5067:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":437,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5087:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5087:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5067:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":823,"src":"5067:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5067:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":428,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5036:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5036:121:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"5036:121:4"},{"expression":{"hexValue":"74727565","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5174:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":421,"id":445,"nodeType":"Return","src":"5167:11:4"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"4414:449:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":418,"nodeType":"OverrideSpecifier","overrides":[],"src":"4956:8:4"},"parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":447,"src":"4890:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"4890:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":447,"src":"4906:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"4906:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":447,"src":"4925:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:51:4"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":447,"src":"4974:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"4974:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4973:6:4"},"scope":749,"src":"4868:317:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":474,"nodeType":"Block","src":"5674:121:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5693:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5693:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":460,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5707:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":468,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"5755:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":461,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5716:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":464,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5728:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5728:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5716:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":466,"indexExpression":{"id":465,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"5742:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5716:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":778,"src":"5716:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5716:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5684:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5684:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"5684:83:4"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5784:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":456,"id":473,"nodeType":"Return","src":"5777:11:4"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"5191:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":475,"src":"5607:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"5607:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","scope":475,"src":"5624:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5624:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5606:37:4"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":475,"src":"5668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":454,"name":"bool","nodeType":"ElementaryTypeName","src":"5668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5667:6:4"},"scope":749,"src":"5580:215:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":503,"nodeType":"Block","src":"6381:167:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"6400:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6400:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":488,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6414:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":496,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6462:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6479:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":489,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6423:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":492,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"6435:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6435:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6423:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":494,"indexExpression":{"id":493,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6449:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6423:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":823,"src":"6423:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6423:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":485,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6391:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6391:129:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"ExpressionStatement","src":"6391:129:4"},{"expression":{"hexValue":"74727565","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6537:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":484,"id":502,"nodeType":"Return","src":"6530:11:4"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"5801:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":504,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":504,"src":"6309:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"6309:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","scope":504,"src":"6326:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"6326:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6308:42:4"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":504,"src":"6375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"6375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6374:6:4"},"scope":749,"src":"6282:266:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":569,"nodeType":"Block","src":"7109:443:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":515,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7127:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7145:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"7137:7:4","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7137:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7127:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7149:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"7119:70:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7207:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7228:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7220:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"7220:7:4","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7220:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7207:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7232:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7199:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7199:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"7199:71:4"},{"expression":{"arguments":[{"id":535,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7302:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7310:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"7321:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7281:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7281:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"7281:47:4"},{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":540,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"7339:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":542,"indexExpression":{"id":541,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7349:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7339:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":547,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"7381:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7389:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":543,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"7359:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":545,"indexExpression":{"id":544,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7369:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7359:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":823,"src":"7359:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7359:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7339:91:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"nodeType":"ExpressionStatement","src":"7339:91:4"},{"expression":{"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"7440:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7450:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7440:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":559,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"7488:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":555,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"7463:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":557,"indexExpression":{"id":556,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7473:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7463:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":778,"src":"7463:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7463:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7440:55:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":562,"nodeType":"ExpressionStatement","src":"7440:55:4"},{"eventCall":{"arguments":[{"id":564,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"7519:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7527:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"7538:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7510:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7510:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"EmitStatement","src":"7505:40:4"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"6554:463:4","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":570,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":570,"src":"7041:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"7041:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":570,"src":"7057:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"7057:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":570,"src":"7076:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"7076:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7040:51:4"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"7109:0:4"},"scope":749,"src":"7022:530:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":624,"nodeType":"Block","src":"7887:305:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7905:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7916:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"7916:7:4","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7905:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7928:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7897:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7897:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"7897:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8002:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7994:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:4","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7994:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":593,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8006:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8015:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7973:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7973:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":596,"nodeType":"ExpressionStatement","src":"7973:49:4"},{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":597,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8033:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":600,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8065:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":598,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8048:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":778,"src":"8048:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8048:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8033:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"8033:39:4"},{"expression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":604,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"8082:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":606,"indexExpression":{"id":605,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8092:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8082:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8126:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":607,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"8103:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":609,"indexExpression":{"id":608,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8113:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8103:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":778,"src":"8103:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8103:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8082:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":614,"nodeType":"ExpressionStatement","src":"8082:51:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8165:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"8157:7:4","typeDescriptions":{}}},"id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8157:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":620,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8169:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8178:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":615,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8148:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8148:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"EmitStatement","src":"8143:42:4"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"7558:259:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."},"id":625,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":625,"src":"7837:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"7837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":625,"src":"7854:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"7854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7836:33:4"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"7887:0:4"},"scope":749,"src":"7822:370:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":680,"nodeType":"Block","src":"8576:345:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8594:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8613:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8605:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"8605:7:4","typeDescriptions":{}}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8605:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"8594:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8617:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8586:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8586:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"8586:67:4"},{"expression":{"arguments":[{"id":644,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8685:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8702:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8694:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"8694:7:4","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8694:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"8706:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":643,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8664:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8664:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"ExpressionStatement","src":"8664:49:4"},{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":652,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"8724:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":654,"indexExpression":{"id":653,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8734:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8724:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"8768:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8776:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":655,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"8745:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":657,"indexExpression":{"id":656,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8755:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8745:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":823,"src":"8745:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8745:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8724:89:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"8724:89:4"},{"expression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":664,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8823:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"8855:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":665,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8838:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":795,"src":"8838:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8838:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8823:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":670,"nodeType":"ExpressionStatement","src":"8823:39:4"},{"eventCall":{"arguments":[{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"8886:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8895:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8895:7:4","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8895:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"8907:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":671,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8877:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8877:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"EmitStatement","src":"8872:42:4"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"8198:308:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":681,"src":"8526:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"8526:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":681,"src":"8543:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"8543:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8525:33:4"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"8576:0:4"},"scope":749,"src":"8511:410:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"9429:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"9447:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:4","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9456:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9447:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9468:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9439:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9439:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"9439:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9525:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9544:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9536:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9536:7:4","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9536:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9525:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9548:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9517:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9517:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"ExpressionStatement","src":"9517:68:4"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":711,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"9596:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":714,"indexExpression":{"id":712,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"9608:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9596:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":715,"indexExpression":{"id":713,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9615:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9596:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9626:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9596:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ExpressionStatement","src":"9596:36:4"},{"eventCall":{"arguments":[{"id":720,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"9656:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9663:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9672:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"9647:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9647:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"EmitStatement","src":"9642:37:4"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"8927:414:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":726,"src":"9364:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"9364:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":726,"src":"9379:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"9379:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":726,"src":"9396:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9363:48:4"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"9429:0:4"},"scope":749,"src":"9346:340:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"10059:38:4","statements":[{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":732,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"10069:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":733,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10081:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10069:21:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":735,"nodeType":"ExpressionStatement","src":"10069:21:4"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"9692:312:4","text":" @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"_setupDecimals","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"decimals_","nodeType":"VariableDeclaration","scope":737,"src":"10033:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":728,"name":"uint8","nodeType":"ElementaryTypeName","src":"10033:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10032:17:4"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"10059:0:4"},"scope":749,"src":"10009:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"10773:3:4","statements":[]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"10103:576:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":748,"src":"10714:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"10714:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":748,"src":"10728:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"10728:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":748,"src":"10740:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"10740:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10713:42:4"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"10773:0:4"},"scope":749,"src":"10684:92:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":750,"src":"1330:9448:4"}],"src":"33:10745:4"},"id":4},"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol","exportedSymbols":{"SafeMath":[945]},"id":946,"nodeType":"SourceUnit","nodes":[{"id":751,"literals":["solidity","^","0.7",".5"],"nodeType":"PragmaDirective","src":"0:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"25:563:5","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":945,"linearizedBaseContracts":[945],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":777,"nodeType":"Block","src":"901:109:5","statements":[{"assignments":[763],"declarations":[{"constant":false,"id":763,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":777,"src":"911:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"923:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":765,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"927:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"923:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"911:17:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":769,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"946:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"951:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"946:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"954:29:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"938:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"938:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"ExpressionStatement","src":"938:46:5"},{"expression":{"id":775,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"1002:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":761,"id":776,"nodeType":"Return","src":"995:8:5"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"612:217:5","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":778,"src":"847:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":778,"src":"858:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:22:5"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":778,"src":"892:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:5"},"scope":945,"src":"834:176:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"1341:67:5","statements":[{"expression":{"arguments":[{"id":789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1362:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1365:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1368:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":788,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[795,823],"referencedDeclaration":823,"src":"1358:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1358:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":787,"id":793,"nodeType":"Return","src":"1351:50:5"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"1016:253:5","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":795,"src":"1287:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":795,"src":"1298:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1286:22:5"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":795,"src":"1332:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1332:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1331:9:5"},"scope":945,"src":"1274:134:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"1787:92:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1805:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"1810:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":811,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"1813:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1797:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"1797:29:5"},{"assignments":[815],"declarations":[{"constant":false,"id":815,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":822,"src":"1836:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":819,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"1848:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":817,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1852:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1848:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1836:17:5"},{"expression":{"id":820,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"1871:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":806,"id":821,"nodeType":"Return","src":"1864:8:5"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"1414:273:5","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":823,"src":"1705:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":823,"src":"1716:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":823,"src":"1727:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":801,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1704:50:5"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":823,"src":"1778:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1777:9:5"},"scope":945,"src":"1692:187:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"2186:392:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2418:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2423:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2418:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":839,"nodeType":"IfStatement","src":"2414:45:5","trueBody":{"id":838,"nodeType":"Block","src":"2426:33:5","statements":[{"expression":{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2447:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":832,"id":837,"nodeType":"Return","src":"2440:8:5"}]}},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":857,"src":"2469:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":845,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2481:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":843,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2485:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2481:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2469:17:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":847,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2504:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2508:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2513:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2516:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2496:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2496:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"ExpressionStatement","src":"2496:56:5"},{"expression":{"id":855,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2570:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":832,"id":856,"nodeType":"Return","src":"2563:8:5"}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"1885:229:5","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":858,"src":"2132:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":858,"src":"2143:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2131:22:5"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":858,"src":"2177:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:9:5"},"scope":945,"src":"2119:459:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"3100:63:5","statements":[{"expression":{"arguments":[{"id":869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"3121:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"3124:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3127:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":868,"name":"div","nodeType":"Identifier","overloadedDeclarations":[875,903],"referencedDeclaration":903,"src":"3117:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3117:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":867,"id":873,"nodeType":"Return","src":"3110:46:5"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"2584:444:5","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":875,"src":"3046:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3046:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":875,"src":"3057:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3057:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3045:22:5"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":875,"src":"3091:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"3091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3090:9:5"},"scope":945,"src":"3033:130:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"3733:243:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3817:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3821:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3817:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":891,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"3824:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3809:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3809:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"3809:28:5"},{"assignments":[895],"declarations":[{"constant":false,"id":895,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":902,"src":"3847:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3847:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":899,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3859:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3863:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3859:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3847:17:5"},{"expression":{"id":900,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"3968:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":886,"id":901,"nodeType":"Return","src":"3961:8:5"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"3169:464:5","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":903,"src":"3651:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3651:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":903,"src":"3662:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":903,"src":"3673:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"3673:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3650:50:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":903,"src":"3724:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3723:9:5"},"scope":945,"src":"3638:338:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"4487:61:5","statements":[{"expression":{"arguments":[{"id":914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4508:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":915,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4511:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4514:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":913,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[920,944],"referencedDeclaration":944,"src":"4504:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4504:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":912,"id":918,"nodeType":"Return","src":"4497:44:5"}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"3982:433:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":920,"src":"4433:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"4433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":920,"src":"4444:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"4444:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4432:22:5"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":920,"src":"4478:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4477:9:5"},"scope":945,"src":"4420:128:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"5107:68:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"5125:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5130:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5125:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":936,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5133:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5117:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5117:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"5117:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"5163:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"5167:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5163:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":931,"id":942,"nodeType":"Return","src":"5156:12:5"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"4554:453:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":944,"src":"5025:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5025:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":944,"src":"5036:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":944,"src":"5047:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"5047:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5024:50:5"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":944,"src":"5098:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5097:9:5"},"scope":945,"src":"5012:163:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":946,"src":"589:4588:5"}],"src":"0:5177:5"},"id":5},"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol":{"ast":{"absolutePath":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol","exportedSymbols":{"ERC20":[749],"GovernancePowerDelegationERC20":[1634],"IGovernancePowerDelegationToken":[155],"SafeMath":[945]},"id":1635,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":947,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:6"},{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol","file":"../../open-zeppelin/SafeMath.sol","id":949,"nodeType":"ImportDirective","scope":1635,"sourceUnit":946,"src":"61:58:6","symbolAliases":[{"foreign":{"id":948,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"69:8:6","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","file":"../../open-zeppelin/ERC20.sol","id":951,"nodeType":"ImportDirective","scope":1635,"sourceUnit":750,"src":"120:52:6","symbolAliases":[{"foreign":{"id":950,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"128:5:6","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol","file":"../../interfaces/IGovernancePowerDelegationToken.sol","id":953,"nodeType":"ImportDirective","scope":1635,"sourceUnit":156,"src":"173:105:6","symbolAliases":[{"foreign":{"id":952,"name":"IGovernancePowerDelegationToken","nodeType":"Identifier","overloadedDeclarations":[],"src":"184:31:6","typeDescriptions":{}}}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":955,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":749,"src":"409:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$749","typeString":"contract ERC20"}},"id":956,"nodeType":"InheritanceSpecifier","src":"409:5:6"},{"baseName":{"id":957,"name":"IGovernancePowerDelegationToken","nodeType":"UserDefinedTypeName","referencedDeclaration":155,"src":"416:31:6","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernancePowerDelegationToken_$155","typeString":"contract IGovernancePowerDelegationToken"}},"id":958,"nodeType":"InheritanceSpecifier","src":"416:31:6"}],"contractDependencies":[77,155,242,749],"contractKind":"contract","documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"280:76:6","text":" @notice implementation of the AAVE token contract\n @author Aave"},"fullyImplemented":false,"id":1634,"linearizedBaseContracts":[1634,155,749,77,242],"name":"GovernancePowerDelegationERC20","nodeType":"ContractDefinition","nodes":[{"id":961,"libraryName":{"id":959,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":945,"src":"458:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$945","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"452:27:6","typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"482:79:6","text":"@notice The EIP-712 typehash for the delegation struct used by the contract"},"functionSelector":"aa9fbe02","id":967,"mutability":"constant","name":"DELEGATE_BY_TYPE_TYPEHASH","nodeType":"VariableDeclaration","scope":1634,"src":"564:148:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"564:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c656761746542795479706528616464726573732064656c6567617465652c75696e7432353620747970652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"631:77:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e5","typeString":"literal_string \"DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)\""},"value":"DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e5","typeString":"literal_string \"DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)\""}],"id":964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"616:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"616:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"41cbf54a","id":972,"mutability":"constant","name":"DELEGATE_TYPEHASH","nodeType":"VariableDeclaration","scope":1634,"src":"717:121:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"717:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c656761746528616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"776:58:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d","typeString":"literal_string \"Delegate(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegate(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d","typeString":"literal_string \"Delegate(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":969,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"761:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"761:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"GovernancePowerDelegationERC20.Snapshot","id":977,"members":[{"constant":false,"id":974,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":977,"src":"932:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":973,"name":"uint128","nodeType":"ElementaryTypeName","src":"932:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":977,"src":"957:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":975,"name":"uint128","nodeType":"ElementaryTypeName","src":"957:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"Snapshot","nodeType":"StructDefinition","scope":1634,"src":"910:65:6","visibility":"public"},{"baseFunctions":[108],"body":{"id":993,"nodeType":"Block","src":"1287:65:6","statements":[{"expression":{"arguments":[{"expression":{"id":987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1309:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1309:10:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":989,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"1321:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":990,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"1332:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":986,"name":"_delegateByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1293:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1293:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"ExpressionStatement","src":"1293:54:6"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"979:213:6","text":" @dev delegates one specific power to a delegatee\n @param delegatee the user which delegated power has changed\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"},"functionSelector":"dc937e1c","id":994,"implemented":true,"kind":"function","modifiers":[],"name":"delegateByType","nodeType":"FunctionDefinition","overrides":{"id":984,"nodeType":"OverrideSpecifier","overrides":[],"src":"1278:8:6"},"parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":994,"src":"1219:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":994,"src":"1238:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":981,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"1238:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"1218:50:6"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"1287:0:6"},"scope":1634,"src":"1195:157:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[114],"body":{"id":1017,"nodeType":"Block","src":"1546:156:6","statements":[{"expression":{"arguments":[{"expression":{"id":1002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1568:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1568:10:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1004,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1580:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1005,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1591:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"VOTING_POWER","nodeType":"MemberAccess","src":"1591:27:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1001,"name":"_delegateByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1552:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1552:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"1552:67:6"},{"expression":{"arguments":[{"expression":{"id":1010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1641:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1641:10:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1012,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1653:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1013,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1664:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PROPOSITION_POWER","nodeType":"MemberAccess","src":"1664:32:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1009,"name":"_delegateByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"1625:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1625:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"1625:72:6"}]},"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"1356:132:6","text":" @dev delegates all the powers to a specific user\n @param delegatee the user to which the power will be delegated*"},"functionSelector":"5c19a95c","id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nodeType":"FunctionDefinition","overrides":{"id":999,"nodeType":"OverrideSpecifier","overrides":[],"src":"1537:8:6"},"parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":1018,"src":"1509:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:19:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"1546:0:6"},"scope":1634,"src":"1491:211:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[124],"body":{"id":1042,"nodeType":"Block","src":"1950:154:6","statements":[{"assignments":[null,null,1032],"declarations":[null,null,{"constant":false,"id":1032,"mutability":"mutable","name":"delegates","nodeType":"VariableDeclaration","scope":1042,"src":"1961:45:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1031,"keyType":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1961:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"}],"id":1036,"initialValue":{"arguments":[{"id":1034,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2035:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1033,"name":"_getDelegationDataByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"2010:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_DelegationType_$82_$returns$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"function (enum IGovernancePowerDelegationToken.DelegationType) view returns (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2010:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"nodeType":"VariableDeclarationStatement","src":"1956:94:6"},{"expression":{"arguments":[{"id":1038,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2078:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2089:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}],"id":1037,"name":"_getDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2064:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_mapping$_t_address_$_t_address_$_$returns$_t_address_$","typeString":"function (address,mapping(address => address)) view returns (address)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2064:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1028,"id":1041,"nodeType":"Return","src":"2057:42:6"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"1706:104:6","text":" @dev returns the delegatee of an user\n @param delegator the address of the delegator*"},"functionSelector":"6f50458d","id":1043,"implemented":true,"kind":"function","modifiers":[],"name":"getDelegateeByType","nodeType":"FunctionDefinition","overrides":{"id":1025,"nodeType":"OverrideSpecifier","overrides":[],"src":"1908:8:6"},"parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"delegator","nodeType":"VariableDeclaration","scope":1043,"src":"1841:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":1043,"src":"1860:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":1022,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"1860:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"1840:50:6"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1043,"src":"1939:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:9:6"},"scope":1634,"src":"1813:291:6","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[134],"body":{"id":1076,"nodeType":"Block","src":"2412:277:6","statements":[{"assignments":[1059,1063,null],"declarations":[{"constant":false,"id":1059,"mutability":"mutable","name":"snapshots","nodeType":"VariableDeclaration","scope":1076,"src":"2426:66:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":1058,"keyType":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"2434:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2426:48:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":1057,"keyType":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2453:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2445:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1056,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"2464:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"snapshotsCounts","nodeType":"VariableDeclaration","scope":1076,"src":"2500:51:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1062,"keyType":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"2508:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2500:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2519:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},null],"id":1067,"initialValue":{"arguments":[{"id":1065,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2587:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1064,"name":"_getDelegationDataByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"2562:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_DelegationType_$82_$returns$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"function (enum IGovernancePowerDelegationToken.DelegationType) view returns (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2562:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"nodeType":"VariableDeclarationStatement","src":"2418:184:6"},{"expression":{"arguments":[{"id":1069,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2637:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},{"id":1070,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2648:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},{"id":1071,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2665:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1072,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2671:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2671:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"},{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1068,"name":"_searchByBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2616:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),address,uint256) view returns (uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1053,"id":1075,"nodeType":"Return","src":"2609:75:6"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"2108:172:6","text":" @dev returns the current delegated power of a user. The current power is the\n power delegated at the time of the last snapshot\n @param user the user*"},"functionSelector":"b2f4201d","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"getPowerCurrent","nodeType":"FunctionDefinition","overrides":{"id":1050,"nodeType":"OverrideSpecifier","overrides":[],"src":"2370:8:6"},"parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1077,"src":"2308:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"2308:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":1077,"src":"2322:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":1047,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"2322:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"2307:45:6"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1077,"src":"2401:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2400:9:6"},"scope":1634,"src":"2283:406:6","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[146],"body":{"id":1111,"nodeType":"Block","src":"2947:276:6","statements":[{"assignments":[1095,1099,null],"declarations":[{"constant":false,"id":1095,"mutability":"mutable","name":"snapshots","nodeType":"VariableDeclaration","scope":1111,"src":"2961:66:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":1094,"keyType":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2961:48:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":1093,"keyType":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2988:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2980:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1092,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"2999:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"snapshotsCounts","nodeType":"VariableDeclaration","scope":1111,"src":"3035:51:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1098,"keyType":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"3043:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3035:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},null],"id":1103,"initialValue":{"arguments":[{"id":1101,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3122:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1100,"name":"_getDelegationDataByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"3097:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_DelegationType_$82_$returns$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"function (enum IGovernancePowerDelegationToken.DelegationType) view returns (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3097:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"nodeType":"VariableDeclarationStatement","src":"2953:184:6"},{"expression":{"arguments":[{"id":1105,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"3172:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},{"id":1106,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"3183:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},{"id":1107,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3200:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3206:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"},{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1104,"name":"_searchByBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"3151:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),address,uint256) view returns (uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3151:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1089,"id":1110,"nodeType":"Return","src":"3144:74:6"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"2693:103:6","text":" @dev returns the delegated power of a user at a certain block\n @param user the user*"},"functionSelector":"c2ffbb91","id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"getPowerAtBlock","nodeType":"FunctionDefinition","overrides":{"id":1086,"nodeType":"OverrideSpecifier","overrides":[],"src":"2915:8:6"},"parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1112,"src":"2829:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":1112,"src":"2847:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2847:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":1112,"src":"2872:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":1083,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"2872:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"2823:82:6"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1112,"src":"2938:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2937:9:6"},"scope":1634,"src":"2799:424:6","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[154],"body":{"id":1125,"nodeType":"Block","src":"3690:37:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1121,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3703:5:6","typeDescriptions":{"typeIdentifier":"t_super$_GovernancePowerDelegationERC20_$1634","typeString":"contract super GovernancePowerDelegationERC20"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":335,"src":"3703:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3703:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1120,"id":1124,"nodeType":"Return","src":"3696:26:6"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"3227:375:6","text":" @dev returns the total supply at a certain block number\n used by the voting strategy contracts to calculate the total votes needed for threshold/quorum\n In this initial implementation with no AAVE minting, simply returns the current supply\n A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*"},"functionSelector":"981b24d0","id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupplyAt","nodeType":"FunctionDefinition","overrides":{"id":1117,"nodeType":"OverrideSpecifier","overrides":[],"src":"3658:8:6"},"parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":1126,"src":"3628:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3628:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:21:6"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1126,"src":"3681:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3681:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3680:9:6"},"scope":1634,"src":"3605:122:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1186,"nodeType":"Block","src":"4066:483:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4080:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4101:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4093:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"4093:7:6","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4093:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4080:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f44454c454741544545","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4105:19:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f448a4555410856eaebeffbdb1aef2dfca19f9de0904eb1029e0bbcd0330450f","typeString":"literal_string \"INVALID_DELEGATEE\""},"value":"INVALID_DELEGATEE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f448a4555410856eaebeffbdb1aef2dfca19f9de0904eb1029e0bbcd0330450f","typeString":"literal_string \"INVALID_DELEGATEE\""}],"id":1136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4072:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4072:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"4072:53:6"},{"assignments":[null,null,1149],"declarations":[null,null,{"constant":false,"id":1149,"mutability":"mutable","name":"delegates","nodeType":"VariableDeclaration","scope":1186,"src":"4137:45:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1148,"keyType":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"4145:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4137:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"id":1151,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4211:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1150,"name":"_getDelegationDataByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"4186:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_DelegationType_$82_$returns$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"function (enum IGovernancePowerDelegationToken.DelegationType) view returns (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4186:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"nodeType":"VariableDeclarationStatement","src":"4132:94:6"},{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"delegatorBalance","nodeType":"VariableDeclaration","scope":1186,"src":"4233:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4233:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1159,"initialValue":{"arguments":[{"id":1157,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4270:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1156,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4260:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4260:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4233:47:6"},{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"previousDelegatee","nodeType":"VariableDeclaration","scope":1186,"src":"4287:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"4287:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1166,"initialValue":{"arguments":[{"id":1163,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4329:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4340:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}],"id":1162,"name":"_getDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"4315:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_mapping$_t_address_$_t_address_$_$returns$_t_address_$","typeString":"function (address,mapping(address => address)) view returns (address)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4315:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4287:63:6"},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4357:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1169,"indexExpression":{"id":1168,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4367:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4357:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4380:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4357:32:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1172,"nodeType":"ExpressionStatement","src":"4357:32:6"},{"expression":{"arguments":[{"id":1174,"name":"previousDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"4417:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4436:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4447:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1177,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4465:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1173,"name":"_moveDelegatesByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"4396:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,uint256,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4396:84:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"4396:84:6"},{"eventCall":{"arguments":[{"id":1181,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4507:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4518:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4529:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1180,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"4491:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4491:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"EmitStatement","src":"4486:58:6"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"3731:213:6","text":" @dev delegates the specific power to a delegatee\n @param delegatee the user which delegated power has changed\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"_delegateByType","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"delegator","nodeType":"VariableDeclaration","scope":1187,"src":"3977:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"3977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":1187,"src":"4000:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"4000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":1187,"src":"4023:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":1132,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"4023:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"3971:85:6"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"4066:0:6"},"scope":1634,"src":"3947:602:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"5024:1258:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5034:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1200,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5042:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5034:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1204,"nodeType":"IfStatement","src":"5030:37:6","trueBody":{"id":1203,"nodeType":"Block","src":"5046:21:6","statements":[{"functionReturnParameters":1198,"id":1202,"nodeType":"Return","src":"5054:7:6"}]}},{"assignments":[1210,1214,null],"declarations":[{"constant":false,"id":1210,"mutability":"mutable","name":"snapshots","nodeType":"VariableDeclaration","scope":1353,"src":"5081:66:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":1209,"keyType":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"5089:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5081:48:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":1208,"keyType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5108:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5100:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1207,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"5119:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"snapshotsCounts","nodeType":"VariableDeclaration","scope":1353,"src":"5155:51:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1213,"keyType":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"5163:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5155:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5174:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},null],"id":1218,"initialValue":{"arguments":[{"id":1216,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5242:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1215,"name":"_getDelegationDataByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"5217:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_DelegationType_$82_$returns$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"function (enum IGovernancePowerDelegationToken.DelegationType) view returns (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5217:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"nodeType":"VariableDeclarationStatement","src":"5073:184:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1219,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5268:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5284:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5276:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"5276:7:6","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5276:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5268:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"5264:514:6","trueBody":{"id":1284,"nodeType":"Block","src":"5288:490:6","statements":[{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"previous","nodeType":"VariableDeclaration","scope":1284,"src":"5296:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5296:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1228,"initialValue":{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5315:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5296:20:6"},{"assignments":[1230],"declarations":[{"constant":false,"id":1230,"mutability":"mutable","name":"fromSnapshotsCount","nodeType":"VariableDeclaration","scope":1284,"src":"5324:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1234,"initialValue":{"baseExpression":{"id":1231,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"5353:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1233,"indexExpression":{"id":1232,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5369:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5353:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5324:50:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"fromSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"5387:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5409:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5387:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1256,"nodeType":"Block","src":"5493:45:6","statements":[{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1250,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5503:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1252,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5524:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1251,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5514:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5514:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5503:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"5503:26:6"}]},"id":1257,"nodeType":"IfStatement","src":"5383:155:6","trueBody":{"id":1249,"nodeType":"Block","src":"5412:75:6","statements":[{"expression":{"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1238,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5422:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":1239,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"5433:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1241,"indexExpression":{"id":1240,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5443:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5433:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1245,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"fromSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"5449:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5470:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5449:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5433:39:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":976,"src":"5433:45:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"5422:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1248,"nodeType":"ExpressionStatement","src":"5422:56:6"}]}},{"expression":{"arguments":[{"id":1259,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"5570:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},{"id":1260,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"5589:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},{"id":1261,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5614:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1264,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5636:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5628:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1262,"name":"uint128","nodeType":"ElementaryTypeName","src":"5628:7:6","typeDescriptions":{}}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5628:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":1270,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5676:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1268,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5663:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":795,"src":"5663:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5663:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5655:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1266,"name":"uint128","nodeType":"ElementaryTypeName","src":"5655:7:6","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5655:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"},{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1258,"name":"_writeSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5546:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_address_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),address,uint128,uint128)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5546:146:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1274,"nodeType":"ExpressionStatement","src":"5546:146:6"},{"eventCall":{"arguments":[{"id":1276,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5728:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1279,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5747:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1277,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5734:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":795,"src":"5734:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5734:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1281,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5756:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1275,"name":"DelegatedPowerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"5706:21:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,uint256,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5706:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"EmitStatement","src":"5701:70:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5787:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5793:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:6","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5793:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5787:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1352,"nodeType":"IfStatement","src":"5783:495:6","trueBody":{"id":1351,"nodeType":"Block","src":"5805:473:6","statements":[{"assignments":[1293],"declarations":[{"constant":false,"id":1293,"mutability":"mutable","name":"previous","nodeType":"VariableDeclaration","scope":1351,"src":"5813:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"5813:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5832:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5813:20:6"},{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"toSnapshotsCount","nodeType":"VariableDeclaration","scope":1351,"src":"5841:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"5841:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1301,"initialValue":{"baseExpression":{"id":1298,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"5868:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1300,"indexExpression":{"id":1299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5884:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5868:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5841:46:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"toSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5899:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5919:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5899:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1323,"nodeType":"Block","src":"5999:43:6","statements":[{"expression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1317,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6009:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1319,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6030:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1318,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6020:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6020:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6009:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"nodeType":"ExpressionStatement","src":"6009:24:6"}]},"id":1324,"nodeType":"IfStatement","src":"5895:147:6","trueBody":{"id":1316,"nodeType":"Block","src":"5922:71:6","statements":[{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1305,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"5932:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":1306,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"5943:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1308,"indexExpression":{"id":1307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5953:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5943:13:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1312,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"toSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5957:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5976:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5957:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5943:35:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":976,"src":"5943:41:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"5932:52:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1315,"nodeType":"ExpressionStatement","src":"5932:52:6"}]}},{"expression":{"arguments":[{"id":1326,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"6074:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},{"id":1327,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"6093:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},{"id":1328,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6118:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1331,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6138:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6130:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1329,"name":"uint128","nodeType":"ElementaryTypeName","src":"6130:7:6","typeDescriptions":{}}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6130:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":1337,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"6178:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1335,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6165:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":778,"src":"6165:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6165:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6157:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1333,"name":"uint128","nodeType":"ElementaryTypeName","src":"6157:7:6","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6157:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"},{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1325,"name":"_writeSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"6050:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_address_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),address,uint128,uint128)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6050:144:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"6050:144:6"},{"eventCall":{"arguments":[{"id":1343,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6230:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1346,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"6247:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1344,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6234:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":778,"src":"6234:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6234:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1348,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6256:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":1342,"name":"DelegatedPowerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"6208:21:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,uint256,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6208:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"EmitStatement","src":"6203:68:6"}]}}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"4553:336:6","text":" @dev moves delegated power from one user to another\n @param from the user from which delegated power is moved\n @param to the user that will receive the delegated power\n @param amount the amount of delegated power to be moved\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegatesByType","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1354,"src":"4927:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"4927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1354,"src":"4945:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"4945:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1354,"src":"4961:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":1354,"src":"4981:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":1195,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"4981:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"4921:93:6"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"5024:0:6"},"scope":1634,"src":"4892:1390:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"6823:973:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6837:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1376,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6852:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6852:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6837:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f424c4f434b5f4e554d424552","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6866:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd61c748dcfe71393203093270c457f6ceb8834cce0160376620e7b2f811559c","typeString":"literal_string \"INVALID_BLOCK_NUMBER\""},"value":"INVALID_BLOCK_NUMBER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd61c748dcfe71393203093270c457f6ceb8834cce0160376620e7b2f811559c","typeString":"literal_string \"INVALID_BLOCK_NUMBER\""}],"id":1374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6829:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6829:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1381,"nodeType":"ExpressionStatement","src":"6829:60:6"},{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"snapshotsCount","nodeType":"VariableDeclaration","scope":1497,"src":"6896:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6896:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1387,"initialValue":{"baseExpression":{"id":1384,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"6921:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1386,"indexExpression":{"id":1385,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6937:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6921:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6896:46:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"snapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"6953:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6971:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6953:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"IfStatement","src":"6949:62:6","trueBody":{"id":1395,"nodeType":"Block","src":"6974:37:6","statements":[{"expression":{"arguments":[{"id":1392,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6999:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1391,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6989:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6989:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1373,"id":1394,"nodeType":"Return","src":"6982:22:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1397,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7060:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1399,"indexExpression":{"id":1398,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7070:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7060:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1403,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"snapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"7076:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7093:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7076:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7060:35:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":974,"src":"7060:47:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1405,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7111:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7060:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1417,"nodeType":"IfStatement","src":"7056:131:6","trueBody":{"id":1416,"nodeType":"Block","src":"7124:63:6","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":1407,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7139:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1409,"indexExpression":{"id":1408,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7149:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7139:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1413,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"snapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"7155:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7172:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7155:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7139:35:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":976,"src":"7139:41:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1373,"id":1415,"nodeType":"Return","src":"7132:48:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1418,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7237:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1420,"indexExpression":{"id":1419,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7247:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7237:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1422,"indexExpression":{"hexValue":"30","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7253:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7237:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":974,"src":"7237:30:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1424,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7270:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7237:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"nodeType":"IfStatement","src":"7233:73:6","trueBody":{"id":1428,"nodeType":"Block","src":"7283:23:6","statements":[{"expression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7298:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1373,"id":1427,"nodeType":"Return","src":"7291:8:6"}]}},{"assignments":[1431],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"lower","nodeType":"VariableDeclaration","scope":1497,"src":"7312:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"7312:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7328:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7312:17:6"},{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"upper","nodeType":"VariableDeclaration","scope":1497,"src":"7335:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"7335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1439,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"snapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"7351:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7368:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7351:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7335:34:6"},{"body":{"id":1488,"nodeType":"Block","src":"7397:354:6","statements":[{"assignments":[1444],"declarations":[{"constant":false,"id":1444,"mutability":"mutable","name":"center","nodeType":"VariableDeclaration","scope":1488,"src":"7405:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7405:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7422:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7431:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1447,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7439:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7431:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7430:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7448:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7430:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7422:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7405:44:6"},{"assignments":[1455],"declarations":[{"constant":false,"id":1455,"mutability":"mutable","name":"snapshot","nodeType":"VariableDeclaration","scope":1488,"src":"7484:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_memory_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"},"typeName":{"id":1454,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"7484:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}},"visibility":"internal"}],"id":1461,"initialValue":{"baseExpression":{"baseExpression":{"id":1456,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7511:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1458,"indexExpression":{"id":1457,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7521:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7511:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1460,"indexExpression":{"id":1459,"name":"center","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7527:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7511:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7484:50:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1462,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"7546:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_memory_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot memory"}},"id":1463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":974,"src":"7546:20:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1464,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7570:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7546:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1470,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"7633:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_memory_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot memory"}},"id":1471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":974,"src":"7633:20:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1472,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7656:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7633:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1485,"nodeType":"Block","src":"7708:37:6","statements":[{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1479,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7718:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"center","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7726:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7726:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7718:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1484,"nodeType":"ExpressionStatement","src":"7718:18:6"}]},"id":1486,"nodeType":"IfStatement","src":"7629:116:6","trueBody":{"id":1478,"nodeType":"Block","src":"7669:33:6","statements":[{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7679:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1475,"name":"center","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7687:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"7679:14:6"}]}},"id":1487,"nodeType":"IfStatement","src":"7542:203:6","trueBody":{"id":1469,"nodeType":"Block","src":"7583:40:6","statements":[{"expression":{"expression":{"id":1466,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"7600:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_memory_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot memory"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":976,"src":"7600:14:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1373,"id":1468,"nodeType":"Return","src":"7593:21:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7382:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1441,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7390:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7382:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"WhileStatement","src":"7375:376:6"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":1490,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7763:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1492,"indexExpression":{"id":1491,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7773:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7763:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1494,"indexExpression":{"id":1493,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7779:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7763:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":976,"src":"7763:28:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1373,"id":1496,"nodeType":"Return","src":"7756:35:6"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"6286:296:6","text":" @dev searches a snapshot by block number. Uses binary search.\n @param snapshots the snapshots mapping\n @param snapshotsCounts the number of snapshots\n @param user the user for which the snapshot is being searched\n @param blockNumber the block number being searched*"},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"_searchByBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"snapshots","nodeType":"VariableDeclaration","scope":1498,"src":"6620:66:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":1360,"keyType":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"6628:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"6620:48:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":1359,"keyType":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"6647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"6639:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1358,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"6658:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"snapshotsCounts","nodeType":"VariableDeclaration","scope":1498,"src":"6692:51:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1364,"keyType":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"6700:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"6692:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"6711:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1498,"src":"6749:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"6749:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":1498,"src":"6767:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6614:176:6"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1498,"src":"6814:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6813:9:6"},"scope":1634,"src":"6585:1211:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"7800:464:6","text":" @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type\n NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,\n the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts\n who inherit from this to provide access to the delegation data by overriding this method.\n @param delegationType the type of delegation*"},"id":1518,"implemented":false,"kind":"function","modifiers":[],"name":"_getDelegationDataByType","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":1518,"src":"8301:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":1500,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"8301:14:6","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"8300:31:6"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1518,"src":"8386:56:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":1507,"keyType":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"8394:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8386:48:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":1506,"keyType":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"8413:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"8405:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1505,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"8424:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1518,"src":"8462:35:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1511,"keyType":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"8470:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8462:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"8481:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1518,"src":"8523:35:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1515,"keyType":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"8531:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8523:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"8542:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"}],"src":"8378:204:6"},"scope":1634,"src":"8267:316:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"9069:584:6","statements":[{"assignments":[1539],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"currentBlock","nodeType":"VariableDeclaration","scope":1601,"src":"9075:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1538,"name":"uint128","nodeType":"ElementaryTypeName","src":"9075:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":1545,"initialValue":{"arguments":[{"expression":{"id":1542,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9106:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9106:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9098:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1540,"name":"uint128","nodeType":"ElementaryTypeName","src":"9098:7:6","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9098:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"9075:44:6"},{"assignments":[1547],"declarations":[{"constant":false,"id":1547,"mutability":"mutable","name":"ownerSnapshotsCount","nodeType":"VariableDeclaration","scope":1601,"src":"9126:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"9126:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1551,"initialValue":{"baseExpression":{"id":1548,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9156:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1550,"indexExpression":{"id":1549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9172:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9156:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9126:52:6"},{"assignments":[1555],"declarations":[{"constant":false,"id":1555,"mutability":"mutable","name":"snapshotsOwner","nodeType":"VariableDeclaration","scope":1601,"src":"9184:51:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"typeName":{"id":1554,"keyType":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9192:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"9184:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1553,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"9203:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}},"visibility":"internal"}],"id":1559,"initialValue":{"baseExpression":{"id":1556,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"9238:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},"id":1558,"indexExpression":{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9248:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9238:16:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"nodeType":"VariableDeclarationStatement","src":"9184:70:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"ownerSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9323:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9346:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9323:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1563,"name":"snapshotsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"9357:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1567,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"ownerSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9372:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9394:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9372:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9357:39:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":974,"src":"9357:51:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1569,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9412:12:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9357:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9323:101:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1599,"nodeType":"Block","src":"9508:141:6","statements":[{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1582,"name":"snapshotsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"9516:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1584,"indexExpression":{"id":1583,"name":"ownerSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9531:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9516:35:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1586,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9563:12:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":1587,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"9577:8:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1585,"name":"Snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"9554:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Snapshot_$977_storage_ptr_$","typeString":"type(struct GovernancePowerDelegationERC20.Snapshot storage pointer)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9554:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_memory_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot memory"}},"src":"9516:70:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1590,"nodeType":"ExpressionStatement","src":"9516:70:6"},{"expression":{"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1591,"name":"snapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9594:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1593,"indexExpression":{"id":1592,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9610:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9594:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"ownerSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9619:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9641:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9619:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9594:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1598,"nodeType":"ExpressionStatement","src":"9594:48:6"}]},"id":1600,"nodeType":"IfStatement","src":"9312:337:6","trueBody":{"id":1581,"nodeType":"Block","src":"9431:71:6","statements":[{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1572,"name":"snapshotsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"9439:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)"}},"id":1576,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"ownerSnapshotsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"9454:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9476:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9454:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9439:39:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage","typeString":"struct GovernancePowerDelegationERC20.Snapshot storage ref"}},"id":1577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":976,"src":"9439:45:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1578,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"9487:8:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9439:56:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1580,"nodeType":"ExpressionStatement","src":"9439:56:6"}]}}]},"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"8587:250:6","text":" @dev Writes a snapshot for an owner of tokens\n @param owner The owner of the tokens\n @param oldValue The value before the operation that is gonna be executed after the snapshot\n @param newValue The value after the operation"},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_writeSnapshot","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"snapshots","nodeType":"VariableDeclaration","scope":1602,"src":"8869:66:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":1524,"keyType":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"8877:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8869:48:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":1523,"keyType":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"8896:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"8888:28:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":1522,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"8907:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"snapshotsCounts","nodeType":"VariableDeclaration","scope":1602,"src":"8941:51:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1528,"keyType":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"8949:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"8941:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"8960:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1602,"src":"8998:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"oldValue","nodeType":"VariableDeclaration","scope":1602,"src":"9017:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1532,"name":"uint128","nodeType":"ElementaryTypeName","src":"9017:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"newValue","nodeType":"VariableDeclaration","scope":1602,"src":"9039:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1534,"name":"uint128","nodeType":"ElementaryTypeName","src":"9039:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8863:196:6"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[],"src":"9069:0:6"},"scope":1634,"src":"8840:813:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"10129:164:6","statements":[{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"previousDelegatee","nodeType":"VariableDeclaration","scope":1632,"src":"10135:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"10135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1619,"initialValue":{"baseExpression":{"id":1616,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10163:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1618,"indexExpression":{"id":1617,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10173:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10163:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10135:48:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"previousDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"10194:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10223:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10215:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"10215:7:6","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10215:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"10194:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"nodeType":"IfStatement","src":"10190:68:6","trueBody":{"id":1628,"nodeType":"Block","src":"10227:31:6","statements":[{"expression":{"id":1626,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10242:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1613,"id":1627,"nodeType":"Return","src":"10235:16:6"}]}},{"expression":{"id":1630,"name":"previousDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"10271:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1613,"id":1631,"nodeType":"Return","src":"10264:24:6"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"9657:334:6","text":" @dev returns the user delegatee. If a user never performed any delegation,\n his delegated address will be 0x0. In that case we simply return the user itself\n @param delegator the address of the user for which return the delegatee\n @param delegates the array of delegates for a particular type of delegation*"},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"_getDelegatee","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"delegator","nodeType":"VariableDeclaration","scope":1633,"src":"10017:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10017:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"delegates","nodeType":"VariableDeclaration","scope":1633,"src":"10036:45:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1608,"keyType":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10044:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"10036:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"}],"src":"10016:66:6"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1633,"src":"10118:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"10118:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10117:9:6"},"scope":1634,"src":"9994:299:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1635,"src":"357:9938:6"}],"src":"37:10259:6"},"id":6},"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol","exportedSymbols":{"DistributionTypes":[1892],"IAaveDistributionManager":[1646]},"id":1647,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1636,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:7"},{"id":1637,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:7"},{"absolutePath":"@aave/safety-module/contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","id":1639,"nodeType":"ImportDirective","scope":1647,"sourceUnit":1893,"src":"95:63:7","symbolAliases":[{"foreign":{"id":1638,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:17:7","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1646,"linearizedBaseContracts":[1646],"name":"IAaveDistributionManager","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b2a5dbfa","id":1645,"implemented":false,"kind":"function","modifiers":[],"name":"configureAssets","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"assetsConfigInput","nodeType":"VariableDeclaration","scope":1645,"src":"224:63:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"},"typeName":{"baseType":{"id":1640,"name":"DistributionTypes.AssetConfigInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1884,"src":"224:34:7","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput"}},"id":1641,"nodeType":"ArrayTypeName","src":"224:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"}},"visibility":"internal"}],"src":"223:65:7"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"301:0:7"},"scope":1646,"src":"199:103:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1647,"src":"160:144:7"}],"src":"37:268:7"},"id":7},"@aave/safety-module/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1724]},"id":1725,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1648,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"32:22:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"56:133:8","text":" @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"},"fullyImplemented":false,"id":1724,"linearizedBaseContracts":[1724],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"211:62:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1655,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"296:2:8"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1655,"src":"322:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"321:9:8"},"scope":1724,"src":"276:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"335:68:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1663,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1663,"src":"425:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:17:8"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1663,"src":"465:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:9:8"},"scope":1724,"src":"406:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"478:197:8","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1673,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1673,"src":"696:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1673,"src":"715:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"715:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"695:35:8"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1673,"src":"749:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1670,"name":"bool","nodeType":"ElementaryTypeName","src":"749:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"748:6:8"},"scope":1724,"src":"678:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"759:252:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1683,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1683,"src":"1033:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1683,"src":"1048:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1032:32:8"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1683,"src":"1088:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:9:8"},"scope":1724,"src":"1014:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"1101:616:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1693,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1693,"src":"1737:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"1737:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1693,"src":"1754:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1736:33:8"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1693,"src":"1788:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1690,"name":"bool","nodeType":"ElementaryTypeName","src":"1788:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1787:6:8"},"scope":1724,"src":"1720:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"1798:280:8","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1705,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1705,"src":"2108:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1705,"src":"2128:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"2128:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1705,"src":"2151:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2151:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2102:67:8"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1705,"src":"2188:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1702,"name":"bool","nodeType":"ElementaryTypeName","src":"2188:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2187:6:8"},"scope":1724,"src":"2081:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"2198:148:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1714,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1714,"src":"2364:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"2364:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1714,"src":"2386:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"2386:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1712,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1714,"src":"2406:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:57:8"},"src":"2349:72:8"},{"anonymous":false,"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"2425:142:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1723,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1723,"src":"2585:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"2585:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1723,"src":"2608:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1723,"src":"2633:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2584:63:8"},"src":"2570:78:8"}],"scope":1725,"src":"190:2460:8"}],"src":"32:2619:8"},"id":8},"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol","exportedSymbols":{"IERC20":[1724],"IERC20Detailed":[1747]},"id":1748,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1726,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:9"},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":1728,"nodeType":"ImportDirective","scope":1748,"sourceUnit":1725,"src":"61:36:9","symbolAliases":[{"foreign":{"id":1727,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"69:6:9","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1730,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"183:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":1731,"nodeType":"InheritanceSpecifier","src":"183:6:9"}],"contractDependencies":[1724],"contractKind":"interface","documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"99:55:9","text":" @dev Interface for ERC20 including metadata*"},"fullyImplemented":false,"id":1747,"linearizedBaseContracts":[1747,1724],"name":"IERC20Detailed","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":1736,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"207:2:9"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1736,"src":"233:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1733,"name":"string","nodeType":"ElementaryTypeName","src":"233:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"232:15:9"},"scope":1747,"src":"194:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":1741,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"267:2:9"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1741,"src":"293:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1738,"name":"string","nodeType":"ElementaryTypeName","src":"293:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"292:15:9"},"scope":1747,"src":"252:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1746,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"329:2:9"},"returnParameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1746,"src":"355:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1743,"name":"uint8","nodeType":"ElementaryTypeName","src":"355:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"354:7:9"},"scope":1747,"src":"312:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1748,"src":"155:209:9"}],"src":"37:328:9"},"id":9},"@aave/safety-module/contracts/interfaces/IStakedAave.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/interfaces/IStakedAave.sol","exportedSymbols":{"IStakedAave":[1774]},"id":1775,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1749,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1774,"linearizedBaseContracts":[1774],"name":"IStakedAave","nodeType":"ContractDefinition","nodes":[{"functionSelector":"adc9772e","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"stake","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1756,"src":"102:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"102:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1756,"src":"114:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"114:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101:28:10"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"138:0:10"},"scope":1774,"src":"87:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1e9a6950","id":1763,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1763,"src":"159:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"159:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1763,"src":"171:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"158:28:10"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"195:0:10"},"scope":1774,"src":"143:53:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"787a08a6","id":1766,"implemented":false,"kind":"function","modifiers":[],"name":"cooldown","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"217:2:10"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"228:0:10"},"scope":1774,"src":"200:29:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9a99b4f0","id":1773,"implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1773,"src":"255:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1773,"src":"267:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"254:28:10"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"291:0:10"},"scope":1774,"src":"233:59:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1775,"src":"61:233:10"}],"src":"37:258:10"},"id":10},"@aave/safety-module/contracts/interfaces/ITransferHook.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/interfaces/ITransferHook.sol","exportedSymbols":{"ITransferHook":[1786]},"id":1787,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1776,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1786,"linearizedBaseContracts":[1786],"name":"ITransferHook","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4a393149","id":1785,"implemented":false,"kind":"function","modifiers":[],"name":"onTransfer","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1785,"src":"114:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"114:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1785,"src":"132:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"132:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1785,"src":"148:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"148:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108:58:11"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[],"src":"175:0:11"},"scope":1786,"src":"89:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1787,"src":"61:117:11"}],"src":"37:142:11"},"id":11},"@aave/safety-module/contracts/lib/Address.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/Address.sol","exportedSymbols":{"Address":[1850]},"id":1851,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1788,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"32:22:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"56:130:12","text":" @dev Collection of functions related to the address type\n From https://github.com/OpenZeppelin/openzeppelin-contracts"},"fullyImplemented":true,"id":1850,"linearizedBaseContracts":[1850],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":1814,"nodeType":"Block","src":"809:520:12","statements":[{"assignments":[1798],"declarations":[{"constant":false,"id":1798,"mutability":"mutable","name":"codehash","nodeType":"VariableDeclaration","scope":1814,"src":"1045:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1045:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1799,"nodeType":"VariableDeclarationStatement","src":"1045:16:12"},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"accountHash","nodeType":"VariableDeclaration","scope":1814,"src":"1067:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1067:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1803,"initialValue":{"hexValue":"307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1089:66:12","typeDescriptions":{"typeIdentifier":"t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1","typeString":"int_const 8947...(69 digits omitted)...1552"},"value":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"},"nodeType":"VariableDeclarationStatement","src":"1067:88:12"},{"AST":{"nodeType":"YulBlock","src":"1222:46:12","statements":[{"nodeType":"YulAssignment","src":"1230:32:12","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1254:7:12"}],"functionName":{"name":"extcodehash","nodeType":"YulIdentifier","src":"1242:11:12"},"nodeType":"YulFunctionCall","src":"1242:20:12"},"variableNames":[{"name":"codehash","nodeType":"YulIdentifier","src":"1230:8:12"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1792,"isOffset":false,"isSlot":false,"src":"1254:7:12","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"1230:8:12","valueSize":1}],"id":1804,"nodeType":"InlineAssembly","src":"1213:55:12"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"codehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1281:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1806,"name":"accountHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"1293:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1281:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"codehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1308:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"307830","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1320:3:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"1308:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1281:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1280:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1796,"id":1813,"nodeType":"Return","src":"1273:51:12"}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"207:533:12","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":1815,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1815,"src":"763:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"762:17:12"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1815,"src":"803:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1794,"name":"bool","nodeType":"ElementaryTypeName","src":"803:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:6:12"},"scope":1850,"src":"743:586:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"2283:300:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1826,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2305:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}],"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2297:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:12","typeDescriptions":{}}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2297:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2322:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2297:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2330:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2289:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2289:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1833,"nodeType":"ExpressionStatement","src":"2289:73:12"},{"assignments":[1835,null],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1848,"src":"2443:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1834,"name":"bool","nodeType":"ElementaryTypeName","src":"2443:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1842,"initialValue":{"arguments":[{"hexValue":"","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2491:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1836,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2461:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2461:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2483:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2461:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2461:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2442:52:12"},{"expression":{"arguments":[{"id":1844,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2508:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2517:60:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2500:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1847,"nodeType":"ExpressionStatement","src":"2500:78:12"}]},"documentation":{"id":1816,"nodeType":"StructuredDocumentation","src":"1333:876:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1849,"src":"2231:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"2231:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1849,"src":"2258:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2230:43:12"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"2283:0:12"},"scope":1850,"src":"2212:371:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1851,"src":"187:2398:12"}],"src":"32:2554:12"},"id":12},"@aave/safety-module/contracts/lib/Context.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/Context.sol","exportedSymbols":{"Context":[1874]},"id":1875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1852,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"33:22:13"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"57:563:13","text":" @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with GSN meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1874,"linearizedBaseContracts":[1874],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":1861,"nodeType":"Block","src":"721:28:13","statements":[{"expression":{"expression":{"id":1858,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"734:10:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":1857,"id":1860,"nodeType":"Return","src":"727:17:13"}]},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"670:2:13"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1862,"src":"704:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"704:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"703:17:13"},"scope":1874,"src":"651:98:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"818:155:13","statements":[{"expression":{"id":1867,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"824:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1874","typeString":"contract Context"}},"id":1868,"nodeType":"ExpressionStatement","src":"824:4:13"},{"expression":{"expression":{"id":1869,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"960:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"960:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1866,"id":1871,"nodeType":"Return","src":"953:15:13"}]},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[],"src":"770:2:13"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1873,"src":"804:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1864,"name":"bytes","nodeType":"ElementaryTypeName","src":"804:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"803:14:13"},"scope":1874,"src":"753:220:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1875,"src":"621:354:13"}],"src":"33:943:13"},"id":13},"@aave/safety-module/contracts/lib/DistributionTypes.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/DistributionTypes.sol","exportedSymbols":{"DistributionTypes":[1892]},"id":1893,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1876,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:14"},{"id":1877,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1892,"linearizedBaseContracts":[1892],"name":"DistributionTypes","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DistributionTypes.AssetConfigInput","id":1884,"members":[{"constant":false,"id":1879,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":1884,"src":"155:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1878,"name":"uint128","nodeType":"ElementaryTypeName","src":"155:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":1884,"src":"186:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":1884,"src":"211:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"211:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AssetConfigInput","nodeType":"StructDefinition","scope":1892,"src":"125:114:14","visibility":"public"},{"canonicalName":"DistributionTypes.UserStakeInput","id":1891,"members":[{"constant":false,"id":1886,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":1891,"src":"271:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"stakedByUser","nodeType":"VariableDeclaration","scope":1891,"src":"300:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":1891,"src":"326:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserStakeInput","nodeType":"StructDefinition","scope":1892,"src":"243:107:14","visibility":"public"}],"scope":1893,"src":"95:257:14"}],"src":"37:316:14"},"id":14},"@aave/safety-module/contracts/lib/ERC20.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/ERC20.sol","exportedSymbols":{"Context":[1874],"ERC20":[2420],"IERC20":[1724],"IERC20Detailed":[1747],"SafeMath":[3058]},"id":2421,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1894,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:15"},{"absolutePath":"@aave/safety-module/contracts/lib/Context.sol","file":"./Context.sol","id":1896,"nodeType":"ImportDirective","scope":2421,"sourceUnit":1875,"src":"61:38:15","symbolAliases":[{"foreign":{"id":1895,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"src":"69:7:15","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":1898,"nodeType":"ImportDirective","scope":2421,"sourceUnit":1725,"src":"100:48:15","symbolAliases":[{"foreign":{"id":1897,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"108:6:15","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol","file":"../interfaces/IERC20Detailed.sol","id":1900,"nodeType":"ImportDirective","scope":2421,"sourceUnit":1748,"src":"149:64:15","symbolAliases":[{"foreign":{"id":1899,"name":"IERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"src":"157:14:15","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"./SafeMath.sol","id":1902,"nodeType":"ImportDirective","scope":2421,"sourceUnit":3059,"src":"214:40:15","symbolAliases":[{"foreign":{"id":1901,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"222:8:15","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1904,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":1874,"src":"353:7:15","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1874","typeString":"contract Context"}},"id":1905,"nodeType":"InheritanceSpecifier","src":"353:7:15"},{"baseName":{"id":1906,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"362:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":1907,"nodeType":"InheritanceSpecifier","src":"362:6:15"},{"baseName":{"id":1908,"name":"IERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":1747,"src":"370:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Detailed_$1747","typeString":"contract IERC20Detailed"}},"id":1909,"nodeType":"InheritanceSpecifier","src":"370:14:15"}],"contractDependencies":[1724,1747,1874],"contractKind":"contract","documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"256:78:15","text":" @title ERC20\n @notice Basic ERC20 implementation\n @author Aave*"},"fullyImplemented":true,"id":2420,"linearizedBaseContracts":[2420,1747,1724,1874],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"id":1912,"libraryName":{"id":1910,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"395:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"389:27:15","typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1916,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":2420,"src":"420:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1915,"keyType":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"420:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1922,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","scope":2420,"src":"469:67:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1921,"keyType":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"469:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1920,"keyType":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"496:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"488:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1924,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","scope":2420,"src":"540:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1926,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":2420,"src":"572:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1925,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1928,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":2420,"src":"596:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1927,"name":"string","nodeType":"ElementaryTypeName","src":"596:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1930,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","scope":2420,"src":"622:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1929,"name":"uint8","nodeType":"ElementaryTypeName","src":"622:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":1951,"nodeType":"Block","src":"743:71:15","statements":[{"expression":{"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1939,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"749:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1940,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"757:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"749:12:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1942,"nodeType":"ExpressionStatement","src":"749:12:15"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1943,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"767:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1944,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"777:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"767:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1946,"nodeType":"ExpressionStatement","src":"767:16:15"},{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"789:9:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1948,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"801:8:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"789:20:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1950,"nodeType":"ExpressionStatement","src":"789:20:15"}]},"id":1952,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":1952,"src":"667:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"667:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":1952,"src":"691:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1933,"name":"string","nodeType":"ElementaryTypeName","src":"691:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":1952,"src":"717:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1935,"name":"uint8","nodeType":"ElementaryTypeName","src":"717:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"661:74:15"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"743:0:15"},"scope":2420,"src":"650:164:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1736],"body":{"id":1961,"nodeType":"Block","src":"927:23:15","statements":[{"expression":{"id":1959,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"940:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1958,"id":1960,"nodeType":"Return","src":"933:12:15"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"818:45:15","text":" @return the name of the token*"},"functionSelector":"06fdde03","id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":{"id":1955,"nodeType":"OverrideSpecifier","overrides":[],"src":"894:8:15"},"parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"879:2:15"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1962,"src":"912:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1956,"name":"string","nodeType":"ElementaryTypeName","src":"912:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"911:15:15"},"scope":2420,"src":"866:84:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1741],"body":{"id":1971,"nodeType":"Block","src":"1067:25:15","statements":[{"expression":{"id":1969,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1968,"id":1970,"nodeType":"Return","src":"1073:14:15"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"954:47:15","text":" @return the symbol of the token*"},"functionSelector":"95d89b41","id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":{"id":1965,"nodeType":"OverrideSpecifier","overrides":[],"src":"1034:8:15"},"parameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"1019:2:15"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1972,"src":"1052:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1966,"name":"string","nodeType":"ElementaryTypeName","src":"1052:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1051:15:15"},"scope":2420,"src":"1004:88:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1746],"body":{"id":1981,"nodeType":"Block","src":"1205:27:15","statements":[{"expression":{"id":1979,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1218:9:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1978,"id":1980,"nodeType":"Return","src":"1211:16:15"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"1096:49:15","text":" @return the decimals of the token*"},"functionSelector":"313ce567","id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":{"id":1975,"nodeType":"OverrideSpecifier","overrides":[],"src":"1180:8:15"},"parameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"1165:2:15"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1982,"src":"1198:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1976,"name":"uint8","nodeType":"ElementaryTypeName","src":"1198:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1197:7:15"},"scope":2420,"src":"1148:84:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1655],"body":{"id":1991,"nodeType":"Block","src":"1354:30:15","statements":[{"expression":{"id":1989,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"1367:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1988,"id":1990,"nodeType":"Return","src":"1360:19:15"}]},"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"1236:53:15","text":" @return the total supply of the token*"},"functionSelector":"18160ddd","id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":{"id":1985,"nodeType":"OverrideSpecifier","overrides":[],"src":"1327:8:15"},"parameters":{"id":1984,"nodeType":"ParameterList","parameters":[],"src":"1312:2:15"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1992,"src":"1345:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:9:15"},"scope":2420,"src":"1292:92:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1663],"body":{"id":2005,"nodeType":"Block","src":"1514:36:15","statements":[{"expression":{"baseExpression":{"id":2001,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1527:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2003,"indexExpression":{"id":2002,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1537:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1527:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2000,"id":2004,"nodeType":"Return","src":"1520:25:15"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"1388:48:15","text":" @return the balance of the token*"},"functionSelector":"70a08231","id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":1997,"nodeType":"OverrideSpecifier","overrides":[],"src":"1487:8:15"},"parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2006,"src":"1458:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1457:17:15"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2006,"src":"1505:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1504:9:15"},"scope":2420,"src":"1439:111:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1673],"body":{"id":2026,"nodeType":"Block","src":"1896:70:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2018,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1912:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1912:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2020,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"1926:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2021,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"1937:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1902:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1902:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"1902:42:15"},{"expression":{"hexValue":"74727565","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1957:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2016,"id":2025,"nodeType":"Return","src":"1950:11:15"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"1554:247:15","text":" @dev executes a transfer of tokens from msg.sender to recipient\n @param recipient the recipient of the tokens\n @param amount the amount of tokens being transferred\n @return true if the transfer succeeds, false otherwise*"},"functionSelector":"a9059cbb","id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":2013,"nodeType":"OverrideSpecifier","overrides":[],"src":"1872:8:15"},"parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2027,"src":"1822:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2008,"name":"address","nodeType":"ElementaryTypeName","src":"1822:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2027,"src":"1841:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1821:35:15"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2027,"src":"1890:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2014,"name":"bool","nodeType":"ElementaryTypeName","src":"1890:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1889:6:15"},"scope":2420,"src":"1804:162:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1683],"body":{"id":2044,"nodeType":"Block","src":"2352:45:15","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2038,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"2365:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2040,"indexExpression":{"id":2039,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2377:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2365:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2042,"indexExpression":{"id":2041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2384:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2365:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2037,"id":2043,"nodeType":"Return","src":"2358:34:15"}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"1970:259:15","text":" @dev returns the allowance of spender on the tokens owned by owner\n @param owner the owner of the tokens\n @param spender the user allowed to spend the owner's tokens\n @return the amount of owner's tokens spender is allowed to spend*"},"functionSelector":"dd62ed3e","id":2045,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":2034,"nodeType":"OverrideSpecifier","overrides":[],"src":"2319:8:15"},"parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2045,"src":"2251:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"2251:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2045,"src":"2266:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2250:32:15"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2045,"src":"2341:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2340:9:15"},"scope":2420,"src":"2232:165:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1693],"body":{"id":2065,"nodeType":"Block","src":"2650:67:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2057,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2665:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2665:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2059,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"2679:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2060,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"2688:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2056,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"2656:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2656:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2062,"nodeType":"ExpressionStatement","src":"2656:39:15"},{"expression":{"hexValue":"74727565","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2708:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2055,"id":2064,"nodeType":"Return","src":"2701:11:15"}]},"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"2401:157:15","text":" @dev allows spender to spend the tokens owned by msg.sender\n @param spender the user allowed to spend msg.sender tokens\n @return true*"},"functionSelector":"095ea7b3","id":2066,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":2052,"nodeType":"OverrideSpecifier","overrides":[],"src":"2626:8:15"},"parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2066,"src":"2578:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"2578:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2066,"src":"2595:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2595:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2577:33:15"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2066,"src":"2644:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2053,"name":"bool","nodeType":"ElementaryTypeName","src":"2644:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2643:6:15"},"scope":2420,"src":"2561:156:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1705],"body":{"id":2103,"nodeType":"Block","src":"3172:215:15","statements":[{"expression":{"arguments":[{"id":2080,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"3188:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2081,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"3196:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2082,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"3207:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2079,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"3178:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3178:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"3178:36:15"},{"expression":{"arguments":[{"id":2086,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"3236:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2087,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3250:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":2096,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"3308:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3316:42:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":2089,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"3270:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2091,"indexExpression":{"id":2090,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"3282:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3270:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2094,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2092,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3290:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3290:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3270:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"3270:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3270:89:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2085,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3220:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:145:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2100,"nodeType":"ExpressionStatement","src":"3220:145:15"},{"expression":{"hexValue":"74727565","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3378:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2078,"id":2102,"nodeType":"Return","src":"3371:11:15"}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"2721:320:15","text":" @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\n @param sender the owner of the tokens\n @param recipient the recipient of the tokens\n @param amount the amount of tokens being transferred\n @return true if the transfer succeeds, false otherwise*"},"functionSelector":"23b872dd","id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":2075,"nodeType":"OverrideSpecifier","overrides":[],"src":"3148:8:15"},"parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2104,"src":"3071:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2104,"src":"3091:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2070,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2104,"src":"3114:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3065:67:15"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2104,"src":"3166:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2076,"name":"bool","nodeType":"ElementaryTypeName","src":"3166:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3165:6:15"},"scope":2420,"src":"3044:343:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2131,"nodeType":"Block","src":"3721:111:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3736:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3736:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2117,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3750:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2125,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3798:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":2118,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"3759:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2121,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2119,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3771:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3771:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3759:25:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2123,"indexExpression":{"id":2122,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3785:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3759:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"3759:38:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3759:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2114,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3727:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3727:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2128,"nodeType":"ExpressionStatement","src":"3727:83:15"},{"expression":{"hexValue":"74727565","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3823:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2113,"id":2130,"nodeType":"Return","src":"3816:11:15"}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"3391:233:15","text":" @dev increases the allowance of spender to spend msg.sender tokens\n @param spender the user allowed to spend on behalf of msg.sender\n @param addedValue the amount being added to the allowance\n @return true*"},"functionSelector":"39509351","id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2132,"src":"3654:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"3654:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","scope":2132,"src":"3671:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3671:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3653:37:15"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2132,"src":"3715:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2111,"name":"bool","nodeType":"ElementaryTypeName","src":"3715:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3714:6:15"},"scope":2420,"src":"3627:205:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2160,"nodeType":"Block","src":"4195:205:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2143,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"4217:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4217:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2145,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4237:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2153,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"4300:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4325:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":2146,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"4252:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2149,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2147,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"4264:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4264:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4252:25:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2151,"indexExpression":{"id":2150,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4278:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4252:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"4252:38:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4252:120:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2142,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"4201:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4201:177:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2157,"nodeType":"ExpressionStatement","src":"4201:177:15"},{"expression":{"hexValue":"74727565","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4391:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2141,"id":2159,"nodeType":"Return","src":"4384:11:15"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"3836:243:15","text":" @dev decreases the allowance of spender to spend msg.sender tokens\n @param spender the user allowed to spend on behalf of msg.sender\n @param subtractedValue the amount being subtracted to the allowance\n @return true*"},"functionSelector":"a457c2d7","id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2161,"src":"4109:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"4109:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","scope":2161,"src":"4126:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4108:42:15"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2161,"src":"4187:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2139,"name":"bool","nodeType":"ElementaryTypeName","src":"4187:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4186:6:15"},"scope":2420,"src":"4082:318:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2225,"nodeType":"Block","src":"4507:417:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4521:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4539:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4531:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"4531:7:15","typeDescriptions":{}}},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4531:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4521:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4543:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":2170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4513:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4513:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"4513:70:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4597:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4618:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4610:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"4610:7:15","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4610:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4597:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4622:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4589:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4589:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"4589:71:15"},{"expression":{"arguments":[{"id":2191,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4688:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2192,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4696:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4707:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"4667:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4667:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2195,"nodeType":"ExpressionStatement","src":"4667:47:15"},{"expression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2196,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4721:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2198,"indexExpression":{"id":2197,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4731:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4721:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4763:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4771:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":2199,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4741:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2201,"indexExpression":{"id":2200,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4751:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4741:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"4741:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4741:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4721:91:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2207,"nodeType":"ExpressionStatement","src":"4721:91:15"},{"expression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2208,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4818:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2210,"indexExpression":{"id":2209,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4828:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4818:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4866:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2211,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4841:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2213,"indexExpression":{"id":2212,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4851:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4841:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4841:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4841:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4818:55:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2218,"nodeType":"ExpressionStatement","src":"4818:55:15"},{"eventCall":{"arguments":[{"id":2220,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4893:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2221,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4901:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2222,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4912:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2219,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"4884:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4884:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"EmitStatement","src":"4879:40:15"}]},"id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2226,"src":"4428:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"4428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2226,"src":"4448:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2226,"src":"4471:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:67:15"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[],"src":"4507:0:15"},"scope":2420,"src":"4404:520:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"4993:283:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5007:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5026:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"5018:7:15","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5018:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5007:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5030:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":2233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4999:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4999:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2242,"nodeType":"ExpressionStatement","src":"4999:65:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5100:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5092:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"5092:7:15","typeDescriptions":{}}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5092:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2248,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5104:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2249,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5113:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2243,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5071:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5071:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2251,"nodeType":"ExpressionStatement","src":"5071:49:15"},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5127:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2255,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5159:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2253,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5142:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5142:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5142:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5127:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"5127:39:15"},{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2259,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5172:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2261,"indexExpression":{"id":2260,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5182:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5172:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5216:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2262,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5193:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2264,"indexExpression":{"id":2263,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5203:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5193:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5193:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5193:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5172:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"nodeType":"ExpressionStatement","src":"5172:51:15"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5251:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5243:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:15","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5243:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5255:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5264:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2270,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5234:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5234:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"EmitStatement","src":"5229:42:15"}]},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2280,"src":"4943:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"4943:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2280,"src":"4960:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4942:33:15"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"4993:0:15"},"scope":2420,"src":"4928:348:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"5345:323:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"5359:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5370:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"5370:7:15","typeDescriptions":{}}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5370:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5359:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5382:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":2287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5351:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"ExpressionStatement","src":"5351:67:15"},{"expression":{"arguments":[{"id":2298,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"5446:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5463:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5455:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:15","typeDescriptions":{}}},"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5455:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2303,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5467:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"5425:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2305,"nodeType":"ExpressionStatement","src":"5425:49:15"},{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2306,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5481:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2308,"indexExpression":{"id":2307,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"5491:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5481:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5525:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5533:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":2309,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5502:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2311,"indexExpression":{"id":2310,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"5512:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5502:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"5502:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5502:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5481:89:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ExpressionStatement","src":"5481:89:15"},{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2318,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5576:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2321,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5608:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2319,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5591:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"5591:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5591:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5576:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"5576:39:15"},{"eventCall":{"arguments":[{"id":2326,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"5635:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"5644:7:15","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5644:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2331,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5656:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2325,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"5626:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5626:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"EmitStatement","src":"5621:42:15"}]},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2335,"src":"5295:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"5295:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2335,"src":"5312:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5294:33:15"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[],"src":"5345:0:15"},"scope":2420,"src":"5280:388:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2378,"nodeType":"Block","src":"5771:239:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5785:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5802:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"5794:7:15","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5794:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5785:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5806:38:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":2344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5777:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5777:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"ExpressionStatement","src":"5777:68:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5859:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5878:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5870:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2356,"name":"address","nodeType":"ElementaryTypeName","src":"5870:7:15","typeDescriptions":{}}},"id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5870:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5859:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5882:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5851:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5851:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"ExpressionStatement","src":"5851:68:15"},{"expression":{"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2364,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"5926:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2367,"indexExpression":{"id":2365,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5938:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5926:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2368,"indexExpression":{"id":2366,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5945:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5926:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5956:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5926:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2371,"nodeType":"ExpressionStatement","src":"5926:36:15"},{"eventCall":{"arguments":[{"id":2373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5982:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2374,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5989:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5998:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2372,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5973:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5973:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2377,"nodeType":"EmitStatement","src":"5968:37:15"}]},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2379,"src":"5695:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"5695:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2379,"src":"5714:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"5714:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2379,"src":"5735:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5735:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5689:64:15"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[],"src":"5771:0:15"},"scope":2420,"src":"5672:338:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2388,"nodeType":"Block","src":"6064:26:15","statements":[{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2384,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"6070:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2385,"name":"newName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"6078:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6070:15:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2387,"nodeType":"ExpressionStatement","src":"6070:15:15"}]},"id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"_setName","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"newName","nodeType":"VariableDeclaration","scope":2389,"src":"6032:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2380,"name":"string","nodeType":"ElementaryTypeName","src":"6032:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6031:23:15"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"6064:0:15"},"scope":2420,"src":"6014:76:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2398,"nodeType":"Block","src":"6148:30:15","statements":[{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6154:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2395,"name":"newSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"6164:9:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6154:19:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2397,"nodeType":"ExpressionStatement","src":"6154:19:15"}]},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"_setSymbol","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"newSymbol","nodeType":"VariableDeclaration","scope":2399,"src":"6114:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2390,"name":"string","nodeType":"ElementaryTypeName","src":"6114:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6113:25:15"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[],"src":"6148:0:15"},"scope":2420,"src":"6094:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"6232:34:15","statements":[{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"6238:9:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2405,"name":"newDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"6250:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6238:23:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2407,"nodeType":"ExpressionStatement","src":"6238:23:15"}]},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"_setDecimals","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"newDecimals","nodeType":"VariableDeclaration","scope":2409,"src":"6204:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2400,"name":"uint8","nodeType":"ElementaryTypeName","src":"6204:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6203:19:15"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"6232:0:15"},"scope":2420,"src":"6182:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"6375:2:15","statements":[]},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2419,"src":"6305:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"6305:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2419,"src":"6323:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"6323:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2419,"src":"6339:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"6339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6299:58:15"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[],"src":"6375:0:15"},"scope":2420,"src":"6270:107:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2421,"src":"335:6044:15"}],"src":"37:6343:15"},"id":15},"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol","exportedSymbols":{"ERC20":[2420],"ERC20WithSnapshot":[2664],"ITransferHook":[1786],"SafeMath":[3058]},"id":2665,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":2422,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:16"},{"absolutePath":"@aave/safety-module/contracts/lib/ERC20.sol","file":"../lib/ERC20.sol","id":2424,"nodeType":"ImportDirective","scope":2665,"sourceUnit":2421,"src":"61:39:16","symbolAliases":[{"foreign":{"id":2423,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"69:5:16","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/ITransferHook.sol","file":"../interfaces/ITransferHook.sol","id":2426,"nodeType":"ImportDirective","scope":2665,"sourceUnit":1787,"src":"101:62:16","symbolAliases":[{"foreign":{"id":2425,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"src":"109:13:16","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","id":2428,"nodeType":"ImportDirective","scope":2665,"sourceUnit":3059,"src":"164:45:16","symbolAliases":[{"foreign":{"id":2427,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"172:8:16","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2430,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2420,"src":"371:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2420","typeString":"contract ERC20"}},"id":2431,"nodeType":"InheritanceSpecifier","src":"371:5:16"}],"contractDependencies":[1724,1747,1874,2420],"contractKind":"contract","documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"211:129:16","text":" @title ERC20WithSnapshot\n @notice ERC20 including snapshots of balances on transfer-related actions\n @author Aave*"},"fullyImplemented":true,"id":2664,"linearizedBaseContracts":[2664,2420,1747,1724,1874],"name":"ERC20WithSnapshot","nodeType":"ContractDefinition","nodes":[{"id":2434,"libraryName":{"id":2432,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"387:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"381:27:16","typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC20WithSnapshot.Snapshot","id":2439,"members":[{"constant":false,"id":2436,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":2439,"src":"504:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2435,"name":"uint128","nodeType":"ElementaryTypeName","src":"504:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2439,"src":"529:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2437,"name":"uint128","nodeType":"ElementaryTypeName","src":"529:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"Snapshot","nodeType":"StructDefinition","scope":2664,"src":"482:65:16","visibility":"public"},{"constant":false,"functionSelector":"2acbf823","id":2445,"mutability":"mutable","name":"_snapshots","nodeType":"VariableDeclaration","scope":2664,"src":"551:66:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct ERC20WithSnapshot.Snapshot))"},"typeName":{"id":2444,"keyType":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"551:48:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct ERC20WithSnapshot.Snapshot))"},"valueType":{"id":2443,"keyType":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"570:28:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot)"},"valueType":{"id":2442,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":2439,"src":"589:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_storage_ptr","typeString":"struct ERC20WithSnapshot.Snapshot"}}}},"visibility":"public"},{"constant":false,"functionSelector":"8779588c","id":2449,"mutability":"mutable","name":"_countsSnapshots","nodeType":"VariableDeclaration","scope":2664,"src":"621:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2448,"keyType":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"621:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"676:278:16","text":"@dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\n !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\n to control all potential reentrancies by calling back the this contract"},"functionSelector":"c3863ada","id":2452,"mutability":"mutable","name":"_aaveGovernance","nodeType":"VariableDeclaration","scope":2664,"src":"957:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":2451,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"957:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"public"},{"anonymous":false,"id":2460,"name":"SnapshotDone","nodeType":"EventDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"indexed":false,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2460,"src":"1017:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2453,"name":"address","nodeType":"ElementaryTypeName","src":"1017:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2456,"indexed":false,"mutability":"mutable","name":"oldValue","nodeType":"VariableDeclaration","scope":2460,"src":"1032:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2455,"name":"uint128","nodeType":"ElementaryTypeName","src":"1032:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2458,"indexed":false,"mutability":"mutable","name":"newValue","nodeType":"VariableDeclaration","scope":2460,"src":"1050:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2457,"name":"uint128","nodeType":"ElementaryTypeName","src":"1050:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1016:51:16"},"src":"998:70:16"},{"body":{"id":2474,"nodeType":"Block","src":"1195:2:16","statements":[]},"id":2475,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2469,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1171:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2470,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"1177:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2471,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"1185:8:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2472,"modifierName":{"id":2468,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1165:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$2420_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"1165:29:16"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":2475,"src":"1089:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2461,"name":"string","nodeType":"ElementaryTypeName","src":"1089:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":2475,"src":"1113:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2463,"name":"string","nodeType":"ElementaryTypeName","src":"1113:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":2475,"src":"1139:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2465,"name":"uint8","nodeType":"ElementaryTypeName","src":"1139:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1083:74:16"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[],"src":"1195:0:16"},"scope":2664,"src":"1072:125:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2484,"nodeType":"Block","src":"1276:43:16","statements":[{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"_aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"1282:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2481,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1300:14:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"src":"1282:32:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"id":2483,"nodeType":"ExpressionStatement","src":"1282:32:16"}]},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"_setAaveGovernance","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"aaveGovernance","nodeType":"VariableDeclaration","scope":2485,"src":"1229:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":2476,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"1229:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"internal"}],"src":"1228:30:16"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[],"src":"1276:0:16"},"scope":2664,"src":"1201:118:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2567,"nodeType":"Block","src":"1684:659:16","statements":[{"assignments":[2496],"declarations":[{"constant":false,"id":2496,"mutability":"mutable","name":"currentBlock","nodeType":"VariableDeclaration","scope":2567,"src":"1690:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2495,"name":"uint128","nodeType":"ElementaryTypeName","src":"1690:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":2502,"initialValue":{"arguments":[{"expression":{"id":2499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1721:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1721:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1713:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2497,"name":"uint128","nodeType":"ElementaryTypeName","src":"1713:7:16","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1713:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"1690:44:16"},{"assignments":[2504],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"ownerCountOfSnapshots","nodeType":"VariableDeclaration","scope":2567,"src":"1741:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"baseExpression":{"id":2505,"name":"_countsSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"1773:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2507,"indexExpression":{"id":2506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1790:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1773:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1741:55:16"},{"assignments":[2512],"declarations":[{"constant":false,"id":2512,"mutability":"mutable","name":"snapshotsOwner","nodeType":"VariableDeclaration","scope":2567,"src":"1802:51:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot)"},"typeName":{"id":2511,"keyType":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1802:28:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot)"},"valueType":{"id":2510,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":2439,"src":"1821:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_storage_ptr","typeString":"struct ERC20WithSnapshot.Snapshot"}}},"visibility":"internal"}],"id":2516,"initialValue":{"baseExpression":{"id":2513,"name":"_snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"1856:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct ERC20WithSnapshot.Snapshot storage ref))"}},"id":2515,"indexExpression":{"id":2514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1867:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:17:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot storage ref)"}},"nodeType":"VariableDeclarationStatement","src":"1802:71:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"ownerCountOfSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"1942:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1967:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1942:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2520,"name":"snapshotsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1978:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot storage ref)"}},"id":2525,"indexExpression":{"arguments":[{"hexValue":"31","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2019:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2521,"name":"ownerCountOfSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"1993:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"1993:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1993:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1978:44:16","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_storage","typeString":"struct ERC20WithSnapshot.Snapshot storage ref"}},"id":2526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"1978:56:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2527,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"2038:12:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"1978:72:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1942:108:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2559,"nodeType":"Block","src":"2139:149:16","statements":[{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2541,"name":"snapshotsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2147:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot storage ref)"}},"id":2543,"indexExpression":{"id":2542,"name":"ownerCountOfSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"2162:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2147:37:16","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_storage","typeString":"struct ERC20WithSnapshot.Snapshot storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2545,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"2196:12:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":2546,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2210:8:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":2544,"name":"Snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"2187:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Snapshot_$2439_storage_ptr_$","typeString":"type(struct ERC20WithSnapshot.Snapshot storage pointer)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2187:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_memory_ptr","typeString":"struct ERC20WithSnapshot.Snapshot memory"}},"src":"2147:72:16","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_storage","typeString":"struct ERC20WithSnapshot.Snapshot storage ref"}},"id":2549,"nodeType":"ExpressionStatement","src":"2147:72:16"},{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2550,"name":"_countsSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"2227:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2552,"indexExpression":{"id":2551,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2244:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2227:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2279:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2553,"name":"ownerCountOfSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"2253:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"2253:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2253:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2227:54:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"2227:54:16"}]},"id":2560,"nodeType":"IfStatement","src":"1931:357:16","trueBody":{"id":2540,"nodeType":"Block","src":"2057:76:16","statements":[{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2530,"name":"snapshotsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2065:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$2439_storage_$","typeString":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot storage ref)"}},"id":2535,"indexExpression":{"arguments":[{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2106:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2531,"name":"ownerCountOfSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"2080:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"2080:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2065:44:16","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$2439_storage","typeString":"struct ERC20WithSnapshot.Snapshot storage ref"}},"id":2536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"2065:50:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2537,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2118:8:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2065:61:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2539,"nodeType":"ExpressionStatement","src":"2065:61:16"}]}},{"eventCall":{"arguments":[{"id":2562,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2312:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2563,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2319:8:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":2564,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2329:8:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":2561,"name":"SnapshotDone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"2299:12:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (address,uint128,uint128)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2299:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"EmitStatement","src":"2294:44:16"}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"1323:250:16","text":" @dev Writes a snapshot for an owner of tokens\n @param owner The owner of the tokens\n @param oldValue The value before the operation that is gonna be executed after the snapshot\n @param newValue The value after the operation"},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"_writeSnapshot","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2568,"src":"1605:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"1605:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"oldValue","nodeType":"VariableDeclaration","scope":2568,"src":"1624:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2489,"name":"uint128","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"newValue","nodeType":"VariableDeclaration","scope":2568,"src":"1646:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2491,"name":"uint128","nodeType":"ElementaryTypeName","src":"1646:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1599:67:16"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[],"src":"1684:0:16"},"scope":2664,"src":"1576:767:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2419],"body":{"id":2662,"nodeType":"Block","src":"2812:595:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2822:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"2830:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2822:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2584,"nodeType":"IfStatement","src":"2818:37:16","trueBody":{"id":2583,"nodeType":"Block","src":"2834:21:16","statements":[{"functionReturnParameters":2578,"id":2582,"nodeType":"Return","src":"2842:7:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2865:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2881:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2873:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"2873:7:16","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2873:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2865:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2613,"nodeType":"IfStatement","src":"2861:160:16","trueBody":{"id":2612,"nodeType":"Block","src":"2885:136:16","statements":[{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"fromBalance","nodeType":"VariableDeclaration","scope":2612,"src":"2893:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2596,"initialValue":{"arguments":[{"id":2594,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2925:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2593,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2915:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2915:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2893:37:16"},{"expression":{"arguments":[{"id":2598,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2953:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2601,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"2967:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2959:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2599,"name":"uint128","nodeType":"ElementaryTypeName","src":"2959:7:16","typeDescriptions":{}}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2959:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":2607,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"3005:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2605,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"2989:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"2989:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2989:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2981:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2603,"name":"uint128","nodeType":"ElementaryTypeName","src":"2981:7:16","typeDescriptions":{}}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2981:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":2597,"name":"_writeSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2938:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (address,uint128,uint128)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2938:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"ExpressionStatement","src":"2938:76:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"3030:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"3036:7:16","typeDescriptions":{}}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3036:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3030:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2642,"nodeType":"IfStatement","src":"3026:148:16","trueBody":{"id":2641,"nodeType":"Block","src":"3048:126:16","statements":[{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"toBalance","nodeType":"VariableDeclaration","scope":2641,"src":"3056:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3056:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2625,"initialValue":{"arguments":[{"id":2623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"3086:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2622,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"3076:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3076:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3056:33:16"},{"expression":{"arguments":[{"id":2627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"3112:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2630,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"3124:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2628,"name":"uint128","nodeType":"ElementaryTypeName","src":"3116:7:16","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3116:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":2636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"3158:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2634,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"3144:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"3144:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3144:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3136:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2632,"name":"uint128","nodeType":"ElementaryTypeName","src":"3136:7:16","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3136:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":2626,"name":"_writeSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3097:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (address,uint128,uint128)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3097:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2640,"nodeType":"ExpressionStatement","src":"3097:70:16"}]}},{"assignments":[2644],"declarations":[{"constant":false,"id":2644,"mutability":"mutable","name":"aaveGovernance","nodeType":"VariableDeclaration","scope":2662,"src":"3253:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":2643,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"3253:13:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"internal"}],"id":2646,"initialValue":{"id":2645,"name":"_aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"3284:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"VariableDeclarationStatement","src":"3253:46:16"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3309:14:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3341:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2648,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"3327:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransferHook_$1786_$","typeString":"type(contract ITransferHook)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3327:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"src":"3309:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"nodeType":"IfStatement","src":"3305:98:16","trueBody":{"id":2660,"nodeType":"Block","src":"3345:58:16","statements":[{"expression":{"arguments":[{"id":2655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"3379:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2656,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"3385:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"3389:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2652,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3353:14:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onTransfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"3353:25:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3353:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2659,"nodeType":"ExpressionStatement","src":"3353:43:16"}]}}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"2347:348:16","text":" @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\n - On _transfer, it writes snapshots for both \"from\" and \"to\"\n - On _mint, only for _to\n - On _burn, only for _from\n @param from the from address\n @param to the to address\n @param amount the amount to transfer"},"id":2663,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":2577,"nodeType":"OverrideSpecifier","overrides":[],"src":"2803:8:16"},"parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2663,"src":"2733:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"2733:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2663,"src":"2751:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"2751:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2663,"src":"2767:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2727:58:16"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[],"src":"2812:0:16"},"scope":2664,"src":"2698:709:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2665,"src":"341:3068:16"}],"src":"37:3373:16"},"id":16},"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol","exportedSymbols":{"ERC20":[2420],"GovernancePowerDelegationERC20":[1634],"GovernancePowerWithSnapshot":[2705],"ITransferHook":[1786],"SafeMath":[3058]},"id":2706,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":2666,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:17"},{"absolutePath":"@aave/safety-module/contracts/lib/ERC20.sol","file":"../lib/ERC20.sol","id":2668,"nodeType":"ImportDirective","scope":2706,"sourceUnit":2421,"src":"61:39:17","symbolAliases":[{"foreign":{"id":2667,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"69:5:17","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/ITransferHook.sol","file":"../interfaces/ITransferHook.sol","id":2670,"nodeType":"ImportDirective","scope":2706,"sourceUnit":1787,"src":"101:62:17","symbolAliases":[{"foreign":{"id":2669,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"src":"109:13:17","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","id":2672,"nodeType":"ImportDirective","scope":2706,"sourceUnit":3059,"src":"164:45:17","symbolAliases":[{"foreign":{"id":2671,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"172:8:17","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol","file":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol","id":2674,"nodeType":"ImportDirective","scope":2706,"sourceUnit":1635,"src":"210:124:17","symbolAliases":[{"foreign":{"id":2673,"name":"GovernancePowerDelegationERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"221:30:17","typeDescriptions":{}}}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2676,"name":"GovernancePowerDelegationERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1634,"src":"515:30:17","typeDescriptions":{"typeIdentifier":"t_contract$_GovernancePowerDelegationERC20_$1634","typeString":"contract GovernancePowerDelegationERC20"}},"id":2677,"nodeType":"InheritanceSpecifier","src":"515:30:17"}],"contractDependencies":[77,155,242,749,1634],"contractKind":"contract","documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"336:129:17","text":" @title ERC20WithSnapshot\n @notice ERC20 including snapshots of balances on transfer-related actions\n @author Aave*"},"fullyImplemented":false,"id":2705,"linearizedBaseContracts":[2705,1634,155,749,77,242],"name":"GovernancePowerWithSnapshot","nodeType":"ContractDefinition","nodes":[{"id":2680,"libraryName":{"id":2678,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"556:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"550:27:17","typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"569:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"581:225:17","text":" @dev The following storage layout points to the prior StakedToken.sol implementation:\n _snapshots => _votingSnapshots\n _snapshotsCounts =>  _votingSnapshotsCounts\n _aaveGovernance => _aaveGovernance"},"functionSelector":"5b3cc0cf","id":2687,"mutability":"mutable","name":"_votingSnapshots","nodeType":"VariableDeclaration","scope":2705,"src":"809:72:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":2686,"keyType":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"809:48:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":2685,"keyType":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"828:28:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":2684,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"847:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"public"},{"constant":false,"functionSelector":"7bb73c97","id":2691,"mutability":"mutable","name":"_votingSnapshotsCounts","nodeType":"VariableDeclaration","scope":2705,"src":"885:57:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2690,"keyType":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"885:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"947:278:17","text":"@dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\n !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\n to control all potential reentrancies by calling back the this contract"},"functionSelector":"c3863ada","id":2694,"mutability":"mutable","name":"_aaveGovernance","nodeType":"VariableDeclaration","scope":2705,"src":"1228:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":2693,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"1228:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"public"},{"body":{"id":2703,"nodeType":"Block","src":"1344:43:17","statements":[{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"_aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"1350:15:17","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2700,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"1368:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"src":"1350:32:17","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"id":2702,"nodeType":"ExpressionStatement","src":"1350:32:17"}]},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"_setAaveGovernance","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"aaveGovernance","nodeType":"VariableDeclaration","scope":2704,"src":"1297:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":2695,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"1297:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"internal"}],"src":"1296:30:17"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[],"src":"1344:0:17"},"scope":2705,"src":"1269:118:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2706,"src":"466:923:17"}],"src":"37:1353:17"},"id":17},"@aave/safety-module/contracts/lib/SafeERC20.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/SafeERC20.sol","exportedSymbols":{"Address":[1850],"IERC20":[1724],"SafeERC20":[2862],"SafeMath":[3058]},"id":2863,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2707,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"33:22:18"},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":2709,"nodeType":"ImportDirective","scope":2863,"sourceUnit":1725,"src":"57:48:18","symbolAliases":[{"foreign":{"id":2708,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:6:18","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"./SafeMath.sol","id":2711,"nodeType":"ImportDirective","scope":2863,"sourceUnit":3059,"src":"106:40:18","symbolAliases":[{"foreign":{"id":2710,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"114:8:18","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/Address.sol","file":"./Address.sol","id":2713,"nodeType":"ImportDirective","scope":2863,"sourceUnit":1851,"src":"147:38:18","symbolAliases":[{"foreign":{"id":2712,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"src":"155:7:18","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"187:520:18","text":" @title SafeERC20\n @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2862,"linearizedBaseContracts":[2862],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"id":2717,"libraryName":{"id":2715,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"736:8:18","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"730:27:18","typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":2720,"libraryName":{"id":2718,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":1850,"src":"766:7:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}},"nodeType":"UsingForDirective","src":"760:26:18","typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":2741,"nodeType":"Block","src":"878:96:18","statements":[{"expression":{"arguments":[{"id":2730,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"903:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2733,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"933:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"933:14:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"933:23:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"958:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"962:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2731,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"910:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"910:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"910:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2729,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"884:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"884:85:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2740,"nodeType":"ExpressionStatement","src":"884:85:18"}]},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2742,"src":"817:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":2721,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"817:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2742,"src":"835:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2742,"src":"851:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"811:57:18"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[],"src":"878:0:18"},"scope":2862,"src":"790:184:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2766,"nodeType":"Block","src":"1088:106:18","statements":[{"expression":{"arguments":[{"id":2754,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1113:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1143:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"1143:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1143:27:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2760,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"1172:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1178:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"1182:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1120:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1120:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1120:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2753,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"1094:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"1094:95:18"}]},"id":2767,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2767,"src":"1009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":2743,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1009:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2767,"src":"1027:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2767,"src":"1045:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2767,"src":"1061:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:75:18"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"1088:0:18"},"scope":2862,"src":"978:216:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2808,"nodeType":"Block","src":"1290:253:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"1312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1312:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1311:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1352:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2862","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2862","typeString":"library SafeERC20"}],"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1344:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:18","typeDescriptions":{}}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1344:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"1359:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2781,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"1328:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"1328:15:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1328:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1327:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1311:62:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1381:56:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":2776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1296:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1296:147:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2795,"nodeType":"ExpressionStatement","src":"1296:147:18"},{"expression":{"arguments":[{"id":2797,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"1468:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2800,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"1498:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"1498:13:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1498:22:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"1522:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"1531:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2798,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1475:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1475:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1475:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2796,"name":"callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"1449:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1449:89:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2807,"nodeType":"ExpressionStatement","src":"1449:89:18"}]},"id":2809,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2809,"src":"1224:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":2768,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1224:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2809,"src":"1242:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2809,"src":"1263:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:62:18"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"1290:0:18"},"scope":2862,"src":"1198:345:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2860,"nodeType":"Block","src":"1616:486:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2819,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1638:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1630:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:18","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1630:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1815,"src":"1630:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1630:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1659:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""},"value":"SafeERC20: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d","typeString":"literal_string \"SafeERC20: call to non-contract\""}],"id":2816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1622:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1622:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2825,"nodeType":"ExpressionStatement","src":"1622:71:18"},{"assignments":[2827,2829],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":2860,"src":"1756:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2826,"name":"bool","nodeType":"ElementaryTypeName","src":"1756:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":2860,"src":"1770:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2828,"name":"bytes","nodeType":"ElementaryTypeName","src":"1770:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2837,"initialValue":{"arguments":[{"id":2835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1817:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1805:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"1797:7:18","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1797:19:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1755:67:18"},{"expression":{"arguments":[{"id":2839,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1836:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1845:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2842,"nodeType":"ExpressionStatement","src":"1828:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2843,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"1891:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1891:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1911:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1891:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2859,"nodeType":"IfStatement","src":"1887:211:18","trueBody":{"id":2858,"nodeType":"Block","src":"1914:184:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2850,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2025:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2038:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2851,"name":"bool","nodeType":"ElementaryTypeName","src":"2038:4:18","typeDescriptions":{}}}],"id":2853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2037:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2848,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2014:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"2014:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2014:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2046:44:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":2847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2006:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2006:85:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2857,"nodeType":"ExpressionStatement","src":"2006:85:18"}]}}]},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"callOptionalReturn","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2861,"src":"1575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":2810,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1575:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2861,"src":"1589:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"1589:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1574:33:18"},"returnParameters":{"id":2815,"nodeType":"ParameterList","parameters":[],"src":"1616:0:18"},"scope":2862,"src":"1547:555:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2863,"src":"708:1396:18"}],"src":"33:2072:18"},"id":18},"@aave/safety-module/contracts/lib/SafeMath.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","exportedSymbols":{"SafeMath":[3058]},"id":3059,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":2864,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2865,"nodeType":"StructuredDocumentation","src":"61:626:19","text":" @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\n Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":3058,"linearizedBaseContracts":[3058],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":2890,"nodeType":"Block","src":"980:95:19","statements":[{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":2890,"src":"986:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2880,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"998:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2878,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1002:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"998:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"986:17:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1017:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1017:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1025:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":2881,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1009:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1009:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2887,"nodeType":"ExpressionStatement","src":"1009:46:19"},{"expression":{"id":2888,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1069:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2874,"id":2889,"nodeType":"Return","src":"1062:8:19"}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"709:201:19","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2891,"src":"926:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2891,"src":"937:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:22:19"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2891,"src":"971:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:19"},"scope":3058,"src":"913:162:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"1386:61:19","statements":[{"expression":{"arguments":[{"id":2902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"1403:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1406:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1409:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":2901,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2908,2936],"referencedDeclaration":2936,"src":"1399:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1399:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2900,"id":2906,"nodeType":"Return","src":"1392:50:19"}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"1079:237:19","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2908,"src":"1332:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1332:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2908,"src":"1343:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1331:22:19"},"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2908,"src":"1377:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1376:9:19"},"scope":3058,"src":"1319:128:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2935,"nodeType":"Block","src":"1822:78:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"1836:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"1841:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1836:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2924,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"1844:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2926,"nodeType":"ExpressionStatement","src":"1828:29:19"},{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":2935,"src":"1863:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"1875:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"1879:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1875:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1863:17:19"},{"expression":{"id":2933,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"1894:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2919,"id":2934,"nodeType":"Return","src":"1887:8:19"}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"1451:257:19","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2936,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2936,"src":"1729:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2936,"src":"1744:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":2936,"src":"1759:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2914,"name":"string","nodeType":"ElementaryTypeName","src":"1759:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1723:66:19"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2936,"src":"1813:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:9:19"},"scope":3058,"src":"1711:189:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"2187:352:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2946,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"2403:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2408:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2403:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2952,"nodeType":"IfStatement","src":"2399:35:19","trueBody":{"id":2951,"nodeType":"Block","src":"2411:23:19","statements":[{"expression":{"hexValue":"30","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2426:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2945,"id":2950,"nodeType":"Return","src":"2419:8:19"}]}},{"assignments":[2954],"declarations":[{"constant":false,"id":2954,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":2970,"src":"2440:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2958,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"2452:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2456:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2452:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2440:17:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2471:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"2475:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2471:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2480:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2471:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2483:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":2959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2463:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2463:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2967,"nodeType":"ExpressionStatement","src":"2463:56:19"},{"expression":{"id":2968,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2533:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2945,"id":2969,"nodeType":"Return","src":"2526:8:19"}]},"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"1904:213:19","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2971,"src":"2133:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2971,"src":"2144:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2144:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:22:19"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2971,"src":"2178:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2177:9:19"},"scope":3058,"src":"2120:419:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2987,"nodeType":"Block","src":"3037:57:19","statements":[{"expression":{"arguments":[{"id":2982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"3054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"3057:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3060:28:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":2981,"name":"div","nodeType":"Identifier","overloadedDeclarations":[2988,3016],"referencedDeclaration":3016,"src":"3050:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3050:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2980,"id":2986,"nodeType":"Return","src":"3043:46:19"}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"2543:424:19","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2988,"src":"2983:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2983:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2988,"src":"2994:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2994:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2982:22:19"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2988,"src":"3028:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3027:9:19"},"scope":3058,"src":"2970:124:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3015,"nodeType":"Block","src":"3656:221:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3732:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3736:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3732:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3004,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"3739:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3724:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3724:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"ExpressionStatement","src":"3724:28:19"},{"assignments":[3008],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":3015,"src":"3758:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3012,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3770:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3774:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3758:17:19"},{"expression":{"id":3013,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"3871:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2999,"id":3014,"nodeType":"Return","src":"3864:8:19"}]},"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"3098:444:19","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3016,"src":"3563:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3016,"src":"3578:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3016,"src":"3593:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2994,"name":"string","nodeType":"ElementaryTypeName","src":"3593:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3557:66:19"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3016,"src":"3647:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3646:9:19"},"scope":3058,"src":"3545:332:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"4364:55:19","statements":[{"expression":{"arguments":[{"id":3027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"4381:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3028,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"4384:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4387:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":3026,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[3033,3057],"referencedDeclaration":3057,"src":"4377:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4377:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3025,"id":3031,"nodeType":"Return","src":"4370:44:19"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"3881:413:19","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3033,"src":"4310:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3033,"src":"4321:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:22:19"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3033,"src":"4355:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4354:9:19"},"scope":3058,"src":"4297:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3056,"nodeType":"Block","src":"4970:58:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"4984:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4989:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4984:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3049,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4992:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4976:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4976:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3051,"nodeType":"ExpressionStatement","src":"4976:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"5018:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"5022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3044,"id":3055,"nodeType":"Return","src":"5011:12:19"}]},"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"4423:433:19","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3057,"src":"4877:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"4877:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3057,"src":"4892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3057,"src":"4907:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3039,"name":"string","nodeType":"ElementaryTypeName","src":"4907:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4871:66:19"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3057,"src":"4961:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4960:9:19"},"scope":3058,"src":"4859:169:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3059,"src":"688:4342:19"}],"src":"37:4994:19"},"id":19},"@aave/safety-module/contracts/stake/AaveDistributionManager.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol","exportedSymbols":{"AaveDistributionManager":[3593],"DistributionTypes":[1892],"IAaveDistributionManager":[1646],"SafeMath":[3058]},"id":3594,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":3060,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:20"},{"id":3061,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:20"},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","id":3063,"nodeType":"ImportDirective","scope":3594,"sourceUnit":3059,"src":"95:45:20","symbolAliases":[{"foreign":{"id":3062,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:8:20","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","id":3065,"nodeType":"ImportDirective","scope":3594,"sourceUnit":1893,"src":"141:63:20","symbolAliases":[{"foreign":{"id":3064,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"149:17:20","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol","file":"../interfaces/IAaveDistributionManager.sol","id":3067,"nodeType":"ImportDirective","scope":3594,"sourceUnit":1647,"src":"205:84:20","symbolAliases":[{"foreign":{"id":3066,"name":"IAaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"src":"213:24:20","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3069,"name":"IAaveDistributionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":1646,"src":"458:24:20","typeDescriptions":{"typeIdentifier":"t_contract$_IAaveDistributionManager_$1646","typeString":"contract IAaveDistributionManager"}},"id":3070,"nodeType":"InheritanceSpecifier","src":"458:24:20"}],"contractDependencies":[1646],"contractKind":"contract","documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"291:130:20","text":" @title AaveDistributionManager\n @notice Accounting contract to manage multiple staking distributions\n @author Aave*"},"fullyImplemented":true,"id":3593,"linearizedBaseContracts":[3593,1646],"name":"AaveDistributionManager","nodeType":"ContractDefinition","nodes":[{"id":3073,"libraryName":{"id":3071,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"493:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"487:27:20","typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"AaveDistributionManager.AssetData","id":3084,"members":[{"constant":false,"id":3075,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":3084,"src":"541:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3074,"name":"uint128","nodeType":"ElementaryTypeName","src":"541:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":3084,"src":"572:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3076,"name":"uint128","nodeType":"ElementaryTypeName","src":"572:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":3084,"src":"605:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"users","nodeType":"VariableDeclaration","scope":3084,"src":"624:33:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3082,"keyType":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"624:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"AssetData","nodeType":"StructDefinition","scope":3593,"src":"518:144:20","visibility":"public"},{"constant":false,"functionSelector":"919cd40f","id":3086,"mutability":"immutable","name":"DISTRIBUTION_END","nodeType":"VariableDeclaration","scope":3593,"src":"666:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"cbcbb507","id":3088,"mutability":"immutable","name":"EMISSION_MANAGER","nodeType":"VariableDeclaration","scope":3593,"src":"712:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"aaf5eb68","id":3091,"mutability":"constant","name":"PRECISION","nodeType":"VariableDeclaration","scope":3593,"src":"758:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3089,"name":"uint8","nodeType":"ElementaryTypeName","src":"758:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"792:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":false,"functionSelector":"f11b8188","id":3095,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":3593,"src":"799:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$3084_storage_$","typeString":"mapping(address => struct AaveDistributionManager.AssetData)"},"typeName":{"id":3094,"keyType":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"807:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"799:29:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$3084_storage_$","typeString":"mapping(address => struct AaveDistributionManager.AssetData)"},"valueType":{"id":3093,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":3084,"src":"818:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"}}},"visibility":"public"},{"anonymous":false,"id":3101,"name":"AssetConfigUpdated","nodeType":"EventDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3101,"src":"872:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3099,"indexed":false,"mutability":"mutable","name":"emission","nodeType":"VariableDeclaration","scope":3101,"src":"895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"871:41:20"},"src":"847:66:20"},{"anonymous":false,"id":3107,"name":"AssetIndexUpdated","nodeType":"EventDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3107,"src":"940:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3102,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3105,"indexed":false,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":3107,"src":"963:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"939:38:20"},"src":"916:62:20"},{"anonymous":false,"id":3115,"name":"UserIndexUpdated","nodeType":"EventDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3115,"src":"1004:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"1004:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3111,"indexed":true,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3115,"src":"1026:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3113,"indexed":false,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":3115,"src":"1049:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:60:20"},"src":"981:83:20"},{"body":{"id":3134,"nodeType":"Block","src":"1142:111:20","statements":[{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"DISTRIBUTION_END","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"1148:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3126,"name":"distributionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"1187:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3123,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1167:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1167:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"1167:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1167:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1148:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"1148:60:20"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3130,"name":"EMISSION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1214:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3131,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"1233:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1214:34:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3133,"nodeType":"ExpressionStatement","src":"1214:34:20"}]},"id":3135,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":3135,"src":"1080:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"distributionDuration","nodeType":"VariableDeclaration","scope":3135,"src":"1105:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1105:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:55:20"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[],"src":"1142:0:20"},"scope":3593,"src":"1068:185:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1645],"body":{"id":3205,"nodeType":"Block","src":"1524:591:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1538:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1538:10:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3146,"name":"EMISSION_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1552:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1538:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f4e4c595f454d495353494f4e5f4d414e41474552","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1570:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e","typeString":"literal_string \"ONLY_EMISSION_MANAGER\""},"value":"ONLY_EMISSION_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e","typeString":"literal_string \"ONLY_EMISSION_MANAGER\""}],"id":3143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1530:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3150,"nodeType":"ExpressionStatement","src":"1530:64:20"},{"body":{"id":3203,"nodeType":"Block","src":"1656:455:20","statements":[{"assignments":[3163],"declarations":[{"constant":false,"id":3163,"mutability":"mutable","name":"assetConfig","nodeType":"VariableDeclaration","scope":3203,"src":"1664:29:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"},"typeName":{"id":3162,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":3084,"src":"1664:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"}},"visibility":"internal"}],"id":3170,"initialValue":{"baseExpression":{"id":3164,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"1696:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$3084_storage_$","typeString":"mapping(address => struct AaveDistributionManager.AssetData storage ref)"}},"id":3169,"indexExpression":{"expression":{"baseExpression":{"id":3165,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1703:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3167,"indexExpression":{"id":3166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1721:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1703:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":1883,"src":"1703:36:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1696:44:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage","typeString":"struct AaveDistributionManager.AssetData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1664:76:20"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3172,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1784:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3174,"indexExpression":{"id":3173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1802:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1784:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":1883,"src":"1784:36:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3176,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"1830:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},{"expression":{"baseExpression":{"id":3177,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1851:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3179,"indexExpression":{"id":3178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1869:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1851:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"1851:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3171,"name":"_updateAssetStateInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"1749:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$3084_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,struct AaveDistributionManager.AssetData storage pointer,uint256) returns (uint256)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1749:142:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3182,"nodeType":"ExpressionStatement","src":"1749:142:20"},{"expression":{"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3183,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"1900:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":3075,"src":"1900:29:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3186,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1932:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3188,"indexExpression":{"id":3187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1950:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1932:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"1932:38:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"1900:70:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":3191,"nodeType":"ExpressionStatement","src":"1900:70:20"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":3193,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"2012:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3195,"indexExpression":{"id":3194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"2030:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2012:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":1883,"src":"2012:36:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3197,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"2058:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3199,"indexExpression":{"id":3198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"2076:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2058:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"2058:38:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":3192,"name":"AssetConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"1984:18:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1984:120:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3202,"nodeType":"EmitStatement","src":"1979:125:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1621:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3156,"name":"assetsConfigInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1625:17:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput calldata[] calldata"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1625:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1621:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"initializationExpression":{"assignments":[3152],"declarations":[{"constant":false,"id":3152,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3204,"src":"1606:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"hexValue":"30","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1606:13:20"},"loopExpression":{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1651:3:20","subExpression":{"id":3159,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ExpressionStatement","src":"1651:3:20"},"nodeType":"ForStatement","src":"1601:510:20"}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"1257:146:20","text":" @dev Configures the distribution of rewards for a list of assets\n @param assetsConfigInput The list of configurations to apply*"},"functionSelector":"b2a5dbfa","id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"configureAssets","nodeType":"FunctionDefinition","overrides":{"id":3141,"nodeType":"OverrideSpecifier","overrides":[],"src":"1513:8:20"},"parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"assetsConfigInput","nodeType":"VariableDeclaration","scope":3206,"src":"1431:63:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"},"typeName":{"baseType":{"id":3137,"name":"DistributionTypes.AssetConfigInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1884,"src":"1431:34:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetConfigInput_$1884_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput"}},"id":3138,"nodeType":"ArrayTypeName","src":"1431:36:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetConfigInput_$1884_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.AssetConfigInput[]"}},"visibility":"internal"}],"src":"1430:65:20"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"1524:0:20"},"scope":3593,"src":"1406:709:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3274,"nodeType":"Block","src":"2681:534:20","statements":[{"assignments":[3219],"declarations":[{"constant":false,"id":3219,"mutability":"mutable","name":"oldIndex","nodeType":"VariableDeclaration","scope":3274,"src":"2687:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2687:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3222,"initialValue":{"expression":{"id":3220,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"2706:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3079,"src":"2706:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2687:36:20"},{"assignments":[3224],"declarations":[{"constant":false,"id":3224,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":3274,"src":"2729:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3223,"name":"uint128","nodeType":"ElementaryTypeName","src":"2729:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":3227,"initialValue":{"expression":{"id":3225,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"2759:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":3077,"src":"2759:31:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"2729:61:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3228,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2801:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2801:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3230,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"2820:19:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2801:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"nodeType":"IfStatement","src":"2797:74:20","trueBody":{"id":3234,"nodeType":"Block","src":"2841:30:20","statements":[{"expression":{"id":3232,"name":"oldIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"2856:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3217,"id":3233,"nodeType":"Return","src":"2849:15:20"}]}},{"assignments":[3237],"declarations":[{"constant":false,"id":3237,"mutability":"mutable","name":"newIndex","nodeType":"VariableDeclaration","scope":3274,"src":"2877:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2877:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3245,"initialValue":{"arguments":[{"id":3239,"name":"oldIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"2917:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3240,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"2927:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":3075,"src":"2927:29:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":3242,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"2958:19:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":3243,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"2979:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3238,"name":"_getAssetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"2902:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint128,uint256) view returns (uint256)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2902:89:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2877:114:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"3002:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3247,"name":"oldIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"3014:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3002:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3261,"nodeType":"IfStatement","src":"2998:126:20","trueBody":{"id":3260,"nodeType":"Block","src":"3024:100:20","statements":[{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3249,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"3032:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3079,"src":"3032:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3252,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"3052:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3032:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ExpressionStatement","src":"3032:28:20"},{"eventCall":{"arguments":[{"id":3256,"name":"underlyingAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3091:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3257,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"3108:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3255,"name":"AssetIndexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3073:17:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3073:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3259,"nodeType":"EmitStatement","src":"3068:49:20"}]}},{"expression":{"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3262,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"3130:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":3077,"src":"3130:31:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3267,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3172:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3172:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3164:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3265,"name":"uint128","nodeType":"ElementaryTypeName","src":"3164:7:20","typeDescriptions":{}}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3164:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3130:58:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":3271,"nodeType":"ExpressionStatement","src":"3130:58:20"},{"expression":{"id":3272,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"3202:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3217,"id":3273,"nodeType":"Return","src":"3195:15:20"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"2119:404:20","text":" @dev Updates the state of one distribution, mainly rewards index and timestamp\n @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\n @param assetConfig Storage pointer to the distribution's config\n @param totalStaked Current total of staked assets for this distribution\n @return The new distribution index*"},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAssetStateInternal","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"underlyingAsset","nodeType":"VariableDeclaration","scope":3275,"src":"2566:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"2566:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"assetConfig","nodeType":"VariableDeclaration","scope":3275,"src":"2595:29:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"},"typeName":{"id":3210,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":3084,"src":"2595:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":3275,"src":"2630:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2560:93:20"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3275,"src":"2672:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:9:20"},"scope":3593,"src":"2526:689:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"3773:488:20","statements":[{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"assetData","nodeType":"VariableDeclaration","scope":3348,"src":"3779:27:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"},"typeName":{"id":3289,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":3084,"src":"3779:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"}},"visibility":"internal"}],"id":3294,"initialValue":{"baseExpression":{"id":3291,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"3809:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$3084_storage_$","typeString":"mapping(address => struct AaveDistributionManager.AssetData storage ref)"}},"id":3293,"indexExpression":{"id":3292,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"3816:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3809:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage","typeString":"struct AaveDistributionManager.AssetData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3779:43:20"},{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"userIndex","nodeType":"VariableDeclaration","scope":3348,"src":"3828:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3828:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3301,"initialValue":{"baseExpression":{"expression":{"id":3297,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3848:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"3848:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3300,"indexExpression":{"id":3299,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"3864:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3848:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3828:41:20"},{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":3348,"src":"3875:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3875:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3305,"initialValue":{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3900:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3875:26:20"},{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"newIndex","nodeType":"VariableDeclaration","scope":3348,"src":"3908:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3313,"initialValue":{"arguments":[{"id":3309,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"3953:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3310,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3960:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},{"id":3311,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"3971:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"name":"_updateAssetStateInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"3927:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_AssetData_$3084_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,struct AaveDistributionManager.AssetData storage pointer,uint256) returns (uint256)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3927:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3908:75:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"userIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3994:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3315,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4007:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3994:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3345,"nodeType":"IfStatement","src":"3990:239:20","trueBody":{"id":3344,"nodeType":"Block","src":"4017:212:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"stakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"4029:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4029:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"nodeType":"IfStatement","src":"4025:105:20","trueBody":{"id":3328,"nodeType":"Block","src":"4048:82:20","statements":[{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"4058:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3322,"name":"stakedByUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"4087:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3323,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4101:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3324,"name":"userIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"4111:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3321,"name":"_getRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"4075:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4075:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4058:63:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"4058:63:20"}]}},{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3330,"name":"assetData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4138:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"4138:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3334,"indexExpression":{"id":3332,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4154:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4138:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3335,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4162:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4138:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ExpressionStatement","src":"4138:32:20"},{"eventCall":{"arguments":[{"id":3339,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4200:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3340,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"4206:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3341,"name":"newIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4213:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3338,"name":"UserIndexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"4183:16:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4183:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3343,"nodeType":"EmitStatement","src":"4178:44:20"}]}},{"expression":{"id":3346,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"4242:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3288,"id":3347,"nodeType":"Return","src":"4235:21:20"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"3219:398:20","text":" @dev Updates the state of an user in a distribution\n @param user The user's address\n @param asset The address of the reference asset of the distribution\n @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\n @param totalStaked Total tokens staked in the distribution\n @return The accrued rewards for the user until the moment*"},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"_updateUserAssetInternal","nodeType":"FunctionDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3349,"src":"3659:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"3659:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3349,"src":"3677:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"3677:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"mutability":"mutable","name":"stakedByUser","nodeType":"VariableDeclaration","scope":3349,"src":"3696:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3696:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"totalStaked","nodeType":"VariableDeclaration","scope":3349,"src":"3722:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3653:92:20"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3349,"src":"3764:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3764:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3763:9:20"},"scope":3593,"src":"3620:641:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3400,"nodeType":"Block","src":"4689:337:20","statements":[{"assignments":[3361],"declarations":[{"constant":false,"id":3361,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":3400,"src":"4695:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3363,"initialValue":{"hexValue":"30","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4720:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4695:26:20"},{"body":{"id":3396,"nodeType":"Block","src":"4772:222:20","statements":[{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3375,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"4780:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3379,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"4861:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3380,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4877:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3382,"indexExpression":{"id":3381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4884:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4877:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":3383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":1886,"src":"4877:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3384,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4914:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3386,"indexExpression":{"id":3385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4921:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4914:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":3387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakedByUser","nodeType":"MemberAccess","referencedDeclaration":1888,"src":"4914:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3388,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4948:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3390,"indexExpression":{"id":3389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4955:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4948:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":3391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"4948:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3378,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"4825:24:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4825:154:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3376,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"4797:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4797:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4797:190:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4780:207:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"4780:207:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4748:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3369,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4752:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4752:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4748:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"initializationExpression":{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3397,"src":"4733:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4733:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3367,"initialValue":{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4745:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4733:13:20"},"loopExpression":{"expression":{"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4767:3:20","subExpression":{"id":3372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4767:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3374,"nodeType":"ExpressionStatement","src":"4767:3:20"},"nodeType":"ForStatement","src":"4728:266:20"},{"expression":{"id":3398,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"5007:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3359,"id":3399,"nodeType":"Return","src":"5000:21:20"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"4265:297:20","text":" @dev Used by \"frontend\" stake contracts to update the data of an user when claiming rewards from there\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"},"id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"_claimRewards","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3401,"src":"4588:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"4588:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"stakes","nodeType":"VariableDeclaration","scope":3401,"src":"4602:48:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":3353,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1891,"src":"4602:32:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":3354,"nodeType":"ArrayTypeName","src":"4602:34:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"src":"4587:64:20"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3401,"src":"4678:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:9:20"},"scope":3593,"src":"4565:461:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"5439:535:20","statements":[{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":3472,"src":"5445:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"5445:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3415,"initialValue":{"hexValue":"30","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5470:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5445:26:20"},{"body":{"id":3468,"nodeType":"Block","src":"5522:421:20","statements":[{"assignments":[3428],"declarations":[{"constant":false,"id":3428,"mutability":"mutable","name":"assetConfig","nodeType":"VariableDeclaration","scope":3468,"src":"5530:29:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"},"typeName":{"id":3427,"name":"AssetData","nodeType":"UserDefinedTypeName","referencedDeclaration":3084,"src":"5530:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData"}},"visibility":"internal"}],"id":3435,"initialValue":{"baseExpression":{"id":3429,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"5562:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$3084_storage_$","typeString":"mapping(address => struct AaveDistributionManager.AssetData storage ref)"}},"id":3434,"indexExpression":{"expression":{"baseExpression":{"id":3430,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5569:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3432,"indexExpression":{"id":3431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5576:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5569:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":3433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"underlyingAsset","nodeType":"MemberAccess","referencedDeclaration":1886,"src":"5569:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5562:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage","typeString":"struct AaveDistributionManager.AssetData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5530:65:20"},{"assignments":[3437],"declarations":[{"constant":false,"id":3437,"mutability":"mutable","name":"assetIndex","nodeType":"VariableDeclaration","scope":3468,"src":"5603:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5603:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3450,"initialValue":{"arguments":[{"expression":{"id":3439,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5658:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3079,"src":"5658:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3441,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5687:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"emissionPerSecond","nodeType":"MemberAccess","referencedDeclaration":3075,"src":"5687:29:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":3443,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5728:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":3077,"src":"5728:31:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"baseExpression":{"id":3445,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5771:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3447,"indexExpression":{"id":3446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5778:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5771:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":3448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalStaked","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"5771:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"_getAssetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"5632:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint128,uint256) view returns (uint256)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5632:170:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5603:199:20"},{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3451,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5811:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3455,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5868:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3457,"indexExpression":{"id":3456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5875:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5868:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":3458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakedByUser","nodeType":"MemberAccess","referencedDeclaration":1888,"src":"5868:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3459,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"5892:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":3460,"name":"assetConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5904:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage_ptr","typeString":"struct AaveDistributionManager.AssetData storage pointer"}},"id":3461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"5904:17:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3463,"indexExpression":{"id":3462,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"5922:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5904:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3454,"name":"_getRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"5856:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5856:72:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3452,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5828:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5828:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5828:108:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5811:125:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3467,"nodeType":"ExpressionStatement","src":"5811:125:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5498:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3421,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5502:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5502:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5498:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3469,"initializationExpression":{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":3469,"src":"5483:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"hexValue":"30","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5495:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5483:13:20"},"loopExpression":{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5517:3:20","subExpression":{"id":3424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"5517:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"nodeType":"ExpressionStatement","src":"5517:3:20"},"nodeType":"ForStatement","src":"5478:465:20"},{"expression":{"id":3470,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5955:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3411,"id":3471,"nodeType":"Return","src":"5948:21:20"}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"5030:266:20","text":" @dev Return the accrued rewards for an user over a list of distribution\n @param user The address of the user\n @param stakes List of structs of the user data related with his stake\n @return The accrued rewards for the user until the moment*"},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"_getUnclaimedRewards","nodeType":"FunctionDefinition","parameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3473,"src":"5329:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"stakes","nodeType":"VariableDeclaration","scope":3473,"src":"5343:48:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":3405,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1891,"src":"5343:32:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":3406,"nodeType":"ArrayTypeName","src":"5343:34:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"src":"5328:64:20"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3473,"src":"5428:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"5428:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5427:9:20"},"scope":3593,"src":"5299:675:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"6459:99:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6530:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3496,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"6542:9:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6534:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6534:7:20","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6534:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6530:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3489,"name":"userIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"6514:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3487,"name":"reserveIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6497:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"6497:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6497:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3485,"name":"principalUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"6472:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"6472:24:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6472:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"6472:57:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6472:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3484,"id":3500,"nodeType":"Return","src":"6465:88:20"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"5978:338:20","text":" @dev Internal function for the calculation of user's rewards on a distribution\n @param principalUserBalance Amount staked by the user on a distribution\n @param reserveIndex Current index of the distribution\n @param userIndex Index stored for the user, representation his staking moment\n @return The rewards*"},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"_getRewards","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"principalUserBalance","nodeType":"VariableDeclaration","scope":3502,"src":"6345:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6345:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"reserveIndex","nodeType":"VariableDeclaration","scope":3502,"src":"6379:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"6379:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"userIndex","nodeType":"VariableDeclaration","scope":3502,"src":"6405:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"6405:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6339:87:20"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3502,"src":"6450:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"6450:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6449:9:20"},"scope":3593,"src":"6319:239:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3573,"nodeType":"Block","src":"7187:517:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"emissionPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7204:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7225:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7204:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"7236:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7252:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7236:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7204:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"7263:19:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3524,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7286:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7286:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7263:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7204:97:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"7311:19:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3529,"name":"DISTRIBUTION_END","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"7334:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7311:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7204:146:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"7193:198:20","trueBody":{"id":3534,"nodeType":"Block","src":"7357:34:20","statements":[{"expression":{"id":3532,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"7372:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3515,"id":3533,"nodeType":"Return","src":"7365:19:20"}]}},{"assignments":[3537],"declarations":[{"constant":false,"id":3537,"mutability":"mutable","name":"currentTimestamp","nodeType":"VariableDeclaration","scope":3573,"src":"7397:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"7397:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3546,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3538,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7430:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7430:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3540,"name":"DISTRIBUTION_END","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"7448:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7430:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3543,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7486:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7486:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7430:71:20","trueExpression":{"id":3542,"name":"DISTRIBUTION_END","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"7467:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7397:104:20"},{"assignments":[3548],"declarations":[{"constant":false,"id":3548,"mutability":"mutable","name":"timeDelta","nodeType":"VariableDeclaration","scope":3573,"src":"7507:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7507:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3553,"initialValue":{"arguments":[{"id":3551,"name":"lastUpdateTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"7548:19:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":3549,"name":"currentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"7527:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"7527:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7527:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7507:61:20"},{"expression":{"arguments":[{"id":3570,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"7679:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3567,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"7652:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3562,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"7636:9:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7628:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"7628:7:20","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7628:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7624:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3556,"name":"timeDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"7609:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3554,"name":"emissionPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7587:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"7587:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7587:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"7587:36:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7587:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"7587:64:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7587:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"7587:82:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7587:112:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3515,"id":3572,"nodeType":"Return","src":"7574:125:20"}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"6562:446:20","text":" @dev Calculates the next value of an specific distribution index, with validations\n @param currentIndex Current index of the distribution\n @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\n @param lastUpdateTimestamp Last moment this distribution was updated\n @param totalBalance of tokens considered for the distribution\n @return The new index.*"},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"_getAssetIndex","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"currentIndex","nodeType":"VariableDeclaration","scope":3574,"src":"7040:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"7040:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"emissionPerSecond","nodeType":"VariableDeclaration","scope":3574,"src":"7066:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"7066:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"lastUpdateTimestamp","nodeType":"VariableDeclaration","scope":3574,"src":"7097:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3508,"name":"uint128","nodeType":"ElementaryTypeName","src":"7097:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"totalBalance","nodeType":"VariableDeclaration","scope":3574,"src":"7130:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"7130:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7034:120:20"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3574,"src":"7178:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"7178:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7177:9:20"},"scope":3593,"src":"7011:693:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"7999:43:20","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":3584,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"8012:6:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AssetData_$3084_storage_$","typeString":"mapping(address => struct AaveDistributionManager.AssetData storage ref)"}},"id":3586,"indexExpression":{"id":3585,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"8019:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8012:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetData_$3084_storage","typeString":"struct AaveDistributionManager.AssetData storage ref"}},"id":3587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"users","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"8012:19:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3589,"indexExpression":{"id":3588,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"8032:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8012:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3583,"id":3590,"nodeType":"Return","src":"8005:32:20"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"7708:203:20","text":" @dev Returns the data of an user on a distribution\n @param user Address of the user\n @param asset The address of the reference asset of the distribution\n @return The new index*"},"functionSelector":"3373ee4c","id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"getUserAssetData","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3592,"src":"7940:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3576,"name":"address","nodeType":"ElementaryTypeName","src":"7940:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":3592,"src":"7954:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3578,"name":"address","nodeType":"ElementaryTypeName","src":"7954:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7939:29:20"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3592,"src":"7990:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"7990:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7989:9:20"},"scope":3593,"src":"7914:128:20","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3594,"src":"422:7622:20"}],"src":"37:8008:20"},"id":20},"@aave/safety-module/contracts/stake/StakedAave.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/stake/StakedAave.sol","exportedSymbols":{"IERC20":[1724],"StakedAave":[3643],"StakedToken":[4450]},"id":3644,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":3595,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:21"},{"id":3596,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:21"},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":3598,"nodeType":"ImportDirective","scope":3644,"sourceUnit":1725,"src":"95:48:21","symbolAliases":[{"foreign":{"id":3597,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:6:21","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/stake/StakedToken.sol","file":"./StakedToken.sol","id":3600,"nodeType":"ImportDirective","scope":3644,"sourceUnit":4451,"src":"144:46:21","symbolAliases":[{"foreign":{"id":3599,"name":"StakedToken","nodeType":"Identifier","overloadedDeclarations":[],"src":"152:11:21","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3602,"name":"StakedToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4450,"src":"316:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}},"id":3603,"nodeType":"InheritanceSpecifier","src":"316:11:21"}],"contractDependencies":[1646,1724,1747,1774,1874,2420,2664,3593,4450,5733],"contractKind":"contract","documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"192:100:21","text":" @title StakedAave\n @notice StakedToken with AAVE token as staked token\n @author Aave*"},"fullyImplemented":true,"id":3643,"linearizedBaseContracts":[3643,4450,3593,1646,5733,2664,2420,1747,1724,1874,1774],"name":"StakedAave","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3606,"mutability":"constant","name":"NAME","nodeType":"VariableDeclaration","scope":3643,"src":"332:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3604,"name":"string","nodeType":"ElementaryTypeName","src":"332:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5374616b65642041617665","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"364:13:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d230805e6c1719b3f833629ea0613917c0c2c6c68d9b5d4f667ca7062d513c5","typeString":"literal_string \"Staked Aave\""},"value":"Staked Aave"},"visibility":"internal"},{"constant":true,"id":3609,"mutability":"constant","name":"SYMBOL","nodeType":"VariableDeclaration","scope":3643,"src":"381:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3607,"name":"string","nodeType":"ElementaryTypeName","src":"381:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"73746b41415645","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"415:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbe593d39b2ace009570ac459f883010cd4e0ff428c1aac91615f27f6d32c400","typeString":"literal_string \"stkAAVE\""},"value":"stkAAVE"},"visibility":"internal"},{"constant":true,"id":3612,"mutability":"constant","name":"DECIMALS","nodeType":"VariableDeclaration","scope":3643,"src":"428:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3610,"name":"uint8","nodeType":"ElementaryTypeName","src":"428:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"463:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"909:2:21","statements":[]},"id":3642,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3629,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"713:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"id":3630,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"732:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"id":3631,"name":"cooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"751:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3632,"name":"unstakeWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"774:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3633,"name":"rewardsVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"795:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3634,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"815:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3635,"name":"distributionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"838:20:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":3636,"name":"NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"866:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3637,"name":"SYMBOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"878:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3638,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"892:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3639,"modifierName":{"id":3628,"name":"StakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"694:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StakedToken_$4450_$","typeString":"type(contract StakedToken)"}},"nodeType":"ModifierInvocation","src":"694:212:21"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"stakedToken","nodeType":"VariableDeclaration","scope":3642,"src":"487:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3613,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"487:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"rewardToken","nodeType":"VariableDeclaration","scope":3642,"src":"511:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3615,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"511:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"cooldownSeconds","nodeType":"VariableDeclaration","scope":3642,"src":"535:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"unstakeWindow","nodeType":"VariableDeclaration","scope":3642,"src":"564:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"rewardsVault","nodeType":"VariableDeclaration","scope":3642,"src":"591:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"591:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":3642,"src":"617:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"617:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"distributionDuration","nodeType":"VariableDeclaration","scope":3642,"src":"646:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3625,"name":"uint128","nodeType":"ElementaryTypeName","src":"646:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"481:197:21"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[],"src":"909:0:21"},"scope":3643,"src":"470:441:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3644,"src":"293:620:21"}],"src":"37:877:21"},"id":21},"@aave/safety-module/contracts/stake/StakedAaveV2.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/stake/StakedAaveV2.sol","exportedSymbols":{"IERC20":[1724],"StakedAaveV2":[3696],"StakedTokenV2":[5694]},"id":3697,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":3645,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:22"},{"id":3646,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:22"},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":3648,"nodeType":"ImportDirective","scope":3697,"sourceUnit":1725,"src":"95:48:22","symbolAliases":[{"foreign":{"id":3647,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:6:22","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/stake/StakedTokenV2.sol","file":"./StakedTokenV2.sol","id":3650,"nodeType":"ImportDirective","scope":3697,"sourceUnit":5695,"src":"144:50:22","symbolAliases":[{"foreign":{"id":3649,"name":"StakedTokenV2","nodeType":"Identifier","overloadedDeclarations":[],"src":"152:13:22","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3652,"name":"StakedTokenV2","nodeType":"UserDefinedTypeName","referencedDeclaration":5694,"src":"326:13:22","typeDescriptions":{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}},"id":3653,"nodeType":"InheritanceSpecifier","src":"326:13:22"}],"contractDependencies":[77,155,242,749,1634,1646,1774,2705,3593,5694,5733],"contractKind":"contract","documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"196:104:22","text":" @title StakedAaveV2\n @notice StakedTokenV2 with AAVE token as staked token\n @author Aave*"},"fullyImplemented":true,"id":3696,"linearizedBaseContracts":[3696,5694,3593,1646,5733,2705,1634,155,749,77,242,1774],"name":"StakedAaveV2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3656,"mutability":"constant","name":"NAME","nodeType":"VariableDeclaration","scope":3696,"src":"344:45:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3654,"name":"string","nodeType":"ElementaryTypeName","src":"344:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5374616b65642041617665","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"376:13:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d230805e6c1719b3f833629ea0613917c0c2c6c68d9b5d4f667ca7062d513c5","typeString":"literal_string \"Staked Aave\""},"value":"Staked Aave"},"visibility":"internal"},{"constant":true,"id":3659,"mutability":"constant","name":"SYMBOL","nodeType":"VariableDeclaration","scope":3696,"src":"393:43:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3657,"name":"string","nodeType":"ElementaryTypeName","src":"393:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"73746b41415645","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"427:9:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbe593d39b2ace009570ac459f883010cd4e0ff428c1aac91615f27f6d32c400","typeString":"literal_string \"stkAAVE\""},"value":"stkAAVE"},"visibility":"internal"},{"constant":true,"id":3662,"mutability":"constant","name":"DECIMALS","nodeType":"VariableDeclaration","scope":3696,"src":"440:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3660,"name":"uint8","nodeType":"ElementaryTypeName","src":"440:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"475:2:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"965:2:22","statements":[]},"id":3695,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3681,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"751:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"id":3682,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"770:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},{"id":3683,"name":"cooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"789:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3684,"name":"unstakeWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"812:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3685,"name":"rewardsVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"833:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3686,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"853:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3687,"name":"distributionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"876:20:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":3688,"name":"NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"904:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3689,"name":"SYMBOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"916:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3690,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"930:8:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3691,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"946:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3692,"modifierName":{"id":3680,"name":"StakedTokenV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"730:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StakedTokenV2_$5694_$","typeString":"type(contract StakedTokenV2)"}},"nodeType":"ModifierInvocation","src":"730:232:22"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"stakedToken","nodeType":"VariableDeclaration","scope":3695,"src":"499:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3663,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"499:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"rewardToken","nodeType":"VariableDeclaration","scope":3695,"src":"523:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3665,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"523:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"cooldownSeconds","nodeType":"VariableDeclaration","scope":3695,"src":"547:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"unstakeWindow","nodeType":"VariableDeclaration","scope":3695,"src":"576:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"576:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"rewardsVault","nodeType":"VariableDeclaration","scope":3695,"src":"603:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":3695,"src":"629:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3673,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"distributionDuration","nodeType":"VariableDeclaration","scope":3695,"src":"658:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3675,"name":"uint128","nodeType":"ElementaryTypeName","src":"658:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3678,"mutability":"mutable","name":"governance","nodeType":"VariableDeclaration","scope":3695,"src":"692:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3677,"name":"address","nodeType":"ElementaryTypeName","src":"692:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"493:221:22"},"returnParameters":{"id":3693,"nodeType":"ParameterList","parameters":[],"src":"965:0:22"},"scope":3696,"src":"482:485:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3697,"src":"301:668:22"}],"src":"37:933:22"},"id":22},"@aave/safety-module/contracts/stake/StakedToken.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/stake/StakedToken.sol","exportedSymbols":{"AaveDistributionManager":[3593],"DistributionTypes":[1892],"ERC20WithSnapshot":[2664],"IERC20":[1724],"IStakedAave":[1774],"ITransferHook":[1786],"SafeERC20":[2862],"SafeMath":[3058],"StakedToken":[4450],"VersionedInitializable":[5733]},"id":4451,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":3698,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:23"},{"id":3699,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:23"},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":3701,"nodeType":"ImportDirective","scope":4451,"sourceUnit":1725,"src":"95:48:23","symbolAliases":[{"foreign":{"id":3700,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:6:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/IStakedAave.sol","file":"../interfaces/IStakedAave.sol","id":3703,"nodeType":"ImportDirective","scope":4451,"sourceUnit":1775,"src":"144:58:23","symbolAliases":[{"foreign":{"id":3702,"name":"IStakedAave","nodeType":"Identifier","overloadedDeclarations":[],"src":"152:11:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/ITransferHook.sol","file":"../interfaces/ITransferHook.sol","id":3705,"nodeType":"ImportDirective","scope":4451,"sourceUnit":1787,"src":"203:62:23","symbolAliases":[{"foreign":{"id":3704,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"src":"211:13:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol","file":"../lib/ERC20WithSnapshot.sol","id":3707,"nodeType":"ImportDirective","scope":4451,"sourceUnit":2665,"src":"266:63:23","symbolAliases":[{"foreign":{"id":3706,"name":"ERC20WithSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"src":"274:17:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeERC20.sol","file":"../lib/SafeERC20.sol","id":3709,"nodeType":"ImportDirective","scope":4451,"sourceUnit":2863,"src":"330:47:23","symbolAliases":[{"foreign":{"id":3708,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"338:9:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/utils/VersionedInitializable.sol","file":"../utils/VersionedInitializable.sol","id":3711,"nodeType":"ImportDirective","scope":4451,"sourceUnit":5734,"src":"378:75:23","symbolAliases":[{"foreign":{"id":3710,"name":"VersionedInitializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"386:22:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","id":3713,"nodeType":"ImportDirective","scope":4451,"sourceUnit":1893,"src":"454:63:23","symbolAliases":[{"foreign":{"id":3712,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"462:17:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol","file":"./AaveDistributionManager.sol","id":3715,"nodeType":"ImportDirective","scope":4451,"sourceUnit":3594,"src":"518:70:23","symbolAliases":[{"foreign":{"id":3714,"name":"AaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"src":"526:23:23","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","id":3717,"nodeType":"ImportDirective","scope":4451,"sourceUnit":3059,"src":"589:45:23","symbolAliases":[{"foreign":{"id":3716,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"597:8:23","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3719,"name":"IStakedAave","nodeType":"UserDefinedTypeName","referencedDeclaration":1774,"src":"837:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedAave_$1774","typeString":"contract IStakedAave"}},"id":3720,"nodeType":"InheritanceSpecifier","src":"837:11:23"},{"baseName":{"id":3721,"name":"ERC20WithSnapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":2664,"src":"852:17:23","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20WithSnapshot_$2664","typeString":"contract ERC20WithSnapshot"}},"id":3722,"nodeType":"InheritanceSpecifier","src":"852:17:23"},{"baseName":{"id":3723,"name":"VersionedInitializable","nodeType":"UserDefinedTypeName","referencedDeclaration":5733,"src":"873:22:23","typeDescriptions":{"typeIdentifier":"t_contract$_VersionedInitializable_$5733","typeString":"contract VersionedInitializable"}},"id":3724,"nodeType":"InheritanceSpecifier","src":"873:22:23"},{"baseName":{"id":3725,"name":"AaveDistributionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":3593,"src":"899:23:23","typeDescriptions":{"typeIdentifier":"t_contract$_AaveDistributionManager_$3593","typeString":"contract AaveDistributionManager"}},"id":3726,"nodeType":"InheritanceSpecifier","src":"899:23:23"}],"contractDependencies":[1646,1724,1747,1774,1874,2420,2664,3593,5733],"contractKind":"contract","documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"636:174:23","text":" @title StakedToken\n @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\n @author Aave*"},"fullyImplemented":true,"id":4450,"linearizedBaseContracts":[4450,3593,1646,5733,2664,2420,1747,1724,1874,1774],"name":"StakedToken","nodeType":"ContractDefinition","nodes":[{"id":3729,"libraryName":{"id":3727,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"933:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"927:27:23","typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3732,"libraryName":{"id":3730,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2862,"src":"963:9:23","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2862","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"957:27:23","typeName":{"id":3731,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"977:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"dde43cba","id":3735,"mutability":"constant","name":"REVISION","nodeType":"VariableDeclaration","scope":4450,"src":"988:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1023:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"312f6b83","id":3737,"mutability":"immutable","name":"STAKED_TOKEN","nodeType":"VariableDeclaration","scope":4450,"src":"1029:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3736,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1029:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"99248ea7","id":3739,"mutability":"immutable","name":"REWARD_TOKEN","nodeType":"VariableDeclaration","scope":4450,"src":"1069:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3738,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1069:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"72b49d63","id":3741,"mutability":"immutable","name":"COOLDOWN_SECONDS","nodeType":"VariableDeclaration","scope":4450,"src":"1109:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"1155:78:23","text":"@notice Seconds available to redeem once the cooldown period is fullfilled"},"functionSelector":"359c4a96","id":3744,"mutability":"immutable","name":"UNSTAKE_WINDOW","nodeType":"VariableDeclaration","scope":4450,"src":"1236:39:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1236:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3745,"nodeType":"StructuredDocumentation","src":"1280:82:23","text":"@notice Address to pull from the rewards, needs to have approved this contract"},"functionSelector":"946776cd","id":3747,"mutability":"immutable","name":"REWARDS_VAULT","nodeType":"VariableDeclaration","scope":4450,"src":"1365:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3746,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"7e90d7ef","id":3751,"mutability":"mutable","name":"stakerRewardsToClaim","nodeType":"VariableDeclaration","scope":4450,"src":"1408:55:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3750,"keyType":{"id":3748,"name":"address","nodeType":"ElementaryTypeName","src":"1416:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1408:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"091030c3","id":3755,"mutability":"mutable","name":"stakersCooldowns","nodeType":"VariableDeclaration","scope":4450,"src":"1467:51:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3754,"keyType":{"id":3752,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1467:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":3763,"name":"Staked","nodeType":"EventDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3763,"src":"1536:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3756,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3759,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":3763,"src":"1558:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3758,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3761,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3763,"src":"1586:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1586:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1535:66:23"},"src":"1523:79:23"},{"anonymous":false,"id":3771,"name":"Redeem","nodeType":"EventDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3771,"src":"1618:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3764,"name":"address","nodeType":"ElementaryTypeName","src":"1618:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3767,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3771,"src":"1640:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3766,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3769,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3771,"src":"1660:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1617:58:23"},"src":"1605:71:23"},{"anonymous":false,"id":3777,"name":"RewardsAccrued","nodeType":"EventDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3777,"src":"1701:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3772,"name":"address","nodeType":"ElementaryTypeName","src":"1701:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3775,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3777,"src":"1715:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1700:30:23"},"src":"1680:51:23"},{"anonymous":false,"id":3785,"name":"RewardsClaimed","nodeType":"EventDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":3785,"src":"1755:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3778,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3781,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":3785,"src":"1777:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3780,"name":"address","nodeType":"ElementaryTypeName","src":"1777:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3783,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3785,"src":"1797:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1754:58:23"},"src":"1734:79:23"},{"anonymous":false,"id":3789,"name":"Cooldown","nodeType":"EventDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":3789,"src":"1832:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3786,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1831:22:23"},"src":"1817:37:23"},{"body":{"id":3841,"nodeType":"Block","src":"2263:179:23","statements":[{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"STAKED_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"2269:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3822,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"2284:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"src":"2269:26:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":3824,"nodeType":"ExpressionStatement","src":"2269:26:23"},{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"REWARD_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"2301:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3826,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"2316:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"src":"2301:26:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":3828,"nodeType":"ExpressionStatement","src":"2301:26:23"},{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"2333:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3830,"name":"cooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"2352:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2333:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"2333:34:23"},{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"UNSTAKE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2373:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3834,"name":"unstakeWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"2390:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2373:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"2373:30:23"},{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3837,"name":"REWARDS_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"2409:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3838,"name":"rewardsVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"2425:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:28:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3840,"nodeType":"ExpressionStatement","src":"2409:28:23"}]},"id":3842,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3812,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"2170:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3813,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2176:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3814,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"2184:8:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3815,"modifierName":{"id":3811,"name":"ERC20WithSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"2152:17:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20WithSnapshot_$2664_$","typeString":"type(contract ERC20WithSnapshot)"}},"nodeType":"ModifierInvocation","src":"2152:41:23"},{"arguments":[{"id":3817,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"2222:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3818,"name":"distributionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"2239:20:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3819,"modifierName":{"id":3816,"name":"AaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"2198:23:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AaveDistributionManager_$3593_$","typeString":"type(contract AaveDistributionManager)"}},"nodeType":"ModifierInvocation","src":"2198:62:23"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"stakedToken","nodeType":"VariableDeclaration","scope":3842,"src":"1875:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3790,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1875:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"rewardToken","nodeType":"VariableDeclaration","scope":3842,"src":"1899:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":3792,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1899:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"cooldownSeconds","nodeType":"VariableDeclaration","scope":3842,"src":"1923:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"unstakeWindow","nodeType":"VariableDeclaration","scope":3842,"src":"1952:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"rewardsVault","nodeType":"VariableDeclaration","scope":3842,"src":"1979:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":3842,"src":"2005:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3800,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"distributionDuration","nodeType":"VariableDeclaration","scope":3842,"src":"2034:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3802,"name":"uint128","nodeType":"ElementaryTypeName","src":"2034:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":3842,"src":"2068:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3804,"name":"string","nodeType":"ElementaryTypeName","src":"2068:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":3842,"src":"2092:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3806,"name":"string","nodeType":"ElementaryTypeName","src":"2092:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":3842,"src":"2118:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3808,"name":"uint8","nodeType":"ElementaryTypeName","src":"2118:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1869:267:23"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[],"src":"2263:0:23"},"scope":4450,"src":"1858:584:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3872,"nodeType":"Block","src":"2651:117:23","statements":[{"expression":{"arguments":[{"id":3857,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"2666:4:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3856,"name":"_setName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"2657:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3859,"nodeType":"ExpressionStatement","src":"2657:14:23"},{"expression":{"arguments":[{"id":3861,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"2688:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":3860,"name":"_setSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"2677:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2677:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3863,"nodeType":"ExpressionStatement","src":"2677:18:23"},{"expression":{"arguments":[{"id":3865,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2714:8:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3864,"name":"_setDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2701:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"ExpressionStatement","src":"2701:22:23"},{"expression":{"arguments":[{"id":3869,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"2748:14:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}],"id":3868,"name":"_setAaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2729:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ITransferHook_$1786_$returns$__$","typeString":"function (contract ITransferHook)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2729:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3871,"nodeType":"ExpressionStatement","src":"2729:34:23"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"2446:49:23","text":" @dev Called by the proxy contract*"},"functionSelector":"f6d2ee86","id":3873,"implemented":true,"kind":"function","modifiers":[{"id":3854,"modifierName":{"id":3853,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"2639:11:23","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2639:11:23"}],"name":"initialize","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"aaveGovernance","nodeType":"VariableDeclaration","scope":3873,"src":"2523:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":3844,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"2523:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":3873,"src":"2557:20:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3846,"name":"string","nodeType":"ElementaryTypeName","src":"2557:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":3873,"src":"2583:22:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3848,"name":"string","nodeType":"ElementaryTypeName","src":"2583:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":3873,"src":"2611:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3850,"name":"uint8","nodeType":"ElementaryTypeName","src":"2611:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2517:112:23"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[],"src":"2651:0:23"},"scope":4450,"src":"2498:270:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1756],"body":{"id":3964,"nodeType":"Block","src":"2841:671:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"2855:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2865:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2855:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5a45524f5f414d4f554e54","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""},"value":"INVALID_ZERO_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""}],"id":3881,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2847:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2847:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"ExpressionStatement","src":"2847:43:23"},{"assignments":[3889],"declarations":[{"constant":false,"id":3889,"mutability":"mutable","name":"balanceOfUser","nodeType":"VariableDeclaration","scope":3964,"src":"2896:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3893,"initialValue":{"arguments":[{"id":3891,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"2930:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3890,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2920:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2920:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2896:45:23"},{"assignments":[3895],"declarations":[{"constant":false,"id":3895,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":3964,"src":"2948:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2948:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3906,"initialValue":{"arguments":[{"id":3897,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3004:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3900,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3024:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}],"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3016:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3898,"name":"address","nodeType":"ElementaryTypeName","src":"3016:7:23","typeDescriptions":{}}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3016:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3902,"name":"balanceOfUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"3031:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3903,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3046:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3046:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"2979:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:81:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2948:112:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3070:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3070:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3927,"nodeType":"IfStatement","src":"3066:182:23","trueBody":{"id":3926,"nodeType":"Block","src":"3091:157:23","statements":[{"eventCall":{"arguments":[{"id":3911,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3119:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3912,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3131:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3910,"name":"RewardsAccrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"3104:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3104:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"EmitStatement","src":"3099:47:23"},{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3915,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3154:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3917,"indexExpression":{"id":3916,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3175:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3154:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3922,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3226:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3918,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3189:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3920,"indexExpression":{"id":3919,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3210:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3189:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"3189:36:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3189:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3154:87:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"3154:87:23"}]}},{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3928,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3254:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3930,"indexExpression":{"id":3929,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3271:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3254:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3933,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"3313:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3934,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3321:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3935,"name":"balanceOfUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"3333:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3931,"name":"getNextCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3285:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address,uint256) view returns (uint256)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3285:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3254:93:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ExpressionStatement","src":"3254:93:23"},{"expression":{"arguments":[{"id":3940,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3360:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3941,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"3372:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3939,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3354:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3354:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3943,"nodeType":"ExpressionStatement","src":"3354:25:23"},{"expression":{"arguments":[{"expression":{"id":3948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3423:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3423:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":3952,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3443:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3435:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"3435:7:23","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3435:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"3450:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3945,"name":"STAKED_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"3392:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}],"id":3944,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"3385:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1724_$","typeString":"type(contract IERC20)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3385:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"3385:37:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1724_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3385:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3956,"nodeType":"ExpressionStatement","src":"3385:72:23"},{"eventCall":{"arguments":[{"expression":{"id":3958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3476:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3476:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3960,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3488:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3961,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"3500:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3957,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"3469:6:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3469:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"EmitStatement","src":"3464:43:23"}]},"functionSelector":"adc9772e","id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nodeType":"FunctionDefinition","overrides":{"id":3879,"nodeType":"OverrideSpecifier","overrides":[],"src":"2832:8:23"},"parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":3965,"src":"2787:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"2787:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3965,"src":"2807:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2807:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2786:36:23"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[],"src":"2841:0:23"},"scope":4450,"src":"2772:740:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1763],"body":{"id":4073,"nodeType":"Block","src":"3721:909:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3975,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"3735:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3735:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5a45524f5f414d4f554e54","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3748:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""},"value":"INVALID_ZERO_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""}],"id":3974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3727:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3727:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3980,"nodeType":"ExpressionStatement","src":"3727:43:23"},{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"cooldownStartTimestamp","nodeType":"VariableDeclaration","scope":4073,"src":"3807:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3807:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"baseExpression":{"id":3983,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3840:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3986,"indexExpression":{"expression":{"id":3984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3857:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3857:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3840:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3807:61:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3989,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3889:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3889:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3993,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"3934:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3991,"name":"cooldownStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"3907:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"3907:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3907:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3889:62:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e53554646494349454e545f434f4f4c444f574e","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3959:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead","typeString":"literal_string \"INSUFFICIENT_COOLDOWN\""},"value":"INSUFFICIENT_COOLDOWN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead","typeString":"literal_string \"INSUFFICIENT_COOLDOWN\""}],"id":3988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3874:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3874:114:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3998,"nodeType":"ExpressionStatement","src":"3874:114:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4005,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"4056:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4003,"name":"cooldownStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"4029:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4029:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4029:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4000,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4009:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4009:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"4009:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4009:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4008,"name":"UNSTAKE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"4078:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4009:83:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"554e5354414b455f57494e444f575f46494e4953484544","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4100:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962","typeString":"literal_string \"UNSTAKE_WINDOW_FINISHED\""},"value":"UNSTAKE_WINDOW_FINISHED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962","typeString":"literal_string \"UNSTAKE_WINDOW_FINISHED\""}],"id":3999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3994:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:137:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4012,"nodeType":"ExpressionStatement","src":"3994:137:23"},{"assignments":[4014],"declarations":[{"constant":false,"id":4014,"mutability":"mutable","name":"balanceOfMessageSender","nodeType":"VariableDeclaration","scope":4073,"src":"4137:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"4137:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4019,"initialValue":{"arguments":[{"expression":{"id":4016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4180:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4180:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4015,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"4170:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4170:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4137:54:23"},{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"amountToRedeem","nodeType":"VariableDeclaration","scope":4073,"src":"4198:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4029,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"4224:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4023,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4233:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4224:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4223:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4027,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"4284:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4223:67:23","trueExpression":{"id":4026,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4259:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4198:92:23"},{"expression":{"arguments":[{"expression":{"id":4031,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4328:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4328:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4033,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4340:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4364:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4030,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"4297:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4297:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"4297:72:23"},{"expression":{"arguments":[{"expression":{"id":4038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4382:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4382:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4040,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4394:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"4376:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4376:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4042,"nodeType":"ExpressionStatement","src":"4376:33:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4045,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4447:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4043,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4420:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"4420:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4420:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4466:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4420:47:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4057,"nodeType":"IfStatement","src":"4416:100:23","trueBody":{"id":4056,"nodeType":"Block","src":"4469:47:23","statements":[{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4049,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4477:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4052,"indexExpression":{"expression":{"id":4050,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4494:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4494:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4477:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4508:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4477:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"ExpressionStatement","src":"4477:32:23"}]}},{"expression":{"arguments":[{"id":4062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"4556:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4063,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4560:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4059,"name":"STAKED_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"4529:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}],"id":4058,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4522:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1724_$","typeString":"type(contract IERC20)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4522:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2742,"src":"4522:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1724_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4522:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4065,"nodeType":"ExpressionStatement","src":"4522:53:23"},{"eventCall":{"arguments":[{"expression":{"id":4067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4594:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4594:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4069,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"4606:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4070,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4610:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4066,"name":"Redeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"4587:6:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4587:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4072,"nodeType":"EmitStatement","src":"4582:43:23"}]},"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"3516:140:23","text":" @dev Redeems staked tokens, and stop earning rewards\n @param to Address to redeem to\n @param amount Amount to redeem*"},"functionSelector":"1e9a6950","id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nodeType":"FunctionDefinition","overrides":{"id":3972,"nodeType":"OverrideSpecifier","overrides":[],"src":"3712:8:23"},"parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4074,"src":"3675:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3967,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4074,"src":"3687:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"3687:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3674:28:23"},"returnParameters":{"id":3973,"nodeType":"ParameterList","parameters":[],"src":"3721:0:23"},"scope":4450,"src":"3659:971:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1766],"body":{"id":4102,"nodeType":"Block","src":"4789:192:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4813:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4813:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4080,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"4803:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4803:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4828:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4803:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4831:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7","typeString":"literal_string \"INVALID_BALANCE_ON_COOLDOWN\""},"value":"INVALID_BALANCE_ON_COOLDOWN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7","typeString":"literal_string \"INVALID_BALANCE_ON_COOLDOWN\""}],"id":4079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4795:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4795:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4088,"nodeType":"ExpressionStatement","src":"4795:66:23"},{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4089,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4898:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4092,"indexExpression":{"expression":{"id":4090,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4915:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4915:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4898:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4929:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4929:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4898:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"4898:46:23"},{"eventCall":{"arguments":[{"expression":{"id":4098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4965:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4965:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4097,"name":"Cooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"4956:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4956:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"EmitStatement","src":"4951:25:23"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"4634:114:23","text":" @dev Activates the cooldown period to unstake\n - It can't be called if the user is not staking*"},"functionSelector":"787a08a6","id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"cooldown","nodeType":"FunctionDefinition","overrides":{"id":4077,"nodeType":"OverrideSpecifier","overrides":[],"src":"4780:8:23"},"parameters":{"id":4076,"nodeType":"ParameterList","parameters":[],"src":"4768:2:23"},"returnParameters":{"id":4078,"nodeType":"ParameterList","parameters":[],"src":"4789:0:23"},"scope":4450,"src":"4751:230:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1773],"body":{"id":4164,"nodeType":"Block","src":"5204:422:23","statements":[{"assignments":[4113],"declarations":[{"constant":false,"id":4113,"mutability":"mutable","name":"newTotalRewards","nodeType":"VariableDeclaration","scope":4164,"src":"5210:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"5210:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4123,"initialValue":{"arguments":[{"expression":{"id":4115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5273:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5273:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"expression":{"id":4118,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5295:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5295:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4117,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"5285:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5285:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5308:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4114,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"5242:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5242:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5210:104:23"},{"assignments":[4125],"declarations":[{"constant":false,"id":4125,"mutability":"mutable","name":"amountToClaim","nodeType":"VariableDeclaration","scope":4164,"src":"5320:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5320:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4137,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"5345:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5360:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5360:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5355:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5355:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5345:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5344:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"5394:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5344:56:23","trueExpression":{"id":4134,"name":"newTotalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"5376:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5320:80:23"},{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4138,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"5407:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4141,"indexExpression":{"expression":{"id":4139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5428:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5428:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5407:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4144,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5462:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"494e56414c49445f414d4f554e54","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5477:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb6dbbf3194e9f4dd39c8dabe51ddb59ca6ad00c50b1bc74675ce4b263687722","typeString":"literal_string \"INVALID_AMOUNT\""},"value":"INVALID_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_eb6dbbf3194e9f4dd39c8dabe51ddb59ca6ad00c50b1bc74675ce4b263687722","typeString":"literal_string \"INVALID_AMOUNT\""}],"expression":{"id":4142,"name":"newTotalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"5442:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"5442:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5442:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5407:87:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4148,"nodeType":"ExpressionStatement","src":"5407:87:23"},{"expression":{"arguments":[{"id":4152,"name":"REWARDS_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"5531:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5546:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4154,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5550:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4149,"name":"REWARD_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"5501:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"5501:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1724_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5501:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4156,"nodeType":"ExpressionStatement","src":"5501:63:23"},{"eventCall":{"arguments":[{"expression":{"id":4158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5591:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5591:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4160,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5603:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4161,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5607:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4157,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"5576:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5576:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4163,"nodeType":"EmitStatement","src":"5571:50:23"}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"4985:148:23","text":" @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\n @param to Address to stake for\n @param amount Amount to stake*"},"functionSelector":"9a99b4f0","id":4165,"implemented":true,"kind":"function","modifiers":[],"name":"claimRewards","nodeType":"FunctionDefinition","overrides":{"id":4110,"nodeType":"OverrideSpecifier","overrides":[],"src":"5195:8:23"},"parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4165,"src":"5158:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4165,"src":"5170:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5170:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5157:28:23"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"5204:0:23"},"scope":4450,"src":"5136:490:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2226],"body":{"id":4245,"nodeType":"Block","src":"5922:727:23","statements":[{"assignments":[4177],"declarations":[{"constant":false,"id":4177,"mutability":"mutable","name":"balanceOfFrom","nodeType":"VariableDeclaration","scope":4245,"src":"5928:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4181,"initialValue":{"arguments":[{"id":4179,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5962:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4178,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"5952:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5952:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5928:39:23"},{"expression":{"arguments":[{"id":4183,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6018:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4184,"name":"balanceOfFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6024:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6039:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4182,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"5987:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5987:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4187,"nodeType":"ExpressionStatement","src":"5987:57:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6072:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4189,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6080:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6072:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"IfStatement","src":"6068:537:23","trueBody":{"id":4235,"nodeType":"Block","src":"6084:521:23","statements":[{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"balanceOfTo","nodeType":"VariableDeclaration","scope":4235,"src":"6092:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"6092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4196,"initialValue":{"arguments":[{"id":4194,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6124:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4193,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6114:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6114:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6092:35:23"},{"expression":{"arguments":[{"id":4198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6166:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4199,"name":"balanceOfTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6170:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6183:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4197,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"6135:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6135:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4202,"nodeType":"ExpressionStatement","src":"6135:53:23"},{"assignments":[4204],"declarations":[{"constant":false,"id":4204,"mutability":"mutable","name":"previousSenderCooldown","nodeType":"VariableDeclaration","scope":4235,"src":"6197:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"6197:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4208,"initialValue":{"baseExpression":{"id":4205,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"6230:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4207,"indexExpression":{"id":4206,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6247:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6230:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6197:55:23"},{"expression":{"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4209,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"6260:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4211,"indexExpression":{"id":4210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6277:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6260:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4213,"name":"previousSenderCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"6317:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4214,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6349:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6365:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4216,"name":"balanceOfTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6377:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"name":"getNextCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"6283:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address,uint256) view returns (uint256)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6283:113:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6260:136:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4219,"nodeType":"ExpressionStatement","src":"6260:136:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4220,"name":"balanceOfFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6498:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6515:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6498:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"previousSenderCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"6525:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6551:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6525:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6498:54:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4234,"nodeType":"IfStatement","src":"6494:105:23","trueBody":{"id":4233,"nodeType":"Block","src":"6554:45:23","statements":[{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4227,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"6564:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4229,"indexExpression":{"id":4228,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6581:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6564:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6589:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6564:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"6564:26:23"}]}}]}},{"expression":{"arguments":[{"id":4240,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"6627:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4241,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6633:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6637:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4237,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6611:5:23","typeDescriptions":{"typeIdentifier":"t_super$_StakedToken_$4450","typeString":"contract super StakedToken"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_transfer","nodeType":"MemberAccess","referencedDeclaration":2226,"src":"6611:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6611:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"ExpressionStatement","src":"6611:33:23"}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"5630:194:23","text":" @dev Internal ERC20 _transfer of the tokenized staked tokens\n @param from Address to transfer from\n @param to Address to transfer to\n @param amount Amount to transfer*"},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","overrides":{"id":4174,"nodeType":"OverrideSpecifier","overrides":[],"src":"5913:8:23"},"parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":4246,"src":"5851:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4167,"name":"address","nodeType":"ElementaryTypeName","src":"5851:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4246,"src":"5869:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4169,"name":"address","nodeType":"ElementaryTypeName","src":"5869:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4246,"src":"5885:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5885:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5845:58:23"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[],"src":"5922:0:23"},"scope":4450,"src":"5827:822:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"7133:401:23","statements":[{"assignments":[4259],"declarations":[{"constant":false,"id":4259,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":4301,"src":"7139:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7139:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4270,"initialValue":{"arguments":[{"id":4261,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"7195:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4264,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7209:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"7201:7:23","typeDescriptions":{}}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7201:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4266,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"7216:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4267,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7229:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4260,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7170:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7170:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7139:104:23"},{"assignments":[4272],"declarations":[{"constant":false,"id":4272,"mutability":"mutable","name":"unclaimedRewards","nodeType":"VariableDeclaration","scope":4301,"src":"7249:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"7249:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4279,"initialValue":{"arguments":[{"id":4277,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7307:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4273,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"7276:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4275,"indexExpression":{"id":4274,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"7297:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7276:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"7276:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7276:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7249:73:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7333:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7333:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"7329:171:23","trueBody":{"id":4297,"nodeType":"Block","src":"7354:146:23","statements":[{"condition":{"id":4283,"name":"updateStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"7366:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4291,"nodeType":"IfStatement","src":"7362:83:23","trueBody":{"id":4290,"nodeType":"Block","src":"7381:64:23","statements":[{"expression":{"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4284,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"7391:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4286,"indexExpression":{"id":4285,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"7412:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7391:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4287,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"7420:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7391:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4289,"nodeType":"ExpressionStatement","src":"7391:45:23"}]}},{"eventCall":{"arguments":[{"id":4293,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"7472:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4294,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7478:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4292,"name":"RewardsAccrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"7457:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7457:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4296,"nodeType":"EmitStatement","src":"7452:41:23"}]}},{"expression":{"id":4299,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"7513:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4257,"id":4300,"nodeType":"Return","src":"7506:23:23"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"6653:339:23","text":" @dev Updates the user state related with his accrued rewards\n @param user Address of the user\n @param userBalance The current balance of the user\n @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\n @return The unclaimed rewards that were added to the total accrued*"},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"_updateCurrentUnclaimedRewards","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":4302,"src":"7040:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"7040:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","scope":4302,"src":"7058:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"7058:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"updateStorage","nodeType":"VariableDeclaration","scope":4302,"src":"7083:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4252,"name":"bool","nodeType":"ElementaryTypeName","src":"7083:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7034:71:23"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4302,"src":"7124:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7123:9:23"},"scope":4450,"src":"6995:539:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4391,"nodeType":"Block","src":"8502:847:23","statements":[{"assignments":[4317],"declarations":[{"constant":false,"id":4317,"mutability":"mutable","name":"toCooldownTimestamp","nodeType":"VariableDeclaration","scope":4391,"src":"8508:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4321,"initialValue":{"baseExpression":{"id":4318,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"8538:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4320,"indexExpression":{"id":4319,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"8555:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8538:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8508:57:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8575:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8598:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8575:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4328,"nodeType":"IfStatement","src":"8571:53:23","trueBody":{"id":4327,"nodeType":"Block","src":"8601:23:23","statements":[{"expression":{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8616:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4315,"id":4326,"nodeType":"Return","src":"8609:8:23"}]}},{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"minimalValidCooldownTimestamp","nodeType":"VariableDeclaration","scope":4391,"src":"8630:37:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"8630:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4339,"initialValue":{"arguments":[{"id":4337,"name":"UNSTAKE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"8718:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4334,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"8696:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4331,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8676:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8676:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"8676:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8676:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"8676:41:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8676:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8630:103:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"minimalValidCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"8744:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4341,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8776:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8744:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4387,"nodeType":"Block","src":"8841:472:23","statements":[{"assignments":[4349],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"fromCooldownTimestamp","nodeType":"VariableDeclaration","scope":4387,"src":"8849:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"8849:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4358,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"minimalValidCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"8890:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4351,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"8922:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8890:53:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8889:55:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4356,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"8985:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8889:117:23","trueExpression":{"expression":{"id":4354,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8957:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8957:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8849:157:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"9019:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4360,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9043:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9019:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4385,"nodeType":"Block","src":"9115:192:23","statements":[{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9125:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4380,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"9287:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4378,"name":"amountToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"9267:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"9267:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9267:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"id":4373,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9220:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4371,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"9206:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"9206:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9206:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4368,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"9179:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4366,"name":"amountToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"9159:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"9159:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9159:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"9159:46:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9159:82:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9147:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"9147:119:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9147:151:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9125:173:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4384,"nodeType":"ExpressionStatement","src":"9125:173:23"}]},"id":4386,"nodeType":"IfStatement","src":"9015:292:23","trueBody":{"id":4364,"nodeType":"Block","src":"9064:45:23","statements":[{"expression":{"id":4362,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9081:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4315,"id":4363,"nodeType":"Return","src":"9074:26:23"}]}}]},"id":4388,"nodeType":"IfStatement","src":"8740:573:23","trueBody":{"id":4347,"nodeType":"Block","src":"8797:38:23","statements":[{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4343,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8805:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8827:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8805:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4346,"nodeType":"ExpressionStatement","src":"8805:23:23"}]}},{"expression":{"id":4389,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"9325:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4315,"id":4390,"nodeType":"Return","src":"9318:26:23"}]},"documentation":{"id":4303,"nodeType":"StructuredDocumentation","src":"7538:783:23","text":" @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\n  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient\n  - Weighted average of from/to cooldown timestamps if:\n    # The sender doesn't have the cooldown activated (timestamp 0).\n    # The sender timestamp is expired\n    # The sender has a \"worse\" timestamp\n  - If the receiver's cooldown timestamp expired (too old), the next is 0\n @param fromCooldownTimestamp Cooldown timestamp of the sender\n @param amountToReceive Amount\n @param toAddress Address of the recipient\n @param toBalance Current balance of the receiver\n @return The new cooldown timestamp*"},"functionSelector":"f1cc432a","id":4392,"implemented":true,"kind":"function","modifiers":[],"name":"getNextCooldownTimestamp","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"fromCooldownTimestamp","nodeType":"VariableDeclaration","scope":4392,"src":"8363:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"8363:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"amountToReceive","nodeType":"VariableDeclaration","scope":4392,"src":"8398:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"8398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"toAddress","nodeType":"VariableDeclaration","scope":4392,"src":"8427:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4308,"name":"address","nodeType":"ElementaryTypeName","src":"8427:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"toBalance","nodeType":"VariableDeclaration","scope":4392,"src":"8450:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8357:114:23"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4392,"src":"8493:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8493:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8492:9:23"},"scope":4450,"src":"8324:1025:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4438,"nodeType":"Block","src":"9573:388:23","statements":[{"assignments":[4404],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"userStakeInputs","nodeType":"VariableDeclaration","scope":4438,"src":"9579:57:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":4402,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1891,"src":"9579:32:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":4403,"nodeType":"ArrayTypeName","src":"9579:34:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"id":4410,"initialValue":{"arguments":[{"hexValue":"31","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9684:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9645:38:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct DistributionTypes.UserStakeInput memory[] memory)"},"typeName":{"baseType":{"id":4405,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1891,"src":"9649:32:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":4406,"nodeType":"ArrayTypeName","src":"9649:34:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9645:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9579:107:23"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4411,"name":"userStakeInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"9692:15:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":4413,"indexExpression":{"hexValue":"30","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9708:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9692:18:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4418,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9779:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedToken_$4450","typeString":"contract StakedToken"}],"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9771:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"9771:7:23","typeDescriptions":{}}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4421,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"9816:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4420,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"9806:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9806:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4423,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"9844:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9844:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4414,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"9713:17:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DistributionTypes_$1892_$","typeString":"type(library DistributionTypes)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UserStakeInput","nodeType":"MemberAccess","referencedDeclaration":1891,"src":"9713:32:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserStakeInput_$1891_storage_ptr_$","typeString":"type(struct DistributionTypes.UserStakeInput storage pointer)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["underlyingAsset","stakedByUser","totalStaked"],"nodeType":"FunctionCall","src":"9713:151:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"src":"9692:172:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":4427,"nodeType":"ExpressionStatement","src":"9692:172:23"},{"expression":{"arguments":[{"arguments":[{"id":4433,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"9931:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4434,"name":"userStakeInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"9939:15:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}],"id":4432,"name":"_getUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"9910:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,struct DistributionTypes.UserStakeInput memory[] memory) view returns (uint256)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9910:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4428,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"9877:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4430,"indexExpression":{"id":4429,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"9898:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9877:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"9877:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9877:79:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4399,"id":4437,"nodeType":"Return","src":"9870:86:23"}]},"documentation":{"id":4393,"nodeType":"StructuredDocumentation","src":"9353:137:23","text":" @dev Return the total rewards pending to claim by an staker\n @param staker The staker address\n @return The rewards"},"functionSelector":"8dbefee2","id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalRewardsBalance","nodeType":"FunctionDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"staker","nodeType":"VariableDeclaration","scope":4439,"src":"9525:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4394,"name":"address","nodeType":"ElementaryTypeName","src":"9525:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9524:16:23"},"returnParameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4439,"src":"9564:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9564:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9563:9:23"},"scope":4450,"src":"9493:468:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5728],"body":{"id":4448,"nodeType":"Block","src":"10129:26:23","statements":[{"expression":{"id":4446,"name":"REVISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10142:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4445,"id":4447,"nodeType":"Return","src":"10135:15:23"}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"9965:97:23","text":" @dev returns the revision of the implementation contract\n @return The revision"},"id":4449,"implemented":true,"kind":"function","modifiers":[],"name":"getRevision","nodeType":"FunctionDefinition","overrides":{"id":4442,"nodeType":"OverrideSpecifier","overrides":[],"src":"10102:8:23"},"parameters":{"id":4441,"nodeType":"ParameterList","parameters":[],"src":"10085:2:23"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4449,"src":"10120:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"10120:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10119:9:23"},"scope":4450,"src":"10065:90:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4451,"src":"811:9346:23"}],"src":"37:10121:23"},"id":23},"@aave/safety-module/contracts/stake/StakedTokenV2.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/stake/StakedTokenV2.sol","exportedSymbols":{"AaveDistributionManager":[3593],"DistributionTypes":[1892],"ERC20":[749],"GovernancePowerWithSnapshot":[2705],"IERC20":[1724],"IStakedAave":[1774],"ITransferHook":[1786],"SafeERC20":[2862],"SafeMath":[3058],"StakedTokenV2":[5694],"VersionedInitializable":[5733]},"id":5695,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":4452,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:24"},{"id":4453,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"60:33:24"},{"absolutePath":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","file":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol","id":4455,"nodeType":"ImportDirective","scope":5695,"sourceUnit":750,"src":"95:73:24","symbolAliases":[{"foreign":{"id":4454,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"103:5:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":4457,"nodeType":"ImportDirective","scope":5695,"sourceUnit":1725,"src":"170:48:24","symbolAliases":[{"foreign":{"id":4456,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"178:6:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/IStakedAave.sol","file":"../interfaces/IStakedAave.sol","id":4459,"nodeType":"ImportDirective","scope":5695,"sourceUnit":1775,"src":"219:58:24","symbolAliases":[{"foreign":{"id":4458,"name":"IStakedAave","nodeType":"Identifier","overloadedDeclarations":[],"src":"227:11:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/interfaces/ITransferHook.sol","file":"../interfaces/ITransferHook.sol","id":4461,"nodeType":"ImportDirective","scope":5695,"sourceUnit":1787,"src":"278:62:24","symbolAliases":[{"foreign":{"id":4460,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"src":"286:13:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/DistributionTypes.sol","file":"../lib/DistributionTypes.sol","id":4463,"nodeType":"ImportDirective","scope":5695,"sourceUnit":1893,"src":"342:63:24","symbolAliases":[{"foreign":{"id":4462,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"350:17:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeMath.sol","file":"../lib/SafeMath.sol","id":4465,"nodeType":"ImportDirective","scope":5695,"sourceUnit":3059,"src":"406:45:24","symbolAliases":[{"foreign":{"id":4464,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"414:8:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/SafeERC20.sol","file":"../lib/SafeERC20.sol","id":4467,"nodeType":"ImportDirective","scope":5695,"sourceUnit":2863,"src":"452:47:24","symbolAliases":[{"foreign":{"id":4466,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"src":"460:9:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/utils/VersionedInitializable.sol","file":"../utils/VersionedInitializable.sol","id":4469,"nodeType":"ImportDirective","scope":5695,"sourceUnit":5734,"src":"501:75:24","symbolAliases":[{"foreign":{"id":4468,"name":"VersionedInitializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"509:22:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol","file":"./AaveDistributionManager.sol","id":4471,"nodeType":"ImportDirective","scope":5695,"sourceUnit":3594,"src":"577:70:24","symbolAliases":[{"foreign":{"id":4470,"name":"AaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"src":"585:23:24","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol","file":"../lib/GovernancePowerWithSnapshot.sol","id":4473,"nodeType":"ImportDirective","scope":5695,"sourceUnit":2706,"src":"648:83:24","symbolAliases":[{"foreign":{"id":4472,"name":"GovernancePowerWithSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"src":"656:27:24","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4475,"name":"IStakedAave","nodeType":"UserDefinedTypeName","referencedDeclaration":1774,"src":"936:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IStakedAave_$1774","typeString":"contract IStakedAave"}},"id":4476,"nodeType":"InheritanceSpecifier","src":"936:11:24"},{"baseName":{"id":4477,"name":"GovernancePowerWithSnapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":2705,"src":"951:27:24","typeDescriptions":{"typeIdentifier":"t_contract$_GovernancePowerWithSnapshot_$2705","typeString":"contract GovernancePowerWithSnapshot"}},"id":4478,"nodeType":"InheritanceSpecifier","src":"951:27:24"},{"baseName":{"id":4479,"name":"VersionedInitializable","nodeType":"UserDefinedTypeName","referencedDeclaration":5733,"src":"982:22:24","typeDescriptions":{"typeIdentifier":"t_contract$_VersionedInitializable_$5733","typeString":"contract VersionedInitializable"}},"id":4480,"nodeType":"InheritanceSpecifier","src":"982:22:24"},{"baseName":{"id":4481,"name":"AaveDistributionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":3593,"src":"1008:23:24","typeDescriptions":{"typeIdentifier":"t_contract$_AaveDistributionManager_$3593","typeString":"contract AaveDistributionManager"}},"id":4482,"nodeType":"InheritanceSpecifier","src":"1008:23:24"}],"contractDependencies":[77,155,242,749,1634,1646,1774,2705,3593,5733],"contractKind":"contract","documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"733:174:24","text":" @title StakedToken\n @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\n @author Aave*"},"fullyImplemented":true,"id":5694,"linearizedBaseContracts":[5694,3593,1646,5733,2705,1634,155,749,77,242,1774],"name":"StakedTokenV2","nodeType":"ContractDefinition","nodes":[{"id":4485,"libraryName":{"id":4483,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":3058,"src":"1042:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$3058","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1036:27:24","typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":4488,"libraryName":{"id":4486,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":2862,"src":"1072:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2862","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"1066:27:24","typeName":{"id":4487,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1086:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}},{"constant":true,"documentation":{"id":4489,"nodeType":"StructuredDocumentation","src":"1097:52:24","text":"@dev Start of Storage layout from StakedToken v1"},"functionSelector":"dde43cba","id":4492,"mutability":"constant","name":"REVISION","nodeType":"VariableDeclaration","scope":5694,"src":"1152:36:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1187:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"312f6b83","id":4494,"mutability":"immutable","name":"STAKED_TOKEN","nodeType":"VariableDeclaration","scope":5694,"src":"1193:36:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":4493,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1193:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"99248ea7","id":4496,"mutability":"immutable","name":"REWARD_TOKEN","nodeType":"VariableDeclaration","scope":5694,"src":"1233:36:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":4495,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"1233:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"72b49d63","id":4498,"mutability":"immutable","name":"COOLDOWN_SECONDS","nodeType":"VariableDeclaration","scope":5694,"src":"1273:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"1319:78:24","text":"@notice Seconds available to redeem once the cooldown period is fullfilled"},"functionSelector":"359c4a96","id":4501,"mutability":"immutable","name":"UNSTAKE_WINDOW","nodeType":"VariableDeclaration","scope":5694,"src":"1400:39:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"1444:82:24","text":"@notice Address to pull from the rewards, needs to have approved this contract"},"functionSelector":"946776cd","id":4504,"mutability":"immutable","name":"REWARDS_VAULT","nodeType":"VariableDeclaration","scope":5694,"src":"1529:38:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4503,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"7e90d7ef","id":4508,"mutability":"mutable","name":"stakerRewardsToClaim","nodeType":"VariableDeclaration","scope":5694,"src":"1572:55:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4507,"keyType":{"id":4505,"name":"address","nodeType":"ElementaryTypeName","src":"1580:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1572:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1591:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"091030c3","id":4512,"mutability":"mutable","name":"stakersCooldowns","nodeType":"VariableDeclaration","scope":5694,"src":"1631:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4511,"keyType":{"id":4509,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1631:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1650:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":4513,"nodeType":"StructuredDocumentation","src":"1741:74:24","text":"@dev To see the voting mappings, go to GovernancePowerWithSnapshot.sol"},"id":4517,"mutability":"mutable","name":"_votingDelegates","nodeType":"VariableDeclaration","scope":5694,"src":"1818:53:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":4516,"keyType":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1818:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":4515,"name":"address","nodeType":"ElementaryTypeName","src":"1837:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":4523,"mutability":"mutable","name":"_propositionPowerSnapshots","nodeType":"VariableDeclaration","scope":5694,"src":"1876:84:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":4522,"keyType":{"id":4518,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1876:48:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":4521,"keyType":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1895:28:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":4520,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"1914:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"_propositionPowerSnapshotsCounts","nodeType":"VariableDeclaration","scope":5694,"src":"1964:69:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4526,"keyType":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1964:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"_propositionPowerDelegates","nodeType":"VariableDeclaration","scope":5694,"src":"2037:63:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":4530,"keyType":{"id":4528,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2037:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":4529,"name":"address","nodeType":"ElementaryTypeName","src":"2056:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"functionSelector":"3644e515","id":4533,"mutability":"mutable","name":"DOMAIN_SEPARATOR","nodeType":"VariableDeclaration","scope":5694,"src":"2105:31:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2105:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"78160376","id":4539,"mutability":"constant","name":"EIP712_REVISION","nodeType":"VariableDeclaration","scope":5694,"src":"2140:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4534,"name":"bytes","nodeType":"ElementaryTypeName","src":"2140:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"arguments":[{"hexValue":"31","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2180:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4535,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:24","typeDescriptions":{}}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2180:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"visibility":"public"},{"constant":true,"id":4544,"mutability":"constant","name":"EIP712_DOMAIN","nodeType":"VariableDeclaration","scope":5694,"src":"2194:141:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2194:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2250:84:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4541,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2240:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2240:95:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"functionSelector":"30adf81f","id":4549,"mutability":"constant","name":"PERMIT_TYPEHASH","nodeType":"VariableDeclaration","scope":5694,"src":"2339:141:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2339:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2395:84:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":4546,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2385:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2385:95:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"2485:58:24","text":"@dev owner => next valid nonce to submit with permit()"},"functionSelector":"b9844d8d","id":4554,"mutability":"mutable","name":"_nonces","nodeType":"VariableDeclaration","scope":5694,"src":"2546:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4553,"keyType":{"id":4551,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2546:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2565:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":4562,"name":"Staked","nodeType":"EventDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":4562,"src":"2606:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4555,"name":"address","nodeType":"ElementaryTypeName","src":"2606:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4558,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":4562,"src":"2628:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4557,"name":"address","nodeType":"ElementaryTypeName","src":"2628:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4560,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4562,"src":"2656:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2605:66:24"},"src":"2593:79:24"},{"anonymous":false,"id":4570,"name":"Redeem","nodeType":"EventDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":4570,"src":"2688:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4570,"src":"2710:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4568,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4570,"src":"2730:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2687:58:24"},"src":"2675:71:24"},{"anonymous":false,"id":4576,"name":"RewardsAccrued","nodeType":"EventDefinition","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":4576,"src":"2771:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4571,"name":"address","nodeType":"ElementaryTypeName","src":"2771:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4574,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4576,"src":"2785:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2770:30:24"},"src":"2750:51:24"},{"anonymous":false,"id":4584,"name":"RewardsClaimed","nodeType":"EventDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":4584,"src":"2825:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4577,"name":"address","nodeType":"ElementaryTypeName","src":"2825:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4580,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4584,"src":"2847:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4579,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4582,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4584,"src":"2867:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2824:58:24"},"src":"2804:79:24"},{"anonymous":false,"id":4588,"name":"Cooldown","nodeType":"EventDefinition","parameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":4588,"src":"2902:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4585,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2901:22:24"},"src":"2887:37:24"},{"body":{"id":4653,"nodeType":"Block","src":"3321:264:24","statements":[{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"STAKED_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"3327:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4622,"name":"stakedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"3342:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"src":"3327:26:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4624,"nodeType":"ExpressionStatement","src":"3327:26:24"},{"expression":{"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"REWARD_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"3359:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4626,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"3374:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"src":"3359:26:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4628,"nodeType":"ExpressionStatement","src":"3359:26:24"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"3391:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4630,"name":"cooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"3410:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3391:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"3391:34:24"},{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"UNSTAKE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"3431:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4634,"name":"unstakeWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"3448:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3431:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"3431:30:24"},{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"REWARDS_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"3467:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4638,"name":"rewardsVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"3483:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3467:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4640,"nodeType":"ExpressionStatement","src":"3467:28:24"},{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4641,"name":"_aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"3501:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4643,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"3533:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4642,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"3519:13:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransferHook_$1786_$","typeString":"type(contract ITransferHook)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3519:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"src":"3501:43:24","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"id":4646,"nodeType":"ExpressionStatement","src":"3501:43:24"},{"expression":{"arguments":[{"id":4650,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"3571:8:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":4647,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$749_$","typeString":"type(contract ERC20)"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setupDecimals","nodeType":"MemberAccess","referencedDeclaration":737,"src":"3550:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3550:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4652,"nodeType":"ExpressionStatement","src":"3550:30:24"}]},"id":4654,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4613,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4614,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"3250:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4615,"modifierName":{"id":4612,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3238:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$749_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"3238:19:24"},{"arguments":[{"id":4617,"name":"emissionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"3282:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4618,"name":"distributionDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"3299:20:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":4619,"modifierName":{"id":4616,"name":"AaveDistributionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"3258:23:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AaveDistributionManager_$3593_$","typeString":"type(contract AaveDistributionManager)"}},"nodeType":"ModifierInvocation","src":"3258:62:24"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"stakedToken","nodeType":"VariableDeclaration","scope":4654,"src":"2945:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":4589,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"2945:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"rewardToken","nodeType":"VariableDeclaration","scope":4654,"src":"2969:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"},"typeName":{"id":4591,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":1724,"src":"2969:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4594,"mutability":"mutable","name":"cooldownSeconds","nodeType":"VariableDeclaration","scope":4654,"src":"2993:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2993:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"unstakeWindow","nodeType":"VariableDeclaration","scope":4654,"src":"3022:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3022:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4598,"mutability":"mutable","name":"rewardsVault","nodeType":"VariableDeclaration","scope":4654,"src":"3049:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4597,"name":"address","nodeType":"ElementaryTypeName","src":"3049:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"emissionManager","nodeType":"VariableDeclaration","scope":4654,"src":"3075:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4599,"name":"address","nodeType":"ElementaryTypeName","src":"3075:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"distributionDuration","nodeType":"VariableDeclaration","scope":4654,"src":"3104:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4601,"name":"uint128","nodeType":"ElementaryTypeName","src":"3104:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":4654,"src":"3138:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4603,"name":"string","nodeType":"ElementaryTypeName","src":"3138:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":4654,"src":"3162:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4605,"name":"string","nodeType":"ElementaryTypeName","src":"3162:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":4654,"src":"3188:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4607,"name":"uint8","nodeType":"ElementaryTypeName","src":"3188:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"governance","nodeType":"VariableDeclaration","scope":4654,"src":"3208:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4609,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:291:24"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[],"src":"3321:0:24"},"scope":5694,"src":"2928:657:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4688,"nodeType":"Block","src":"3684:306:24","statements":[{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"chainId","nodeType":"VariableDeclaration","scope":4688,"src":"3690:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3690:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4662,"nodeType":"VariableDeclarationStatement","src":"3690:15:24"},{"AST":{"nodeType":"YulBlock","src":"3752:34:24","statements":[{"nodeType":"YulAssignment","src":"3760:20:24","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"3771:7:24"},"nodeType":"YulFunctionCall","src":"3771:9:24"},"variableNames":[{"name":"chainId","nodeType":"YulIdentifier","src":"3760:7:24"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4661,"isOffset":false,"isSlot":false,"src":"3760:7:24","valueSize":1}],"id":4663,"nodeType":"InlineAssembly","src":"3743:43:24"},{"expression":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4664,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"3792:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4668,"name":"EIP712_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"3848:13:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4672,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3887:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3887:6:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4670,"name":"bytes","nodeType":"ElementaryTypeName","src":"3881:5:24","typeDescriptions":{}}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3881:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4669,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3871:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3871:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4677,"name":"EIP712_REVISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"3915:15:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4676,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3905:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3905:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4679,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3941:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4682,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3966:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}],"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3958:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4680,"name":"address","nodeType":"ElementaryTypeName","src":"3958:7:24","typeDescriptions":{}}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3958:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4666,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3828:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3828:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3828:151:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4665,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3811:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3811:174:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3792:193:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4687,"nodeType":"ExpressionStatement","src":"3792:193:24"}]},"documentation":{"id":4655,"nodeType":"StructuredDocumentation","src":"3589:49:24","text":" @dev Called by the proxy contract*"},"functionSelector":"8129fc1c","id":4689,"implemented":true,"kind":"function","modifiers":[{"id":4658,"modifierName":{"id":4657,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"3672:11:24","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3672:11:24"}],"name":"initialize","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[],"src":"3660:2:24"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[],"src":"3684:0:24"},"scope":5694,"src":"3641:349:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1756],"body":{"id":4780,"nodeType":"Block","src":"4063:671:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"4077:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4087:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4077:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5a45524f5f414d4f554e54","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4090:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""},"value":"INVALID_ZERO_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""}],"id":4697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4069:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4069:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4703,"nodeType":"ExpressionStatement","src":"4069:43:24"},{"assignments":[4705],"declarations":[{"constant":false,"id":4705,"mutability":"mutable","name":"balanceOfUser","nodeType":"VariableDeclaration","scope":4780,"src":"4118:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4118:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4709,"initialValue":{"arguments":[{"id":4707,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4152:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4706,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4142:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4142:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4118:45:24"},{"assignments":[4711],"declarations":[{"constant":false,"id":4711,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":4780,"src":"4170:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4170:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4722,"initialValue":{"arguments":[{"id":4713,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4226:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4716,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4246:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}],"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4238:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4714,"name":"address","nodeType":"ElementaryTypeName","src":"4238:7:24","typeDescriptions":{}}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4238:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4718,"name":"balanceOfUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"4253:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4719,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4268:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4268:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4712,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"4201:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4201:81:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4170:112:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"4292:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4292:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4743,"nodeType":"IfStatement","src":"4288:182:24","trueBody":{"id":4742,"nodeType":"Block","src":"4313:157:24","statements":[{"eventCall":{"arguments":[{"id":4727,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4341:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4728,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"4353:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4726,"name":"RewardsAccrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"4326:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4326:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4730,"nodeType":"EmitStatement","src":"4321:47:24"},{"expression":{"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4731,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"4376:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4733,"indexExpression":{"id":4732,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4397:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4376:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4738,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"4448:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4734,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"4411:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4736,"indexExpression":{"id":4735,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4432:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4411:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4411:36:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4411:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4376:87:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4741,"nodeType":"ExpressionStatement","src":"4376:87:24"}]}},{"expression":{"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4744,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"4476:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4746,"indexExpression":{"id":4745,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4493:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4476:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4532:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"4535:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4750,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4543:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4751,"name":"balanceOfUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"4555:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4747,"name":"getNextCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"4507:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address,uint256) view returns (uint256)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4507:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:93:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4754,"nodeType":"ExpressionStatement","src":"4476:93:24"},{"expression":{"arguments":[{"id":4756,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4582:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4757,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"4594:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4755,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4576:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4576:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4759,"nodeType":"ExpressionStatement","src":"4576:25:24"},{"expression":{"arguments":[{"expression":{"id":4764,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4645:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4645:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":4768,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4665:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}],"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4657:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4766,"name":"address","nodeType":"ElementaryTypeName","src":"4657:7:24","typeDescriptions":{}}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4657:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4770,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"4672:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4761,"name":"STAKED_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"4614:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}],"id":4760,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4607:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1724_$","typeString":"type(contract IERC20)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4607:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"4607:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1724_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4607:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"ExpressionStatement","src":"4607:72:24"},{"eventCall":{"arguments":[{"expression":{"id":4774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4698:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4698:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4776,"name":"onBehalfOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"4710:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"4722:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4691:6:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4691:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4779,"nodeType":"EmitStatement","src":"4686:43:24"}]},"functionSelector":"adc9772e","id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nodeType":"FunctionDefinition","overrides":{"id":4695,"nodeType":"OverrideSpecifier","overrides":[],"src":"4054:8:24"},"parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"onBehalfOf","nodeType":"VariableDeclaration","scope":4781,"src":"4009:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4690,"name":"address","nodeType":"ElementaryTypeName","src":"4009:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4781,"src":"4029:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4029:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:36:24"},"returnParameters":{"id":4696,"nodeType":"ParameterList","parameters":[],"src":"4063:0:24"},"scope":5694,"src":"3994:740:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1763],"body":{"id":4889,"nodeType":"Block","src":"4943:909:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"4957:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4967:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4957:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5a45524f5f414d4f554e54","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4970:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""},"value":"INVALID_ZERO_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d","typeString":"literal_string \"INVALID_ZERO_AMOUNT\""}],"id":4790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4949:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4949:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4796,"nodeType":"ExpressionStatement","src":"4949:43:24"},{"assignments":[4798],"declarations":[{"constant":false,"id":4798,"mutability":"mutable","name":"cooldownStartTimestamp","nodeType":"VariableDeclaration","scope":4889,"src":"5029:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4803,"initialValue":{"baseExpression":{"id":4799,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5062:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4802,"indexExpression":{"expression":{"id":4800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5079:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5079:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5062:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5029:61:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4805,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5111:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5111:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":4809,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5156:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4807,"name":"cooldownStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"5129:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5129:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5129:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5111:62:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e53554646494349454e545f434f4f4c444f574e","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5181:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead","typeString":"literal_string \"INSUFFICIENT_COOLDOWN\""},"value":"INSUFFICIENT_COOLDOWN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead","typeString":"literal_string \"INSUFFICIENT_COOLDOWN\""}],"id":4804,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5096:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5096:114:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4814,"nodeType":"ExpressionStatement","src":"5096:114:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4821,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5278:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4819,"name":"cooldownStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"5251:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5251:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5251:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4816,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5231:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5231:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"5231:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5231:65:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4824,"name":"UNSTAKE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"5300:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5231:83:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"554e5354414b455f57494e444f575f46494e4953484544","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5322:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962","typeString":"literal_string \"UNSTAKE_WINDOW_FINISHED\""},"value":"UNSTAKE_WINDOW_FINISHED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962","typeString":"literal_string \"UNSTAKE_WINDOW_FINISHED\""}],"id":4815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5216:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5216:137:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4828,"nodeType":"ExpressionStatement","src":"5216:137:24"},{"assignments":[4830],"declarations":[{"constant":false,"id":4830,"mutability":"mutable","name":"balanceOfMessageSender","nodeType":"VariableDeclaration","scope":4889,"src":"5359:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4835,"initialValue":{"arguments":[{"expression":{"id":4832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5402:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5402:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4831,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5392:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5392:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5359:54:24"},{"assignments":[4837],"declarations":[{"constant":false,"id":4837,"mutability":"mutable","name":"amountToRedeem","nodeType":"VariableDeclaration","scope":4889,"src":"5420:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4845,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"5446:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4839,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"5455:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5446:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5445:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"5506:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5445:67:24","trueExpression":{"id":4842,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"5481:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5420:92:24"},{"expression":{"arguments":[{"expression":{"id":4847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5550:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5550:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4849,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"5562:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5586:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4846,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"5519:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5519:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"5519:72:24"},{"expression":{"arguments":[{"expression":{"id":4854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5604:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5604:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4856,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"5616:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5598:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5598:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4858,"nodeType":"ExpressionStatement","src":"5598:33:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4861,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"5669:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4859,"name":"balanceOfMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"5642:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"5642:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5642:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5688:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5642:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4873,"nodeType":"IfStatement","src":"5638:100:24","trueBody":{"id":4872,"nodeType":"Block","src":"5691:47:24","statements":[{"expression":{"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4865,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5699:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4868,"indexExpression":{"expression":{"id":4866,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5716:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5716:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5699:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5730:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5699:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4871,"nodeType":"ExpressionStatement","src":"5699:32:24"}]}},{"expression":{"arguments":[{"id":4878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"5778:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4879,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"5782:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4875,"name":"STAKED_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"5751:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}],"id":4874,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"5744:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1724_$","typeString":"type(contract IERC20)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5744:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2742,"src":"5744:33:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1724_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5744:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4881,"nodeType":"ExpressionStatement","src":"5744:53:24"},{"eventCall":{"arguments":[{"expression":{"id":4883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5816:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5816:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"5828:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4886,"name":"amountToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"5832:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4882,"name":"Redeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"5809:6:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5809:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4888,"nodeType":"EmitStatement","src":"5804:43:24"}]},"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"4738:140:24","text":" @dev Redeems staked tokens, and stop earning rewards\n @param to Address to redeem to\n @param amount Amount to redeem*"},"functionSelector":"1e9a6950","id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nodeType":"FunctionDefinition","overrides":{"id":4788,"nodeType":"OverrideSpecifier","overrides":[],"src":"4934:8:24"},"parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4890,"src":"4897:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4783,"name":"address","nodeType":"ElementaryTypeName","src":"4897:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4786,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4890,"src":"4909:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4896:28:24"},"returnParameters":{"id":4789,"nodeType":"ParameterList","parameters":[],"src":"4943:0:24"},"scope":5694,"src":"4881:971:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1766],"body":{"id":4918,"nodeType":"Block","src":"6011:192:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6035:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6035:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4896,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6025:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6025:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6050:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6025:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6053:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7","typeString":"literal_string \"INVALID_BALANCE_ON_COOLDOWN\""},"value":"INVALID_BALANCE_ON_COOLDOWN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7","typeString":"literal_string \"INVALID_BALANCE_ON_COOLDOWN\""}],"id":4895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6017:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6017:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4904,"nodeType":"ExpressionStatement","src":"6017:66:24"},{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4905,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6120:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4908,"indexExpression":{"expression":{"id":4906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6137:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6137:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6120:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4909,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6151:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6151:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6120:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4912,"nodeType":"ExpressionStatement","src":"6120:46:24"},{"eventCall":{"arguments":[{"expression":{"id":4914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6187:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6187:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4913,"name":"Cooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"6178:8:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6178:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4917,"nodeType":"EmitStatement","src":"6173:25:24"}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"5856:114:24","text":" @dev Activates the cooldown period to unstake\n - It can't be called if the user is not staking*"},"functionSelector":"787a08a6","id":4919,"implemented":true,"kind":"function","modifiers":[],"name":"cooldown","nodeType":"FunctionDefinition","overrides":{"id":4893,"nodeType":"OverrideSpecifier","overrides":[],"src":"6002:8:24"},"parameters":{"id":4892,"nodeType":"ParameterList","parameters":[],"src":"5990:2:24"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[],"src":"6011:0:24"},"scope":5694,"src":"5973:230:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1773],"body":{"id":4980,"nodeType":"Block","src":"6426:422:24","statements":[{"assignments":[4929],"declarations":[{"constant":false,"id":4929,"mutability":"mutable","name":"newTotalRewards","nodeType":"VariableDeclaration","scope":4980,"src":"6432:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"6432:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4939,"initialValue":{"arguments":[{"expression":{"id":4931,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6495:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6495:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"expression":{"id":4934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6517:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6517:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4933,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6507:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6507:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6530:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4930,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"6464:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6464:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6432:104:24"},{"assignments":[4941],"declarations":[{"constant":false,"id":4941,"mutability":"mutable","name":"amountToClaim","nodeType":"VariableDeclaration","scope":4980,"src":"6542:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4940,"name":"uint256","nodeType":"ElementaryTypeName","src":"6542:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4953,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"6567:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"6582:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4943,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6577:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6577:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6577:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6567:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6566:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4951,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"6616:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6566:56:24","trueExpression":{"id":4950,"name":"newTotalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6598:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6542:80:24"},{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4954,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"6629:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4957,"indexExpression":{"expression":{"id":4955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6650:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6650:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6629:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4960,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"6684:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"494e56414c49445f414d4f554e54","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6699:16:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb6dbbf3194e9f4dd39c8dabe51ddb59ca6ad00c50b1bc74675ce4b263687722","typeString":"literal_string \"INVALID_AMOUNT\""},"value":"INVALID_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_eb6dbbf3194e9f4dd39c8dabe51ddb59ca6ad00c50b1bc74675ce4b263687722","typeString":"literal_string \"INVALID_AMOUNT\""}],"expression":{"id":4958,"name":"newTotalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6664:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"6664:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6664:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6629:87:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"6629:87:24"},{"expression":{"arguments":[{"id":4968,"name":"REWARDS_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"6753:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"6768:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4970,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"6772:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4965,"name":"REWARD_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"6723:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1724","typeString":"contract IERC20"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"6723:29:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1724_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1724_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6723:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4972,"nodeType":"ExpressionStatement","src":"6723:63:24"},{"eventCall":{"arguments":[{"expression":{"id":4974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6813:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6813:10:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"6825:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4977,"name":"amountToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"6829:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4973,"name":"RewardsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"6798:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6798:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4979,"nodeType":"EmitStatement","src":"6793:50:24"}]},"documentation":{"id":4920,"nodeType":"StructuredDocumentation","src":"6207:148:24","text":" @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\n @param to Address to stake for\n @param amount Amount to stake*"},"functionSelector":"9a99b4f0","id":4981,"implemented":true,"kind":"function","modifiers":[],"name":"claimRewards","nodeType":"FunctionDefinition","overrides":{"id":4926,"nodeType":"OverrideSpecifier","overrides":[],"src":"6417:8:24"},"parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":4981,"src":"6380:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4921,"name":"address","nodeType":"ElementaryTypeName","src":"6380:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4924,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":4981,"src":"6392:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"6392:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6379:28:24"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[],"src":"6426:0:24"},"scope":5694,"src":"6358:490:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[570],"body":{"id":5061,"nodeType":"Block","src":"7144:727:24","statements":[{"assignments":[4993],"declarations":[{"constant":false,"id":4993,"mutability":"mutable","name":"balanceOfFrom","nodeType":"VariableDeclaration","scope":5061,"src":"7150:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"7150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4997,"initialValue":{"arguments":[{"id":4995,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7184:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4994,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"7174:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7174:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7150:39:24"},{"expression":{"arguments":[{"id":4999,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7240:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5000,"name":"balanceOfFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"7246:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7261:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4998,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"7209:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7209:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5003,"nodeType":"ExpressionStatement","src":"7209:57:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7294:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"7302:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7294:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5052,"nodeType":"IfStatement","src":"7290:537:24","trueBody":{"id":5051,"nodeType":"Block","src":"7306:521:24","statements":[{"assignments":[5008],"declarations":[{"constant":false,"id":5008,"mutability":"mutable","name":"balanceOfTo","nodeType":"VariableDeclaration","scope":5051,"src":"7314:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"7314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5012,"initialValue":{"arguments":[{"id":5010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"7346:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5009,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"7336:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7336:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7314:35:24"},{"expression":{"arguments":[{"id":5014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"7388:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5015,"name":"balanceOfTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"7392:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7405:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5013,"name":"_updateCurrentUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"7357:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool) returns (uint256)"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7357:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5018,"nodeType":"ExpressionStatement","src":"7357:53:24"},{"assignments":[5020],"declarations":[{"constant":false,"id":5020,"mutability":"mutable","name":"previousSenderCooldown","nodeType":"VariableDeclaration","scope":5051,"src":"7419:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5024,"initialValue":{"baseExpression":{"id":5021,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"7452:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5023,"indexExpression":{"id":5022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7469:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7452:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:55:24"},{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5025,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"7482:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5027,"indexExpression":{"id":5026,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"7499:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7482:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5029,"name":"previousSenderCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"7539:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5030,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7571:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"7587:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5032,"name":"balanceOfTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"7599:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"name":"getNextCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"7505:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address,uint256) view returns (uint256)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7505:113:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7482:136:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5035,"nodeType":"ExpressionStatement","src":"7482:136:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"balanceOfFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"7720:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5037,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7737:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7720:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"previousSenderCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"7747:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7773:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7747:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7720:54:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5050,"nodeType":"IfStatement","src":"7716:105:24","trueBody":{"id":5049,"nodeType":"Block","src":"7776:45:24","statements":[{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5043,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"7786:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5045,"indexExpression":{"id":5044,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7803:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7786:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7786:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"7786:26:24"}]}}]}},{"expression":{"arguments":[{"id":5056,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7849:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5057,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"7855:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7859:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5053,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7833:5:24","typeDescriptions":{"typeIdentifier":"t_super$_StakedTokenV2_$5694","typeString":"contract super StakedTokenV2"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_transfer","nodeType":"MemberAccess","referencedDeclaration":570,"src":"7833:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7833:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"ExpressionStatement","src":"7833:33:24"}]},"documentation":{"id":4982,"nodeType":"StructuredDocumentation","src":"6852:194:24","text":" @dev Internal ERC20 _transfer of the tokenized staked tokens\n @param from Address to transfer from\n @param to Address to transfer to\n @param amount Amount to transfer*"},"id":5062,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","overrides":{"id":4990,"nodeType":"OverrideSpecifier","overrides":[],"src":"7135:8:24"},"parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":5062,"src":"7073:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4983,"name":"address","nodeType":"ElementaryTypeName","src":"7073:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":5062,"src":"7091:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4985,"name":"address","nodeType":"ElementaryTypeName","src":"7091:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4988,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":5062,"src":"7107:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7107:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7067:58:24"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[],"src":"7144:0:24"},"scope":5694,"src":"7049:822:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5117,"nodeType":"Block","src":"8355:401:24","statements":[{"assignments":[5075],"declarations":[{"constant":false,"id":5075,"mutability":"mutable","name":"accruedRewards","nodeType":"VariableDeclaration","scope":5117,"src":"8361:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"8361:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5086,"initialValue":{"arguments":[{"id":5077,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"8417:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5080,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8431:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}],"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5078,"name":"address","nodeType":"ElementaryTypeName","src":"8423:7:24","typeDescriptions":{}}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5082,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"8438:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5083,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"8451:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8451:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5076,"name":"_updateUserAssetInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"8392:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8392:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8361:104:24"},{"assignments":[5088],"declarations":[{"constant":false,"id":5088,"mutability":"mutable","name":"unclaimedRewards","nodeType":"VariableDeclaration","scope":5117,"src":"8471:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"8471:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5095,"initialValue":{"arguments":[{"id":5093,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"8529:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5089,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"8498:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5091,"indexExpression":{"id":5090,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"8519:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8498:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"8498:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8498:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8471:73:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"8555:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8573:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8555:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5114,"nodeType":"IfStatement","src":"8551:171:24","trueBody":{"id":5113,"nodeType":"Block","src":"8576:146:24","statements":[{"condition":{"id":5099,"name":"updateStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"8588:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5107,"nodeType":"IfStatement","src":"8584:83:24","trueBody":{"id":5106,"nodeType":"Block","src":"8603:64:24","statements":[{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5100,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"8613:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5102,"indexExpression":{"id":5101,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"8634:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8613:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5103,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"8642:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5105,"nodeType":"ExpressionStatement","src":"8613:45:24"}]}},{"eventCall":{"arguments":[{"id":5109,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"8694:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5110,"name":"accruedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"8700:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5108,"name":"RewardsAccrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"8679:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8679:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5112,"nodeType":"EmitStatement","src":"8674:41:24"}]}},{"expression":{"id":5115,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"8735:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5073,"id":5116,"nodeType":"Return","src":"8728:23:24"}]},"documentation":{"id":5063,"nodeType":"StructuredDocumentation","src":"7875:339:24","text":" @dev Updates the user state related with his accrued rewards\n @param user Address of the user\n @param userBalance The current balance of the user\n @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\n @return The unclaimed rewards that were added to the total accrued*"},"id":5118,"implemented":true,"kind":"function","modifiers":[],"name":"_updateCurrentUnclaimedRewards","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":5118,"src":"8262:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5064,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5067,"mutability":"mutable","name":"userBalance","nodeType":"VariableDeclaration","scope":5118,"src":"8280:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"updateStorage","nodeType":"VariableDeclaration","scope":5118,"src":"8305:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5068,"name":"bool","nodeType":"ElementaryTypeName","src":"8305:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8256:71:24"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5118,"src":"8346:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"8346:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8345:9:24"},"scope":5694,"src":"8217:539:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5207,"nodeType":"Block","src":"9724:847:24","statements":[{"assignments":[5133],"declarations":[{"constant":false,"id":5133,"mutability":"mutable","name":"toCooldownTimestamp","nodeType":"VariableDeclaration","scope":5207,"src":"9730:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5132,"name":"uint256","nodeType":"ElementaryTypeName","src":"9730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5137,"initialValue":{"baseExpression":{"id":5134,"name":"stakersCooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"9760:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5136,"indexExpression":{"id":5135,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"9777:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9760:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9730:57:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"9797:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9820:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9797:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"9793:53:24","trueBody":{"id":5143,"nodeType":"Block","src":"9823:23:24","statements":[{"expression":{"hexValue":"30","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9838:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5131,"id":5142,"nodeType":"Return","src":"9831:8:24"}]}},{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"minimalValidCooldownTimestamp","nodeType":"VariableDeclaration","scope":5207,"src":"9852:37:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"9852:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5155,"initialValue":{"arguments":[{"id":5153,"name":"UNSTAKE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"9940:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5150,"name":"COOLDOWN_SECONDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"9918:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":5147,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9898:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9898:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"9898:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9898:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"9898:41:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9898:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9852:103:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"minimalValidCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9966:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5157,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"9998:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9966:51:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5203,"nodeType":"Block","src":"10063:472:24","statements":[{"assignments":[5165],"declarations":[{"constant":false,"id":5165,"mutability":"mutable","name":"fromCooldownTimestamp","nodeType":"VariableDeclaration","scope":5203,"src":"10071:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"10071:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5174,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"minimalValidCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10112:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5167,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"10144:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10112:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10111:55:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5172,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"10207:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10111:117:24","trueExpression":{"expression":{"id":5170,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10179:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10179:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10071:157:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"10241:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5176,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10265:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10241:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5201,"nodeType":"Block","src":"10337:192:24","statements":[{"expression":{"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10347:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5196,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"10509:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5194,"name":"amountToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"10489:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"10489:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10489:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"id":5189,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10442:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5187,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"10428:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"10428:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10428:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5184,"name":"fromCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"10401:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5182,"name":"amountToReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"10381:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"10381:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10381:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"10381:46:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10381:82:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10369:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"10369:119:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:151:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10347:173:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5200,"nodeType":"ExpressionStatement","src":"10347:173:24"}]},"id":5202,"nodeType":"IfStatement","src":"10237:292:24","trueBody":{"id":5180,"nodeType":"Block","src":"10286:45:24","statements":[{"expression":{"id":5178,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10303:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5131,"id":5179,"nodeType":"Return","src":"10296:26:24"}]}}]},"id":5204,"nodeType":"IfStatement","src":"9962:573:24","trueBody":{"id":5163,"nodeType":"Block","src":"10019:38:24","statements":[{"expression":{"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5159,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10027:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10049:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10027:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5162,"nodeType":"ExpressionStatement","src":"10027:23:24"}]}},{"expression":{"id":5205,"name":"toCooldownTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"10547:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5131,"id":5206,"nodeType":"Return","src":"10540:26:24"}]},"documentation":{"id":5119,"nodeType":"StructuredDocumentation","src":"8760:783:24","text":" @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\n  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient\n  - Weighted average of from/to cooldown timestamps if:\n    # The sender doesn't have the cooldown activated (timestamp 0).\n    # The sender timestamp is expired\n    # The sender has a \"worse\" timestamp\n  - If the receiver's cooldown timestamp expired (too old), the next is 0\n @param fromCooldownTimestamp Cooldown timestamp of the sender\n @param amountToReceive Amount\n @param toAddress Address of the recipient\n @param toBalance Current balance of the receiver\n @return The new cooldown timestamp*"},"functionSelector":"f1cc432a","id":5208,"implemented":true,"kind":"function","modifiers":[],"name":"getNextCooldownTimestamp","nodeType":"FunctionDefinition","parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"fromCooldownTimestamp","nodeType":"VariableDeclaration","scope":5208,"src":"9585:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"9585:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5123,"mutability":"mutable","name":"amountToReceive","nodeType":"VariableDeclaration","scope":5208,"src":"9620:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"9620:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"toAddress","nodeType":"VariableDeclaration","scope":5208,"src":"9649:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5124,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5127,"mutability":"mutable","name":"toBalance","nodeType":"VariableDeclaration","scope":5208,"src":"9672:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5126,"name":"uint256","nodeType":"ElementaryTypeName","src":"9672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9579:114:24"},"returnParameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5208,"src":"9715:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"9715:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9714:9:24"},"scope":5694,"src":"9546:1025:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5254,"nodeType":"Block","src":"10795:388:24","statements":[{"assignments":[5220],"declarations":[{"constant":false,"id":5220,"mutability":"mutable","name":"userStakeInputs","nodeType":"VariableDeclaration","scope":5254,"src":"10801:57:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"},"typeName":{"baseType":{"id":5218,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1891,"src":"10801:32:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":5219,"nodeType":"ArrayTypeName","src":"10801:34:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}},"visibility":"internal"}],"id":5226,"initialValue":{"arguments":[{"hexValue":"31","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10906:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10867:38:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct DistributionTypes.UserStakeInput memory[] memory)"},"typeName":{"baseType":{"id":5221,"name":"DistributionTypes.UserStakeInput","nodeType":"UserDefinedTypeName","referencedDeclaration":1891,"src":"10871:32:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput"}},"id":5222,"nodeType":"ArrayTypeName","src":"10871:34:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_storage_$dyn_storage_ptr","typeString":"struct DistributionTypes.UserStakeInput[]"}}},"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10867:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10801:107:24"},{"expression":{"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5227,"name":"userStakeInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"10914:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}},"id":5229,"indexExpression":{"hexValue":"30","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10914:18:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5234,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11001:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakedTokenV2_$5694","typeString":"contract StakedTokenV2"}],"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10993:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5232,"name":"address","nodeType":"ElementaryTypeName","src":"10993:7:24","typeDescriptions":{}}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10993:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5237,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"11038:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5236,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"11028:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11028:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5239,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"11066:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5230,"name":"DistributionTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"10935:17:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DistributionTypes_$1892_$","typeString":"type(library DistributionTypes)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UserStakeInput","nodeType":"MemberAccess","referencedDeclaration":1891,"src":"10935:32:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserStakeInput_$1891_storage_ptr_$","typeString":"type(struct DistributionTypes.UserStakeInput storage pointer)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["underlyingAsset","stakedByUser","totalStaked"],"nodeType":"FunctionCall","src":"10935:151:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"src":"10914:172:24","typeDescriptions":{"typeIdentifier":"t_struct$_UserStakeInput_$1891_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory"}},"id":5243,"nodeType":"ExpressionStatement","src":"10914:172:24"},{"expression":{"arguments":[{"arguments":[{"id":5249,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"11153:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5250,"name":"userStakeInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"11161:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr","typeString":"struct DistributionTypes.UserStakeInput memory[] memory"}],"id":5248,"name":"_getUnclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11132:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_struct$_UserStakeInput_$1891_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,struct DistributionTypes.UserStakeInput memory[] memory) view returns (uint256)"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11132:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5244,"name":"stakerRewardsToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11099:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5246,"indexExpression":{"id":5245,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"11120:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11099:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"11099:32:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11099:79:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5215,"id":5253,"nodeType":"Return","src":"11092:86:24"}]},"documentation":{"id":5209,"nodeType":"StructuredDocumentation","src":"10575:137:24","text":" @dev Return the total rewards pending to claim by an staker\n @param staker The staker address\n @return The rewards"},"functionSelector":"8dbefee2","id":5255,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalRewardsBalance","nodeType":"FunctionDefinition","parameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"staker","nodeType":"VariableDeclaration","scope":5255,"src":"10747:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5210,"name":"address","nodeType":"ElementaryTypeName","src":"10747:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10746:16:24"},"returnParameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5214,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5255,"src":"10786:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"10786:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:9:24"},"scope":5694,"src":"10715:468:24","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5728],"body":{"id":5264,"nodeType":"Block","src":"11351:26:24","statements":[{"expression":{"id":5262,"name":"REVISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"11364:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5261,"id":5263,"nodeType":"Return","src":"11357:15:24"}]},"documentation":{"id":5256,"nodeType":"StructuredDocumentation","src":"11187:97:24","text":" @dev returns the revision of the implementation contract\n @return The revision"},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"getRevision","nodeType":"FunctionDefinition","overrides":{"id":5258,"nodeType":"OverrideSpecifier","overrides":[],"src":"11324:8:24"},"parameters":{"id":5257,"nodeType":"ParameterList","parameters":[],"src":"11307:2:24"},"returnParameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5265,"src":"11342:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"11342:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11341:9:24"},"scope":5694,"src":"11287:90:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5355,"nodeType":"Block","src":"11962:589:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"11976:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11985:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5285,"name":"address","nodeType":"ElementaryTypeName","src":"11985:7:24","typeDescriptions":{}}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11985:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"11976:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f4f574e4552","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11997:15:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886","typeString":"literal_string \"INVALID_OWNER\""},"value":"INVALID_OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886","typeString":"literal_string \"INVALID_OWNER\""}],"id":5283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11968:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11968:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5292,"nodeType":"ExpressionStatement","src":"11968:45:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5294,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12058:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12058:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5296,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"12077:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12058:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f45585049524154494f4e","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12087:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""},"value":"INVALID_EXPIRATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""}],"id":5293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12050:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12050:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5300,"nodeType":"ExpressionStatement","src":"12050:58:24"},{"assignments":[5302],"declarations":[{"constant":false,"id":5302,"mutability":"mutable","name":"currentValidNonce","nodeType":"VariableDeclaration","scope":5355,"src":"12114:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"12114:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5306,"initialValue":{"baseExpression":{"id":5303,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"12142:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5305,"indexExpression":{"id":5304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12150:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12142:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12114:42:24"},{"assignments":[5308],"declarations":[{"constant":false,"id":5308,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":5355,"src":"12162:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12162:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5327,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12232:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":5313,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"12254:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":5317,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"12303:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5318,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12320:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5319,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"12327:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"12336:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5321,"name":"currentValidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"12343:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5322,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"12362:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5315,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12292:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"12292:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12292:79:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5314,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12282:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12282:90:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5310,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12204:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"12204:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12204:178:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12185:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12185:205:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12162:228:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12405:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5331,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"12424:6:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5332,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"12432:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5333,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"12435:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5334,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"12438:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5330,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"12414:9:24","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12414:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12405:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4154555245","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12442:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""},"value":"INVALID_SIGNATURE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""}],"id":5328,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12397:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12397:65:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5339,"nodeType":"ExpressionStatement","src":"12397:65:24"},{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5340,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"12468:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5342,"indexExpression":{"id":5341,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12476:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12468:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":5345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12507:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5343,"name":"currentValidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"12485:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"12485:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12485:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"12468:41:24"},{"expression":{"arguments":[{"id":5350,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12524:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5351,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"12531:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"12540:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5349,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"12515:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12515:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"ExpressionStatement","src":"12515:31:24"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"11381:424:24","text":" @dev implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\n @param owner the owner of the funds\n @param spender the spender\n @param value the amount\n @param deadline the deadline timestamp, type(uint256).max for no deadline\n @param v signature param\n @param s signature param\n @param r signature param"},"functionSelector":"d505accf","id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","parameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":5356,"src":"11830:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5267,"name":"address","nodeType":"ElementaryTypeName","src":"11830:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5270,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":5356,"src":"11849:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5269,"name":"address","nodeType":"ElementaryTypeName","src":"11849:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5272,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5356,"src":"11870:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5271,"name":"uint256","nodeType":"ElementaryTypeName","src":"11870:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":5356,"src":"11889:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5273,"name":"uint256","nodeType":"ElementaryTypeName","src":"11889:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":5356,"src":"11911:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5275,"name":"uint8","nodeType":"ElementaryTypeName","src":"11911:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5278,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":5356,"src":"11924:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11924:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5280,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":5356,"src":"11939:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11939:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11824:128:24"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[],"src":"11962:0:24"},"scope":5694,"src":"11809:742:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[748],"body":{"id":5474,"nodeType":"Block","src":"13012:1106:24","statements":[{"assignments":[5368],"declarations":[{"constant":false,"id":5368,"mutability":"mutable","name":"votingFromDelegatee","nodeType":"VariableDeclaration","scope":5474,"src":"13018:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5367,"name":"address","nodeType":"ElementaryTypeName","src":"13018:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5372,"initialValue":{"baseExpression":{"id":5369,"name":"_votingDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"13048:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":5371,"indexExpression":{"id":5370,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"13065:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13048:22:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13018:52:24"},{"assignments":[5374],"declarations":[{"constant":false,"id":5374,"mutability":"mutable","name":"votingToDelegatee","nodeType":"VariableDeclaration","scope":5474,"src":"13076:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5373,"name":"address","nodeType":"ElementaryTypeName","src":"13076:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5378,"initialValue":{"baseExpression":{"id":5375,"name":"_votingDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"13104:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":5377,"indexExpression":{"id":5376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"13121:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13104:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13076:48:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"votingFromDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"13135:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13166:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13158:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5380,"name":"address","nodeType":"ElementaryTypeName","src":"13158:7:24","typeDescriptions":{}}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13158:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"13135:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"IfStatement","src":"13131:80:24","trueBody":{"id":5389,"nodeType":"Block","src":"13170:41:24","statements":[{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"votingFromDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"13178:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5386,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"13200:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13178:26:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5388,"nodeType":"ExpressionStatement","src":"13178:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"votingToDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"13220:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13249:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13241:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5392,"name":"address","nodeType":"ElementaryTypeName","src":"13241:7:24","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13241:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"13220:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5402,"nodeType":"IfStatement","src":"13216:74:24","trueBody":{"id":5401,"nodeType":"Block","src":"13253:37:24","statements":[{"expression":{"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5397,"name":"votingToDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"13261:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5398,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"13281:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13261:22:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5400,"nodeType":"ExpressionStatement","src":"13261:22:24"}]}},{"expression":{"arguments":[{"id":5404,"name":"votingFromDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"13324:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5405,"name":"votingToDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"13351:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5406,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"13376:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5407,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"13390:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"VOTING_POWER","nodeType":"MemberAccess","src":"13390:27:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":5403,"name":"_moveDelegatesByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"13296:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,uint256,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13296:127:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5410,"nodeType":"ExpressionStatement","src":"13296:127:24"},{"assignments":[5412],"declarations":[{"constant":false,"id":5412,"mutability":"mutable","name":"propPowerFromDelegatee","nodeType":"VariableDeclaration","scope":5474,"src":"13430:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5411,"name":"address","nodeType":"ElementaryTypeName","src":"13430:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5416,"initialValue":{"baseExpression":{"id":5413,"name":"_propositionPowerDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"13463:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":5415,"indexExpression":{"id":5414,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"13490:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13463:32:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13430:65:24"},{"assignments":[5418],"declarations":[{"constant":false,"id":5418,"mutability":"mutable","name":"propPowerToDelegatee","nodeType":"VariableDeclaration","scope":5474,"src":"13501:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5417,"name":"address","nodeType":"ElementaryTypeName","src":"13501:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5422,"initialValue":{"baseExpression":{"id":5419,"name":"_propositionPowerDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"13532:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":5421,"indexExpression":{"id":5420,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"13559:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13532:30:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13501:61:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"propPowerFromDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"13573:22:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13607:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13599:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5424,"name":"address","nodeType":"ElementaryTypeName","src":"13599:7:24","typeDescriptions":{}}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13599:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"13573:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5434,"nodeType":"IfStatement","src":"13569:86:24","trueBody":{"id":5433,"nodeType":"Block","src":"13611:44:24","statements":[{"expression":{"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5429,"name":"propPowerFromDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"13619:22:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5430,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"13644:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13619:29:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5432,"nodeType":"ExpressionStatement","src":"13619:29:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"propPowerToDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"13664:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13696:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13688:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5436,"name":"address","nodeType":"ElementaryTypeName","src":"13688:7:24","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13688:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"13664:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5446,"nodeType":"IfStatement","src":"13660:80:24","trueBody":{"id":5445,"nodeType":"Block","src":"13700:40:24","statements":[{"expression":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5441,"name":"propPowerToDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"13708:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"13731:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13708:25:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5444,"nodeType":"ExpressionStatement","src":"13708:25:24"}]}},{"expression":{"arguments":[{"id":5448,"name":"propPowerFromDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"13774:22:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5449,"name":"propPowerToDelegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"13804:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5450,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"13832:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5451,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"13846:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PROPOSITION_POWER","nodeType":"MemberAccess","src":"13846:32:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":5447,"name":"_moveDelegatesByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"13746:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,uint256,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13746:138:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5454,"nodeType":"ExpressionStatement","src":"13746:138:24"},{"assignments":[5456],"declarations":[{"constant":false,"id":5456,"mutability":"mutable","name":"aaveGovernance","nodeType":"VariableDeclaration","scope":5474,"src":"13964:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"typeName":{"id":5455,"name":"ITransferHook","nodeType":"UserDefinedTypeName","referencedDeclaration":1786,"src":"13964:13:24","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"visibility":"internal"}],"id":5458,"initialValue":{"id":5457,"name":"_aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"13995:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"VariableDeclarationStatement","src":"13964:46:24"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"14020:14:24","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14052:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5460,"name":"ITransferHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"14038:13:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransferHook_$1786_$","typeString":"type(contract ITransferHook)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14038:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"src":"14020:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5473,"nodeType":"IfStatement","src":"14016:98:24","trueBody":{"id":5472,"nodeType":"Block","src":"14056:58:24","statements":[{"expression":{"arguments":[{"id":5467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"14090:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"14096:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"14100:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5464,"name":"aaveGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"14064:14:24","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferHook_$1786","typeString":"contract ITransferHook"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onTransfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"14064:25:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14064:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"ExpressionStatement","src":"14064:43:24"}]}}]},"documentation":{"id":5357,"nodeType":"StructuredDocumentation","src":"12555:348:24","text":" @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\n - On _transfer, it writes snapshots for both \"from\" and \"to\"\n - On _mint, only for _to\n - On _burn, only for _from\n @param from the from address\n @param to the to address\n @param amount the amount to transfer"},"id":5475,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","overrides":{"id":5365,"nodeType":"OverrideSpecifier","overrides":[],"src":"13003:8:24"},"parameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":5475,"src":"12941:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5358,"name":"address","nodeType":"ElementaryTypeName","src":"12941:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":5475,"src":"12959:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5360,"name":"address","nodeType":"ElementaryTypeName","src":"12959:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":5475,"src":"12975:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"12975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12935:58:24"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[],"src":"13012:0:24"},"scope":5694,"src":"12906:1212:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1518],"body":{"id":5512,"nodeType":"Block","src":"14441:293:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5495,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"14451:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5496,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"14469:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"VOTING_POWER","nodeType":"MemberAccess","src":"14469:27:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"src":"14451:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5510,"nodeType":"Block","src":"14586:144:24","statements":[{"expression":{"components":[{"id":5505,"name":"_propositionPowerSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"14611:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},{"id":5506,"name":"_propositionPowerSnapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"14647:32:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},{"id":5507,"name":"_propositionPowerDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"14689:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}}],"id":5508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14601:122:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"functionReturnParameters":5494,"id":5509,"nodeType":"Return","src":"14594:129:24"}]},"id":5511,"nodeType":"IfStatement","src":"14447:283:24","trueBody":{"id":5504,"nodeType":"Block","src":"14498:82:24","statements":[{"expression":{"components":[{"id":5499,"name":"_votingSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"14514:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref))"}},{"id":5500,"name":"_votingSnapshotsCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"14532:22:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},{"id":5501,"name":"_votingDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"14556:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}}],"id":5502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14513:60:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$_$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_address_$_$","typeString":"tuple(mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot storage ref)),mapping(address => uint256),mapping(address => address))"}},"functionReturnParameters":5494,"id":5503,"nodeType":"Return","src":"14506:67:24"}]}}]},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"_getDelegationDataByType","nodeType":"FunctionDefinition","overrides":{"id":5479,"nodeType":"OverrideSpecifier","overrides":[],"src":"14213:8:24"},"parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":5513,"src":"14156:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":5476,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"14156:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"}],"src":"14155:31:24"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5513,"src":"14242:56:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"typeName":{"id":5484,"keyType":{"id":5480,"name":"address","nodeType":"ElementaryTypeName","src":"14250:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"14242:48:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))"},"valueType":{"id":5483,"keyType":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"14269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"14261:28:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Snapshot_$977_storage_$","typeString":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)"},"valueType":{"id":5482,"name":"Snapshot","nodeType":"UserDefinedTypeName","referencedDeclaration":977,"src":"14280:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshot_$977_storage_ptr","typeString":"struct GovernancePowerDelegationERC20.Snapshot"}}}},"visibility":"internal"},{"constant":false,"id":5489,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5513,"src":"14318:35:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5488,"keyType":{"id":5486,"name":"address","nodeType":"ElementaryTypeName","src":"14326:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"14318:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"14337:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":5493,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5513,"src":"14379:35:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":5492,"keyType":{"id":5490,"name":"address","nodeType":"ElementaryTypeName","src":"14387:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"14379:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":5491,"name":"address","nodeType":"ElementaryTypeName","src":"14398:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"}],"src":"14234:204:24"},"scope":5694,"src":"14122:612:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5601,"nodeType":"Block","src":"15398:538:24","statements":[{"assignments":[5532],"declarations":[{"constant":false,"id":5532,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":5601,"src":"15404:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15404:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5546,"initialValue":{"arguments":[{"arguments":[{"id":5536,"name":"DELEGATE_BY_TYPE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"15461:25:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5537,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"15488:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5540,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"15507:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15499:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"15499:7:24","typeDescriptions":{}}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15499:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5542,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"15524:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5543,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"15531:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5534,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15450:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"15450:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15450:88:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5533,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15431:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:115:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15404:142:24"},{"assignments":[5548],"declarations":[{"constant":false,"id":5548,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":5601,"src":"15552:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15552:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5557,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15596:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":5553,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"15608:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5554,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"15626:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5550,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15579:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"15579:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15579:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5549,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15569:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15569:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15552:86:24"},{"assignments":[5559],"declarations":[{"constant":false,"id":5559,"mutability":"mutable","name":"signatory","nodeType":"VariableDeclaration","scope":5601,"src":"15644:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5558,"name":"address","nodeType":"ElementaryTypeName","src":"15644:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5566,"initialValue":{"arguments":[{"id":5561,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"15674:6:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5562,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"15682:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5563,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"15685:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5564,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"15688:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5560,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"15664:9:24","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15664:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15644:46:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5568,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"15704:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15725:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15717:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5569,"name":"address","nodeType":"ElementaryTypeName","src":"15717:7:24","typeDescriptions":{}}},"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15717:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"15704:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4154555245","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15729:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""},"value":"INVALID_SIGNATURE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""}],"id":5567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15696:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15696:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5576,"nodeType":"ExpressionStatement","src":"15696:53:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"15763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15772:20:24","subExpression":{"baseExpression":{"id":5579,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"15772:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5581,"indexExpression":{"id":5580,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"15780:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15772:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15763:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f4e4f4e4345","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15794:15:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99","typeString":"literal_string \"INVALID_NONCE\""},"value":"INVALID_NONCE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99","typeString":"literal_string \"INVALID_NONCE\""}],"id":5577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15755:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15755:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5586,"nodeType":"ExpressionStatement","src":"15755:55:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5588,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15824:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"15824:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5590,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"15843:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15824:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f45585049524154494f4e","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15851:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""},"value":"INVALID_EXPIRATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""}],"id":5587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15816:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15816:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5594,"nodeType":"ExpressionStatement","src":"15816:56:24"},{"expression":{"arguments":[{"id":5596,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"15894:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5597,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"15905:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5598,"name":"delegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"15916:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":5595,"name":"_delegateByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"15878:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15878:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5600,"nodeType":"ExpressionStatement","src":"15878:53:24"}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"14738:477:24","text":" @dev Delegates power from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"},"functionSelector":"f713d8a8","id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"delegateByTypeBySig","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":5602,"src":"15252:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5515,"name":"address","nodeType":"ElementaryTypeName","src":"15252:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5518,"mutability":"mutable","name":"delegationType","nodeType":"VariableDeclaration","scope":5602,"src":"15275:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"},"typeName":{"id":5517,"name":"DelegationType","nodeType":"UserDefinedTypeName","referencedDeclaration":82,"src":"15275:14:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}},"visibility":"internal"},{"constant":false,"id":5520,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":5602,"src":"15310:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"15310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5522,"mutability":"mutable","name":"expiry","nodeType":"VariableDeclaration","scope":5602,"src":"15329:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"15329:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5524,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":5602,"src":"15349:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5523,"name":"uint8","nodeType":"ElementaryTypeName","src":"15349:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5526,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":5602,"src":"15362:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15362:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":5602,"src":"15377:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15377:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15246:144:24"},"returnParameters":{"id":5530,"nodeType":"ParameterList","parameters":[],"src":"15398:0:24"},"scope":5694,"src":"15218:718:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5692,"nodeType":"Block","src":"16475:573:24","statements":[{"assignments":[5619],"declarations":[{"constant":false,"id":5619,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":5692,"src":"16481:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16481:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5629,"initialValue":{"arguments":[{"arguments":[{"id":5623,"name":"DELEGATE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"16523:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5624,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"16542:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5625,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"16553:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5626,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"16560:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5621,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16512:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"16512:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16512:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5620,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16502:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16502:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16481:87:24"},{"assignments":[5631],"declarations":[{"constant":false,"id":5631,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":5692,"src":"16574:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16574:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5640,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16618:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":5636,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"16630:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5637,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"16648:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16601:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"16601:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16601:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5632,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16591:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16591:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16574:86:24"},{"assignments":[5642],"declarations":[{"constant":false,"id":5642,"mutability":"mutable","name":"signatory","nodeType":"VariableDeclaration","scope":5692,"src":"16666:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5641,"name":"address","nodeType":"ElementaryTypeName","src":"16666:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5649,"initialValue":{"arguments":[{"id":5644,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"16696:6:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5645,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"16704:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5646,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"16707:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5647,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"16710:1:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5643,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"16686:9:24","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16686:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16666:46:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"16726:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16747:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16739:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5652,"name":"address","nodeType":"ElementaryTypeName","src":"16739:7:24","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16739:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"16726:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4154555245","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16751:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""},"value":"INVALID_SIGNATURE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88","typeString":"literal_string \"INVALID_SIGNATURE\""}],"id":5650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16718:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16718:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5659,"nodeType":"ExpressionStatement","src":"16718:53:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5661,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"16785:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16794:20:24","subExpression":{"baseExpression":{"id":5662,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"16794:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5664,"indexExpression":{"id":5663,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"16802:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16794:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16785:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f4e4f4e4345","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16816:15:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99","typeString":"literal_string \"INVALID_NONCE\""},"value":"INVALID_NONCE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99","typeString":"literal_string \"INVALID_NONCE\""}],"id":5660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16777:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16777:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"ExpressionStatement","src":"16777:55:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5671,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16846:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"16846:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5673,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"16865:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16846:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f45585049524154494f4e","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16873:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""},"value":"INVALID_EXPIRATION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d","typeString":"literal_string \"INVALID_EXPIRATION\""}],"id":5670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16838:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16838:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5677,"nodeType":"ExpressionStatement","src":"16838:56:24"},{"expression":{"arguments":[{"id":5679,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"16916:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5680,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"16927:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5681,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"16938:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"VOTING_POWER","nodeType":"MemberAccess","src":"16938:27:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":5678,"name":"_delegateByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"16900:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16900:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5684,"nodeType":"ExpressionStatement","src":"16900:66:24"},{"expression":{"arguments":[{"id":5686,"name":"signatory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"16988:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5687,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"16999:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5688,"name":"DelegationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"17010:14:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DelegationType_$82_$","typeString":"type(enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PROPOSITION_POWER","nodeType":"MemberAccess","src":"17010:32:24","typeDescriptions":{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DelegationType_$82","typeString":"enum IGovernancePowerDelegationToken.DelegationType"}],"id":5685,"name":"_delegateByType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"16972:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_DelegationType_$82_$returns$__$","typeString":"function (address,address,enum IGovernancePowerDelegationToken.DelegationType)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16972:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5691,"nodeType":"ExpressionStatement","src":"16972:71:24"}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"15940:393:24","text":" @dev Delegates power from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"},"functionSelector":"c3cda520","id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nodeType":"FunctionDefinition","parameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"delegatee","nodeType":"VariableDeclaration","scope":5693,"src":"16364:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5604,"name":"address","nodeType":"ElementaryTypeName","src":"16364:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5607,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":5693,"src":"16387:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"16387:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5609,"mutability":"mutable","name":"expiry","nodeType":"VariableDeclaration","scope":5693,"src":"16406:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5608,"name":"uint256","nodeType":"ElementaryTypeName","src":"16406:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5611,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":5693,"src":"16426:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5610,"name":"uint8","nodeType":"ElementaryTypeName","src":"16426:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5613,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":5693,"src":"16439:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16439:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5615,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":5693,"src":"16454:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16454:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16358:109:24"},"returnParameters":{"id":5617,"nodeType":"ParameterList","parameters":[],"src":"16475:0:24"},"scope":5694,"src":"16336:712:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5695,"src":"908:16142:24"}],"src":"37:17014:24"},"id":24},"@aave/safety-module/contracts/utils/VersionedInitializable.sol":{"ast":{"absolutePath":"@aave/safety-module/contracts/utils/VersionedInitializable.sol","exportedSymbols":{"VersionedInitializable":[5733]},"id":5734,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":5696,"literals":["solidity","0.7",".5"],"nodeType":"PragmaDirective","src":"37:22:25"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"61:702:25","text":" @title VersionedInitializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors.\n @author Aave, inspired by the OpenZeppelin Initializable contract"},"fullyImplemented":false,"id":5733,"linearizedBaseContracts":[5733],"name":"VersionedInitializable","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":5698,"nodeType":"StructuredDocumentation","src":"809:69:25","text":" @dev Indicates that the contract has been initialized."},"id":5701,"mutability":"mutable","name":"lastInitializedRevision","nodeType":"VariableDeclaration","scope":5733,"src":"881:44:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5699,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"body":{"id":5721,"nodeType":"Block","src":"1034:191:25","statements":[{"assignments":[5705],"declarations":[{"constant":false,"id":5705,"mutability":"mutable","name":"revision","nodeType":"VariableDeclaration","scope":5721,"src":"1040:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5708,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5706,"name":"getRevision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"1059:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1059:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1040:32:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"revision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"1086:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5711,"name":"lastInitializedRevision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"1097:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1086:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1122:48:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4","typeString":"literal_string \"Contract instance has already been initialized\""},"value":"Contract instance has already been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4","typeString":"literal_string \"Contract instance has already been initialized\""}],"id":5709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1078:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1078:93:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5715,"nodeType":"ExpressionStatement","src":"1078:93:25"},{"expression":{"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5716,"name":"lastInitializedRevision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"1178:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5717,"name":"revision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"1204:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1178:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5719,"nodeType":"ExpressionStatement","src":"1178:34:25"},{"id":5720,"nodeType":"PlaceholderStatement","src":"1219:1:25"}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"930:78:25","text":" @dev Modifier to use in the initializer function of a contract."},"id":5722,"name":"initializer","nodeType":"ModifierDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[],"src":"1031:2:25"},"src":"1011:214:25","virtual":false,"visibility":"internal"},{"documentation":{"id":5723,"nodeType":"StructuredDocumentation","src":"1229:117:25","text":"@dev returns the revision number of the contract.\n Needs to be defined in the inherited class as a constant."},"id":5728,"implemented":false,"kind":"function","modifiers":[],"name":"getRevision","nodeType":"FunctionDefinition","parameters":{"id":5724,"nodeType":"ParameterList","parameters":[],"src":"1369:2:25"},"returnParameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5728,"src":"1403:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1402:9:25"},"scope":5733,"src":"1349:63:25","stateMutability":"pure","virtual":true,"visibility":"internal"},{"constant":false,"id":5732,"mutability":"mutable","name":"______gap","nodeType":"VariableDeclaration","scope":5733,"src":"1487:29:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5731,"length":{"hexValue":"3530","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1495:2:25","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1487:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":5734,"src":"764:755:25"}],"src":"37:1483:25"},"id":25},"contracts/hardhat-dependency-compiler/@aave/safety-module/contracts/stake/StakedAave.sol":{"ast":{"absolutePath":"contracts/hardhat-dependency-compiler/@aave/safety-module/contracts/stake/StakedAave.sol","exportedSymbols":{"IERC20":[1724],"StakedAave":[3643],"StakedToken":[4450]},"id":5737,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5735,"literals":["solidity",">","0.0",".0"],"nodeType":"PragmaDirective","src":"39:23:26"},{"absolutePath":"@aave/safety-module/contracts/stake/StakedAave.sol","file":"@aave/safety-module/contracts/stake/StakedAave.sol","id":5736,"nodeType":"ImportDirective","scope":5737,"sourceUnit":3644,"src":"63:60:26","symbolAliases":[],"unitAlias":""}],"src":"39:85:26"},"id":26},"contracts/hardhat-dependency-compiler/@aave/safety-module/contracts/stake/StakedAaveV2.sol":{"ast":{"absolutePath":"contracts/hardhat-dependency-compiler/@aave/safety-module/contracts/stake/StakedAaveV2.sol","exportedSymbols":{"IERC20":[1724],"StakedAaveV2":[3696],"StakedTokenV2":[5694]},"id":5740,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5738,"literals":["solidity",">","0.0",".0"],"nodeType":"PragmaDirective","src":"39:23:27"},{"absolutePath":"@aave/safety-module/contracts/stake/StakedAaveV2.sol","file":"@aave/safety-module/contracts/stake/StakedAaveV2.sol","id":5739,"nodeType":"ImportDirective","scope":5740,"sourceUnit":3697,"src":"63:62:27","symbolAliases":[],"unitAlias":""}],"src":"39:87:27"},"id":27}},"contracts":{"@aave/aave-token/contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol":{"IGovernancePowerDelegationToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegatedPowerChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"delegateByType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegator","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getDelegateeByType","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"DelegateChanged(address,address,uint8)":{"details":"emitted when a user delegates to another","params":{"delegatee":"the delegatee","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*","delegator":"the delegator"}},"DelegatedPowerChanged(address,uint256,uint8)":{"details":"emitted when an action changes the delegated power of a user","params":{"amount":"the amount of delegated power for the user","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*","user":"the user which delegated power has changed"}}},"kind":"dev","methods":{"delegate(address)":{"details":"delegates all the powers to a specific user","params":{"delegatee":"the user to which the power will be delegated*"}},"delegateByType(address,uint8)":{"details":"delegates the specific power to a delegatee","params":{"delegatee":"the user which delegated power has changed","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"}},"getDelegateeByType(address,uint8)":{"details":"returns the delegatee of an user","params":{"delegator":"the address of the delegator*"}},"getPowerAtBlock(address,uint256,uint8)":{"details":"returns the delegated power of a user at a certain block","params":{"user":"the user*"}},"getPowerCurrent(address,uint8)":{"details":"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot","params":{"user":"the user*"}},"totalSupplyAt(uint256)":{"details":"returns the total supply at a certain block number*"}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateByType(address,uint8)":"dc937e1c","getDelegateeByType(address,uint8)":"6f50458d","getPowerAtBlock(address,uint256,uint8)":"c2ffbb91","getPowerCurrent(address,uint8)":"b2f4201d","totalSupplyAt(uint256)":"981b24d0"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegatedPowerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"delegateByType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getDelegateeByType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,uint8)\":{\"details\":\"emitted when a user delegates to another\",\"params\":{\"delegatee\":\"the delegatee\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\",\"delegator\":\"the delegator\"}},\"DelegatedPowerChanged(address,uint256,uint8)\":{\"details\":\"emitted when an action changes the delegated power of a user\",\"params\":{\"amount\":\"the amount of delegated power for the user\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\",\"user\":\"the user which delegated power has changed\"}}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"delegates all the powers to a specific user\",\"params\":{\"delegatee\":\"the user to which the power will be delegated*\"}},\"delegateByType(address,uint8)\":{\"details\":\"delegates the specific power to a delegatee\",\"params\":{\"delegatee\":\"the user which delegated power has changed\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\"}},\"getDelegateeByType(address,uint8)\":{\"details\":\"returns the delegatee of an user\",\"params\":{\"delegator\":\"the address of the delegator*\"}},\"getPowerAtBlock(address,uint256,uint8)\":{\"details\":\"returns the delegated power of a user at a certain block\",\"params\":{\"user\":\"the user*\"}},\"getPowerCurrent(address,uint8)\":{\"details\":\"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot\",\"params\":{\"user\":\"the user*\"}},\"totalSupplyAt(uint256)\":{\"details\":\"returns the total supply at a certain block number*\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol\":\"IGovernancePowerDelegationToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IGovernancePowerDelegationToken {\\n  \\n  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\\n\\n  /**\\n   * @dev emitted when a user delegates to another\\n   * @param delegator the delegator\\n   * @param delegatee the delegatee\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegateChanged(\\n    address indexed delegator,\\n    address indexed delegatee,\\n    DelegationType delegationType\\n  );\\n\\n  /**\\n   * @dev emitted when an action changes the delegated power of a user\\n   * @param user the user which delegated power has changed\\n   * @param amount the amount of delegated power for the user\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external virtual;\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (address);\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external virtual view returns (uint256);\\n \\n  /**\\n  * @dev returns the total supply at a certain block number\\n  **/\\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\\n}\",\"keccak256\":\"0x82d63f935980041a1fa0cd3a166d5b26695f114214a6e26c01dbd9df4c17400b\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/aave-token/contracts/open-zeppelin/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206505c5e037a63325a92618b1c1726b23156c209fbf11525d22456d77c877d61264736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x5C5E037A633 0x25 0xA9 0x26 XOR 0xB1 0xC1 PUSH19 0x6B23156C209FBF11525D22456D77C877D61264 PUSH20 0x6F6C634300070500330000000000000000000000 ","sourceMap":"93:2512:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206505c5e037a63325a92618b1c1726b23156c209fbf11525d22456d77c877d61264736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x5C5E037A633 0x25 0xA9 0x26 XOR 0xB1 0xC1 PUSH19 0x6B23156C209FBF11525D22456D77C877D61264 PUSH20 0x6F6C634300070500330000000000000000000000 ","sourceMap":"93:2512:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\",\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/aave-token/contracts/open-zeppelin/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/aave-token/contracts/open-zeppelin/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000e9738038062000e97833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250508251620001b491506003906020850190620001e0565b508051620001ca906004906020840190620001e0565b50506005805460ff19166012179055506200028c565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000218576000855562000263565b82601f106200023357805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026357825182559160200191906001019062000246565b506200027192915062000275565b5090565b5b8082111562000271576000815560010162000276565b610bfb806200029c6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610405565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561040b565b6101fd6104ac565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b5565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610510565b6100d6610538565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b7565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561062c565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610640565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103fc6103f5610678565b848461067c565b50600192915050565b60025490565b60006104188484846107c3565b6104a284610424610678565b61049d85604051806060016040528060288152602001610b306028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602052604081209061046f610678565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610993565b61067c565b5060019392505050565b60055460ff1690565b60006103fc6104c2610678565b8461049d85600160006104d3610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610a44565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b60006103fc6105c4610678565b8461049d85604051806060016040528060258152602001610ba160259139600160006105ee610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610993565b60006103fc610639610678565b84846107c3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166106e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b7d6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610754576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae86022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610b586025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ac56023913960400191505060405180910390fd5b6108a6838383610abf565b6108f081604051806060016040528060268152602001610b0a6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610993565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461092c9082610a44565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a015781810151838201526020016109e9565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ab857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220380d1d6029d3767d807be7ca3d022c47244c91001e586d435abc7eb21b19907a64736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE97 CODESIZE SUB DUP1 PUSH3 0xE97 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH3 0x1B4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x28C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x218 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x233 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x263 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x246 JUMP JUMPDEST POP PUSH3 0x271 SWAP3 SWAP2 POP PUSH3 0x275 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x271 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x276 JUMP JUMPDEST PUSH2 0xBFB DUP1 PUSH3 0x29C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x40B JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x640 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x3F5 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418 DUP5 DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x4A2 DUP5 PUSH2 0x424 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB30 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x46F PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x4C2 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x5C4 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5EE PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x639 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB7D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB58 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAC5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0A PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x92C SWAP1 DUP3 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA01 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220380D SAR PUSH1 0x29 0xD3 PUSH23 0x7D807BE7CA3D022C47244C91001E586D435ABC7EB21B19 SWAP1 PUSH27 0x64736F6C6343000705003300000000000000000000000000000000 ","sourceMap":"1330:9448:4:-:0;;;2000:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2000:141:4;;;;;;;;;;-1:-1:-1;2000:141:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2000:141:4;;;;;;;;;;-1:-1:-1;2000:141:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2000:141:4;;-1:-1:-1;;2072:12:4;;;;-1:-1:-1;2072:5:4;;:12;;;;;:::i;:::-;-1:-1:-1;2094:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2120:9:4;:14;;-1:-1:-1;;2120:14:4;2132:2;2120:14;;;-1:-1:-1;1330:9448:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1330:9448:4;;;-1:-1:-1;1330:9448:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610405565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561040b565b6101fd6104ac565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b5565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610510565b6100d6610538565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b7565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561062c565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610640565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103fc6103f5610678565b848461067c565b50600192915050565b60025490565b60006104188484846107c3565b6104a284610424610678565b61049d85604051806060016040528060288152602001610b306028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602052604081209061046f610678565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610993565b61067c565b5060019392505050565b60055460ff1690565b60006103fc6104c2610678565b8461049d85600160006104d3610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610a44565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b60006103fc6105c4610678565b8461049d85604051806060016040528060258152602001610ba160259139600160006105ee610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610993565b60006103fc610639610678565b84846107c3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166106e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b7d6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610754576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae86022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610b586025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ac56023913960400191505060405180910390fd5b6108a6838383610abf565b6108f081604051806060016040528060268152602001610b0a6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610993565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461092c9082610a44565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a015781810151838201526020016109e9565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ab857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220380d1d6029d3767d807be7ca3d022c47244c91001e586d435abc7eb21b19907a64736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x40B JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x640 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x3F5 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418 DUP5 DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x4A2 DUP5 PUSH2 0x424 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB30 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x46F PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x4C2 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x5C4 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5EE PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x639 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB7D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB58 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAC5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0A PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x92C SWAP1 DUP3 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA01 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220380D SAR PUSH1 0x29 0xD3 PUSH23 0x7D807BE7CA3D022C47244C91001E586D435ABC7EB21B19 SWAP1 PUSH27 0x64736F6C6343000705003300000000000000000000000000000000 ","sourceMap":"1330:9448:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4242:166;;;;;;;;;;;;;;;;-1:-1:-1;4242:166:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3249:98;;;:::i;:::-;;;;;;;;;;;;;;;;4868:317;;;;;;;;;;;;;;;;-1:-1:-1;4868:317:4;;;;;;;;;;;;;;;;;;:::i;3108:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5580:215;;;;;;;;;;;;;;;;-1:-1:-1;5580:215:4;;;;;;;;;:::i;3405:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3405:117:4;;;;:::i;2400:85::-;;;:::i;6282:266::-;;;;;;;;;;;;;;;;-1:-1:-1;6282:266:4;;;;;;;;;:::i;3725:172::-;;;;;;;;;;;;;;;;-1:-1:-1;3725:172:4;;;;;;;;;:::i;3955:149::-;;;;;;;;;;;;;;;;-1:-1:-1;3955:149:4;;;;;;;;;;;:::i;2206:81::-;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2243:13;;2268:12;;2275:5;;2268:12;;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81;:::o;4242:166::-;4325:4;4341:39;4350:12;:10;:12::i;:::-;4364:7;4373:6;4341:8;:39::i;:::-;-1:-1:-1;4397:4:4;4242:166;;;;:::o;3249:98::-;3328:12;;3249:98;:::o;4868:317::-;4974:4;4990:36;5000:6;5008:9;5019:6;4990:9;:36::i;:::-;5036:121;5045:6;5053:12;:10;:12::i;:::-;5067:89;5105:6;5067:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5087:12;:10;:12::i;:::-;5067:33;;;;;;;;;;;;;-1:-1:-1;5067:33:4;;;:89;:37;:89::i;:::-;5036:8;:121::i;:::-;-1:-1:-1;5174:4:4;4868:317;;;;;:::o;3108:81::-;3173:9;;;;3108:81;:::o;5580:215::-;5668:4;5684:83;5693:12;:10;:12::i;:::-;5707:7;5716:50;5755:10;5716:11;:25;5728:12;:10;:12::i;:::-;5716:25;;;;;;;;;;;;;;;;;;-1:-1:-1;5716:25:4;;;:34;;;;;;;;;;;:38;:50::i;3405:117::-;3497:18;;3471:7;3497:18;;;;;;;;;;;;3405:117::o;2400:85::-;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:13;;2464:14;;2471:7;;2464:14;;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;6282:266;6375:4;6391:129;6400:12;:10;:12::i;:::-;6414:7;6423:96;6462:15;6423:96;;;;;;;;;;;;;;;;;:11;:25;6435:12;:10;:12::i;:::-;6423:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3725:172::-;3811:4;3827:42;3837:12;:10;:12::i;:::-;3851:9;3862:6;3827:9;:42::i;3955:149::-;4070:18;;;;4044:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3955:149::o;590:104:3:-;677:10;590:104;:::o;9346:340:4:-;9447:19;;;9439:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9525:21;;;9517:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9596:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9647:32;;;;;;;;;;;;;;;;;9346:340;;;:::o;7022:530::-;7127:20;;;7119:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7207:23;;;7199:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7281:47;7302:6;7310:9;7321:6;7281:20;:47::i;:::-;7359:71;7381:6;7359:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7339:17;;;;:9;:17;;;;;;;;;;;:91;;;;7463:20;;;;;;;:32;;7488:6;7463:24;:32::i;:::-;7440:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7510:35;;;;;;;7440:20;;7510:35;;;;;;;;;;;;;7022:530;;;:::o;1692:187:5:-;1778:7;1813:12;1805:6;;;;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:5;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:5:o;10684:92:4:-;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"613400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"1292","approve(address,uint256)":"infinite","balanceOf(address)":"1166","decimals()":"1080","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"1021","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_setupDecimals(uint8)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/open-zeppelin/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\",\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\"},\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\",\"keccak256\":\"0x291b3f5f85cf723a515eccae8471ac99b93817d8d8f7151a5a99e13c09587e33\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\"}},\"version\":1}","storageLayout":{"storage":[{"astId":263,"contract":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":269,"contract":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":271,"contract":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":273,"contract":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":275,"contract":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":277,"contract":"@aave/aave-token/contracts/open-zeppelin/ERC20.sol:ERC20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220605df6932b5ff51f3235c2ba87ea7ca2b92a260d8ef61d3852ea0e64f385cc8f64736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x5D 0xF6 SWAP4 0x2B 0x5F CREATE2 0x1F ORIGIN CALLDATALOAD 0xC2 0xBA DUP8 0xEA PUSH29 0xA2B92A260D8EF61D3852EA0E64F385CC8F64736F6C6343000705003300 ","sourceMap":"589:4588:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220605df6932b5ff51f3235c2ba87ea7ca2b92a260d8ef61d3852ea0e64f385cc8f64736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x5D 0xF6 SWAP4 0x2B 0x5F CREATE2 0x1F ORIGIN CALLDATALOAD 0xC2 0xBA DUP8 0xEA PUSH29 0xA2B92A260D8EF61D3852EA0E64F385CC8F64736F6C6343000705003300 ","sourceMap":"589:4588:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol":{"GovernancePowerDelegationERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegatedPowerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DELEGATE_BY_TYPE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELEGATE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"delegateByType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegator","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getDelegateeByType","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{"details":"delegates all the powers to a specific user","params":{"delegatee":"the user to which the power will be delegated*"}},"delegateByType(address,uint8)":{"details":"delegates one specific power to a delegatee","params":{"delegatee":"the user which delegated power has changed","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"}},"getDelegateeByType(address,uint8)":{"details":"returns the delegatee of an user","params":{"delegator":"the address of the delegator*"}},"getPowerAtBlock(address,uint256,uint8)":{"details":"returns the delegated power of a user at a certain block","params":{"user":"the user*"}},"getPowerCurrent(address,uint8)":{"details":"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot","params":{"user":"the user*"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"totalSupplyAt(uint256)":{"details":"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*"},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DELEGATE_BY_TYPE_TYPEHASH()":"aa9fbe02","DELEGATE_TYPEHASH()":"41cbf54a","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateByType(address,uint8)":"dc937e1c","getDelegateeByType(address,uint8)":"6f50458d","getPowerAtBlock(address,uint256,uint8)":"c2ffbb91","getPowerCurrent(address,uint8)":"b2f4201d","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegatedPowerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATE_BY_TYPE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"delegateByType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getDelegateeByType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"delegates all the powers to a specific user\",\"params\":{\"delegatee\":\"the user to which the power will be delegated*\"}},\"delegateByType(address,uint8)\":{\"details\":\"delegates one specific power to a delegatee\",\"params\":{\"delegatee\":\"the user which delegated power has changed\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\"}},\"getDelegateeByType(address,uint8)\":{\"details\":\"returns the delegatee of an user\",\"params\":{\"delegator\":\"the address of the delegator*\"}},\"getPowerAtBlock(address,uint256,uint8)\":{\"details\":\"returns the delegated power of a user at a certain block\",\"params\":{\"user\":\"the user*\"}},\"getPowerCurrent(address,uint8)\":{\"details\":\"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot\",\"params\":{\"user\":\"the user*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DELEGATE_BY_TYPE_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"}},\"notice\":\"implementation of the AAVE token contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol\":\"GovernancePowerDelegationERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IGovernancePowerDelegationToken {\\n  \\n  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\\n\\n  /**\\n   * @dev emitted when a user delegates to another\\n   * @param delegator the delegator\\n   * @param delegatee the delegatee\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegateChanged(\\n    address indexed delegator,\\n    address indexed delegatee,\\n    DelegationType delegationType\\n  );\\n\\n  /**\\n   * @dev emitted when an action changes the delegated power of a user\\n   * @param user the user which delegated power has changed\\n   * @param amount the amount of delegated power for the user\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external virtual;\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (address);\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external virtual view returns (uint256);\\n \\n  /**\\n  * @dev returns the total supply at a certain block number\\n  **/\\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\\n}\",\"keccak256\":\"0x82d63f935980041a1fa0cd3a166d5b26695f114214a6e26c01dbd9df4c17400b\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\",\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\"},\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\",\"keccak256\":\"0x291b3f5f85cf723a515eccae8471ac99b93817d8d8f7151a5a99e13c09587e33\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\"},\"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {SafeMath} from '../../open-zeppelin/SafeMath.sol';\\nimport {ERC20} from '../../open-zeppelin/ERC20.sol';\\nimport {\\n  IGovernancePowerDelegationToken\\n} from '../../interfaces/IGovernancePowerDelegationToken.sol';\\n\\n/**\\n * @notice implementation of the AAVE token contract\\n * @author Aave\\n */\\nabstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {\\n  using SafeMath for uint256;\\n  /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(\\n    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  bytes32 public constant DELEGATE_TYPEHASH = keccak256(\\n    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  /// @dev snapshot of a value on a specific block, used for votes\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  /**\\n   * @dev delegates one specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external override {\\n    _delegateByType(msg.sender, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external override {\\n    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);\\n    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);\\n  }\\n\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (address)\\n  {\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    return _getDelegatee(delegator, delegates);\\n  }\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (uint256)\\n  {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);\\n  }\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external override view returns (uint256) {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);\\n  }\\n\\n  /**\\n   * @dev returns the total supply at a certain block number\\n   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum\\n   * In this initial implementation with no AAVE minting, simply returns the current supply\\n   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future\\n   **/\\n  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {\\n    return super.totalSupply();\\n  }\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _delegateByType(\\n    address delegator,\\n    address delegatee,\\n    DelegationType delegationType\\n  ) internal {\\n    require(delegatee != address(0), 'INVALID_DELEGATEE');\\n\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    uint256 delegatorBalance = balanceOf(delegator);\\n\\n    address previousDelegatee = _getDelegatee(delegator, delegates);\\n\\n    delegates[delegator] = delegatee;\\n\\n    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);\\n    emit DelegateChanged(delegator, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev moves delegated power from one user to another\\n   * @param from the user from which delegated power is moved\\n   * @param to the user that will receive the delegated power\\n   * @param amount the amount of delegated power to be moved\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _moveDelegatesByType(\\n    address from,\\n    address to,\\n    uint256 amount,\\n    DelegationType delegationType\\n  ) internal {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    if (from != address(0)) {\\n      uint256 previous = 0;\\n      uint256 fromSnapshotsCount = snapshotsCounts[from];\\n\\n      if (fromSnapshotsCount != 0) {\\n        previous = snapshots[from][fromSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(from);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        from,\\n        uint128(previous),\\n        uint128(previous.sub(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(from, previous.sub(amount), delegationType);\\n    }\\n    if (to != address(0)) {\\n      uint256 previous = 0;\\n      uint256 toSnapshotsCount = snapshotsCounts[to];\\n      if (toSnapshotsCount != 0) {\\n        previous = snapshots[to][toSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(to);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        to,\\n        uint128(previous),\\n        uint128(previous.add(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(to, previous.add(amount), delegationType);\\n    }\\n  }\\n\\n  /**\\n   * @dev searches a snapshot by block number. Uses binary search.\\n   * @param snapshots the snapshots mapping\\n   * @param snapshotsCounts the number of snapshots\\n   * @param user the user for which the snapshot is being searched\\n   * @param blockNumber the block number being searched\\n   **/\\n  function _searchByBlockNumber(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address user,\\n    uint256 blockNumber\\n  ) internal view returns (uint256) {\\n    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');\\n\\n    uint256 snapshotsCount = snapshotsCounts[user];\\n\\n    if (snapshotsCount == 0) {\\n      return balanceOf(user);\\n    }\\n\\n    // First check most recent balance\\n    if (snapshots[user][snapshotsCount - 1].blockNumber <= blockNumber) {\\n      return snapshots[user][snapshotsCount - 1].value;\\n    }\\n\\n    // Next check implicit zero balance\\n    if (snapshots[user][0].blockNumber > blockNumber) {\\n      return 0;\\n    }\\n\\n    uint256 lower = 0;\\n    uint256 upper = snapshotsCount - 1;\\n    while (upper > lower) {\\n      uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n      Snapshot memory snapshot = snapshots[user][center];\\n      if (snapshot.blockNumber == blockNumber) {\\n        return snapshot.value;\\n      } else if (snapshot.blockNumber < blockNumber) {\\n        lower = center;\\n      } else {\\n        upper = center - 1;\\n      }\\n    }\\n    return snapshots[user][lower].value;\\n  }\\n\\n  /**\\n   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type\\n   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,\\n   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts\\n   * who inherit from this to provide access to the delegation data by overriding this method.\\n   * @param delegationType the type of delegation\\n   **/\\n  function _getDelegationDataByType(DelegationType delegationType)\\n    internal\\n    virtual\\n    view\\n    returns (\\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\\n      mapping(address => uint256) storage, //snapshots count\\n      mapping(address => address) storage //delegatees list\\n    );\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerSnapshotsCount = snapshotsCounts[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerSnapshotsCount != 0 &&\\n      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);\\n      snapshotsCounts[owner] = ownerSnapshotsCount + 1;\\n    }\\n  }\\n\\n  /**\\n   * @dev returns the user delegatee. If a user never performed any delegation,\\n   * his delegated address will be 0x0. In that case we simply return the user itself\\n   * @param delegator the address of the user for which return the delegatee\\n   * @param delegates the array of delegates for a particular type of delegation\\n   **/\\n  function _getDelegatee(address delegator, mapping(address => address) storage delegates)\\n    internal\\n    view\\n    returns (address)\\n  {\\n    address previousDelegatee = delegates[delegator];\\n\\n    if (previousDelegatee == address(0)) {\\n      return delegator;\\n    }\\n\\n    return previousDelegatee;\\n  }\\n}\\n\",\"keccak256\":\"0x866ad035070a7ec3551303a27b2089b372cb4ac393c985d6896678cad8be6662\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":263,"contract":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:GovernancePowerDelegationERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":269,"contract":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:GovernancePowerDelegationERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":271,"contract":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:GovernancePowerDelegationERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":273,"contract":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:GovernancePowerDelegationERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":275,"contract":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:GovernancePowerDelegationERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":277,"contract":"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol:GovernancePowerDelegationERC20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"DELEGATE_BY_TYPE_TYPEHASH()":{"notice":"The EIP-712 typehash for the delegation struct used by the contract"}},"notice":"implementation of the AAVE token contract","version":1}}},"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol":{"IAaveDistributionManager":{"abi":[{"inputs":[{"components":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"address","name":"underlyingAsset","type":"address"}],"internalType":"struct DistributionTypes.AssetConfigInput[]","name":"assetsConfigInput","type":"tuple[]"}],"name":"configureAssets","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"configureAssets((uint128,uint256,address)[])":"b2a5dbfa"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"}],\"internalType\":\"struct DistributionTypes.AssetConfigInput[]\",\"name\":\"assetsConfigInput\",\"type\":\"tuple[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":\"IAaveDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external;\\n}\\n\",\"keccak256\":\"0xb9f57138a1840eea2b01e686f7fcfc296a631ba602c9404b70752ecb8f86f8db\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol":{"IERC20Detailed":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for ERC20 including metadata*","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for ERC20 including metadata*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":\"IERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/interfaces/IStakedAave.sol":{"IStakedAave":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"claimRewards(address,uint256)":"9a99b4f0","cooldown()":"787a08a6","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/interfaces/IStakedAave.sol\":\"IStakedAave\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IStakedAave.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedAave {\\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x757fb8a77394148520347549d7d339f5902e4beb113db528788e2d44b0bb7289\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/interfaces/ITransferHook.sol":{"ITransferHook":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"onTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onTransfer(address,address,uint256)":"4a393149"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":\"ITransferHook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/lib/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208886656ff88131aeafb32d81527c30dd2d2151fec8c81fa0a7951917e4f92e0664736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP7 PUSH6 0x6FF88131AEAF 0xB3 0x2D DUP2 MSTORE PUSH29 0x30DD2D2151FEC8C81FA0A7951917E4F92E0664736F6C63430007050033 ","sourceMap":"187:2398:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208886656ff88131aeafb32d81527c30dd2d2151fec8c81fa0a7951917e4f92e0664736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP7 PUSH6 0x6FF88131AEAF 0xB3 0x2D DUP2 MSTORE PUSH29 0x30DD2D2151FEC8C81FA0A7951917E4F92E0664736F6C63430007050033 ","sourceMap":"187:2398:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/lib/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"From https://github.com/OpenZeppelin/openzeppelin-contracts Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with GSN meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with GSN meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/lib/DistributionTypes.sol":{"DistributionTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220108fd81dc5362d0cf258a01424a7ae5dce3981de35045ab983b107ebc90568bd64736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT DUP16 0xD8 SAR 0xC5 CALLDATASIZE 0x2D 0xC CALLCODE PC LOG0 EQ 0x24 0xA7 0xAE 0x5D 0xCE CODECOPY DUP2 0xDE CALLDATALOAD DIV GAS 0xB9 DUP4 0xB1 SMOD 0xEB 0xC9 SDIV PUSH9 0xBD64736F6C63430007 SDIV STOP CALLER ","sourceMap":"95:257:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220108fd81dc5362d0cf258a01424a7ae5dce3981de35045ab983b107ebc90568bd64736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT DUP16 0xD8 SAR 0xC5 CALLDATASIZE 0x2D 0xC CALLCODE PC LOG0 EQ 0x24 0xA7 0xAE 0x5D 0xCE CODECOPY DUP2 0xDE CALLDATALOAD DIV GAS 0xB9 DUP4 0xB1 SMOD 0xEB 0xC9 SDIV PUSH9 0xBD64736F6C63430007 SDIV STOP CALLER ","sourceMap":"95:257:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":\"DistributionTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/lib/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"returns the allowance of spender on the tokens owned by owner","params":{"owner":"the owner of the tokens","spender":"the user allowed to spend the owner's tokens"},"returns":{"_0":"the amount of owner's tokens spender is allowed to spend*"}},"approve(address,uint256)":{"details":"allows spender to spend the tokens owned by msg.sender","params":{"spender":"the user allowed to spend msg.sender tokens"},"returns":{"_0":"true*"}},"balanceOf(address)":{"returns":{"_0":"the balance of the token*"}},"decimals()":{"returns":{"_0":"the decimals of the token*"}},"decreaseAllowance(address,uint256)":{"details":"decreases the allowance of spender to spend msg.sender tokens","params":{"spender":"the user allowed to spend on behalf of msg.sender","subtractedValue":"the amount being subtracted to the allowance"},"returns":{"_0":"true*"}},"increaseAllowance(address,uint256)":{"details":"increases the allowance of spender to spend msg.sender tokens","params":{"addedValue":"the amount being added to the allowance","spender":"the user allowed to spend on behalf of msg.sender"},"returns":{"_0":"true*"}},"name()":{"returns":{"_0":"the name of the token*"}},"symbol()":{"returns":{"_0":"the symbol of the token*"}},"totalSupply()":{"returns":{"_0":"the total supply of the token*"}},"transfer(address,uint256)":{"details":"executes a transfer of tokens from msg.sender to recipient","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}},"transferFrom(address,address,uint256)":{"details":"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens","sender":"the owner of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}}},"title":"ERC20","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ea438038062000ea4833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040526020908101518551909350620001b99250600391860190620001ed565b508151620001cf906004906020850190620001ed565b506005805460ff191660ff9290921691909117905550620002999050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000225576000855562000270565b82601f106200024057805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200027057825182559160200191906001019062000253565b506200027e92915062000282565b5090565b5b808211156200027e576000815560010162000283565b610bfb80620002a96000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610405565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561040b565b6101fd6104ac565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b5565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610510565b6100d6610538565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b7565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561062c565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610640565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103fc6103f5610678565b848461067c565b50600192915050565b60025490565b60006104188484846107c3565b6104a284610424610678565b61049d85604051806060016040528060288152602001610b306028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602052604081209061046f610678565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610993565b61067c565b5060019392505050565b60055460ff1690565b60006103fc6104c2610678565b8461049d85600160006104d3610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610a44565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b60006103fc6105c4610678565b8461049d85604051806060016040528060258152602001610ba160259139600160006105ee610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610993565b60006103fc610639610678565b84846107c3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166106e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b7d6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610754576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae86022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610b586025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ac56023913960400191505060405180910390fd5b6108a6838383610abf565b6108f081604051806060016040528060268152602001610b0a6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610993565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461092c9082610a44565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a015781810151838201526020016109e9565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ab857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b681bd40cf5d64f528281d4f554ac65d7533d8c0467030195d711f50814b3af964736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEA4 CODESIZE SUB DUP1 PUSH3 0xEA4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP6 MLOAD SWAP1 SWAP4 POP PUSH3 0x1B9 SWAP3 POP PUSH1 0x3 SWAP2 DUP7 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x1CF SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x299 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x225 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x270 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x240 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x270 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x270 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x270 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x253 JUMP JUMPDEST POP PUSH3 0x27E SWAP3 SWAP2 POP PUSH3 0x282 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x27E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x283 JUMP JUMPDEST PUSH2 0xBFB DUP1 PUSH3 0x2A9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x40B JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x640 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x3F5 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418 DUP5 DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x4A2 DUP5 PUSH2 0x424 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB30 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x46F PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x4C2 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x5C4 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5EE PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x639 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB7D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB58 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAC5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0A PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x92C SWAP1 DUP3 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA01 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220B681 0xBD BLOCKHASH 0xCF 0x5D PUSH5 0xF528281D4F SSTORE 0x4A 0xC6 0x5D PUSH22 0x33D8C0467030195D711F50814B3AF964736F6C634300 SMOD SDIV STOP CALLER ","sourceMap":"335:6044:15:-:0;;;650:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;650:164:15;;;;;;;;;;-1:-1:-1;650:164:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;650:164:15;;;;;;;;;;-1:-1:-1;650:164:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;650:164:15;;;;;;;749:12;;650:164;;-1:-1:-1;749:12:15;;-1:-1:-1;749:5:15;;:12;;;;:::i;:::-;-1:-1:-1;767:16:15;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;789:9:15;:20;;-1:-1:-1;;789:20:15;;;;;;;;;;;;-1:-1:-1;335:6044:15;;-1:-1:-1;335:6044:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;335:6044:15;;;-1:-1:-1;335:6044:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610405565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561040b565b6101fd6104ac565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b5565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610510565b6100d6610538565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b7565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561062c565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610640565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103fc6103f5610678565b848461067c565b50600192915050565b60025490565b60006104188484846107c3565b6104a284610424610678565b61049d85604051806060016040528060288152602001610b306028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602052604081209061046f610678565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610993565b61067c565b5060019392505050565b60055460ff1690565b60006103fc6104c2610678565b8461049d85600160006104d3610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610a44565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b60006103fc6105c4610678565b8461049d85604051806060016040528060258152602001610ba160259139600160006105ee610678565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610993565b60006103fc610639610678565b84846107c3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166106e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b7d6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610754576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ae86022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610b586025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ac56023913960400191505060405180910390fd5b6108a6838383610abf565b6108f081604051806060016040528060268152602001610b0a6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610993565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461092c9082610a44565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a015781810151838201526020016109e9565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610ab857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b681bd40cf5d64f528281d4f554ac65d7533d8c0467030195d711f50814b3af964736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x40B JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x640 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x3F5 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418 DUP5 DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x4A2 DUP5 PUSH2 0x424 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB30 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x46F PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x4C2 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x5C4 PUSH2 0x678 JUMP JUMPDEST DUP5 PUSH2 0x49D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5EE PUSH2 0x678 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x639 PUSH2 0x678 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB7D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB58 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAC5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0A PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x92C SWAP1 DUP3 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA01 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220B681 0xBD BLOCKHASH 0xCF 0x5D PUSH5 0xF528281D4F SSTORE 0x4A 0xC6 0x5D PUSH22 0x33D8C0467030195D711F50814B3AF964736F6C634300 SMOD SDIV STOP CALLER ","sourceMap":"335:6044:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:156;;;;;;;;;;;;;;;;-1:-1:-1;2561:156:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1292:92;;;:::i;:::-;;;;;;;;;;;;;;;;3044:343;;;;;;;;;;;;;;;;-1:-1:-1;3044:343:15;;;;;;;;;;;;;;;;;;:::i;1148:84::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3627:205;;;;;;;;;;;;;;;;-1:-1:-1;3627:205:15;;;;;;;;;:::i;1439:111::-;;;;;;;;;;;;;;;;-1:-1:-1;1439:111:15;;;;:::i;1004:88::-;;;:::i;4082:318::-;;;;;;;;;;;;;;;;-1:-1:-1;4082:318:15;;;;;;;;;:::i;1804:162::-;;;;;;;;;;;;;;;;-1:-1:-1;1804:162:15;;;;;;;;;:::i;2232:165::-;;;;;;;;;;;;;;;;-1:-1:-1;2232:165:15;;;;;;;;;;;:::i;866:84::-;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:13;;933:12;;940:5;;933:12;;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84;:::o;2561:156::-;2644:4;2656:39;2665:12;:10;:12::i;:::-;2679:7;2688:6;2656:8;:39::i;:::-;-1:-1:-1;2708:4:15;2561:156;;;;:::o;1292:92::-;1367:12;;1292:92;:::o;3044:343::-;3166:4;3178:36;3188:6;3196:9;3207:6;3178:9;:36::i;:::-;3220:145;3236:6;3250:12;:10;:12::i;:::-;3270:89;3308:6;3270:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3290:12;:10;:12::i;:::-;3270:33;;;;;;;;;;;;;-1:-1:-1;3270:33:15;;;:89;:37;:89::i;:::-;3220:8;:145::i;:::-;-1:-1:-1;3378:4:15;3044:343;;;;;:::o;1148:84::-;1218:9;;;;1148:84;:::o;3627:205::-;3715:4;3727:83;3736:12;:10;:12::i;:::-;3750:7;3759:50;3798:10;3759:11;:25;3771:12;:10;:12::i;:::-;3759:25;;;;;;;;;;;;;;;;;;-1:-1:-1;3759:25:15;;;:34;;;;;;;;;;;:38;:50::i;1439:111::-;1527:18;;1505:7;1527:18;;;;;;;;;;;;1439:111::o;1004:88::-;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:13;;1073:14;;1080:7;;1073:14;;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;4082:318;4187:4;4201:177;4217:12;:10;:12::i;:::-;4237:7;4252:120;4300:15;4252:120;;;;;;;;;;;;;;;;;:11;:25;4264:12;:10;:12::i;:::-;4252:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4252:25:15;;;:34;;;;;;;;;;;:120;:38;:120::i;1804:162::-;1890:4;1902:42;1912:12;:10;:12::i;:::-;1926:9;1937:6;1902:9;:42::i;2232:165::-;2365:18;;;;2341:7;2365:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2232:165::o;651:98:13:-;734:10;651:98;:::o;5672:338:15:-;5785:19;;;5777:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5859:21;;;5851:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5926:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;5973:32;;;;;;;;;;;;;;;;;5672:338;;;:::o;4404:520::-;4521:20;;;4513:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:23;;;4589:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4667:47;4688:6;4696:9;4707:6;4667:20;:47::i;:::-;4741:71;4763:6;4741:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;4721:17;;;;:9;:17;;;;;;;;;;;:91;;;;4841:20;;;;;;;:32;;4866:6;4841:24;:32::i;:::-;4818:20;;;;:9;:20;;;;;;;;;;;;:55;;;;4884:35;;;;;;;4818:20;;4884:35;;;;;;;;;;;;;4404:520;;;:::o;1711:189:19:-;1813:7;1844:12;1836:6;;;;1828:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1875:5:19;;;1711:189::o;913:162::-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;6270:107:15:-;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"613400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"1292","approve(address,uint256)":"infinite","balanceOf(address)":"1166","decimals()":"1080","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"1021","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_setDecimals(uint8)":"infinite","_setName(string memory)":"infinite","_setSymbol(string memory)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"returns the allowance of spender on the tokens owned by owner\",\"params\":{\"owner\":\"the owner of the tokens\",\"spender\":\"the user allowed to spend the owner's tokens\"},\"returns\":{\"_0\":\"the amount of owner's tokens spender is allowed to spend*\"}},\"approve(address,uint256)\":{\"details\":\"allows spender to spend the tokens owned by msg.sender\",\"params\":{\"spender\":\"the user allowed to spend msg.sender tokens\"},\"returns\":{\"_0\":\"true*\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the balance of the token*\"}},\"decimals()\":{\"returns\":{\"_0\":\"the decimals of the token*\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"decreases the allowance of spender to spend msg.sender tokens\",\"params\":{\"spender\":\"the user allowed to spend on behalf of msg.sender\",\"subtractedValue\":\"the amount being subtracted to the allowance\"},\"returns\":{\"_0\":\"true*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"increases the allowance of spender to spend msg.sender tokens\",\"params\":{\"addedValue\":\"the amount being added to the allowance\",\"spender\":\"the user allowed to spend on behalf of msg.sender\"},\"returns\":{\"_0\":\"true*\"}},\"name()\":{\"returns\":{\"_0\":\"the name of the token*\"}},\"symbol()\":{\"returns\":{\"_0\":\"the symbol of the token*\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"the total supply of the token*\"}},\"transfer(address,uint256)\":{\"details\":\"executes a transfer of tokens from msg.sender to recipient\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\",\"sender\":\"the owner of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}}},\"title\":\"ERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Basic ERC20 implementation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1916,"contract":"@aave/safety-module/contracts/lib/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1922,"contract":"@aave/safety-module/contracts/lib/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1924,"contract":"@aave/safety-module/contracts/lib/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1926,"contract":"@aave/safety-module/contracts/lib/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1928,"contract":"@aave/safety-module/contracts/lib/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1930,"contract":"@aave/safety-module/contracts/lib/ERC20.sol:ERC20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"notice":"Basic ERC20 implementation","version":1}}},"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol":{"ERC20WithSnapshot":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint128","name":"oldValue","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"newValue","type":"uint128"}],"name":"SnapshotDone","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_aaveGovernance","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_countsSnapshots","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_snapshots","outputs":[{"internalType":"uint128","name":"blockNumber","type":"uint128"},{"internalType":"uint128","name":"value","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"returns the allowance of spender on the tokens owned by owner","params":{"owner":"the owner of the tokens","spender":"the user allowed to spend the owner's tokens"},"returns":{"_0":"the amount of owner's tokens spender is allowed to spend*"}},"approve(address,uint256)":{"details":"allows spender to spend the tokens owned by msg.sender","params":{"spender":"the user allowed to spend msg.sender tokens"},"returns":{"_0":"true*"}},"balanceOf(address)":{"returns":{"_0":"the balance of the token*"}},"decimals()":{"returns":{"_0":"the decimals of the token*"}},"decreaseAllowance(address,uint256)":{"details":"decreases the allowance of spender to spend msg.sender tokens","params":{"spender":"the user allowed to spend on behalf of msg.sender","subtractedValue":"the amount being subtracted to the allowance"},"returns":{"_0":"true*"}},"increaseAllowance(address,uint256)":{"details":"increases the allowance of spender to spend msg.sender tokens","params":{"addedValue":"the amount being added to the allowance","spender":"the user allowed to spend on behalf of msg.sender"},"returns":{"_0":"true*"}},"name()":{"returns":{"_0":"the name of the token*"}},"symbol()":{"returns":{"_0":"the symbol of the token*"}},"totalSupply()":{"returns":{"_0":"the total supply of the token*"}},"transfer(address,uint256)":{"details":"executes a transfer of tokens from msg.sender to recipient","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}},"transferFrom(address,address,uint256)":{"details":"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens","sender":"the owner of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}}},"stateVariables":{"_aaveGovernance":{"details":"reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility to control all potential reentrancies by calling back the this contract"}},"title":"ERC20WithSnapshot","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13E3 CODESIZE SUB DUP1 PUSH3 0x13E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP3 POP DUP5 SWAP2 DUP5 SWAP2 PUSH3 0x1C0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH3 0x1F7 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x1D6 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1F7 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x2A3 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x22F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x27A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x24A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x25D JUMP JUMPDEST POP PUSH3 0x288 SWAP3 SWAP2 POP PUSH3 0x28C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x288 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x28D JUMP JUMPDEST PUSH2 0x1130 DUP1 PUSH3 0x2B3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x8779588C EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2ACBF823 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AE JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x50A JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x656 JUMP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x67E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x784 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x4F4 PUSH2 0x7EC JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 DUP5 DUP5 DUP5 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x5A1 DUP5 PUSH2 0x523 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x59C DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1065 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x56E PUSH2 0x7EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x608 PUSH2 0x7EC JUMP JUMPDEST DUP5 PUSH2 0x59C DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x619 PUSH2 0x7EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x71C PUSH2 0x7EC JUMP JUMPDEST DUP5 PUSH2 0x59C DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x746 PUSH2 0x7EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x791 PUSH2 0x7EC JUMP JUMPDEST DUP5 DUP5 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x101D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x108D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFFA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1A DUP4 DUP4 DUP4 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xA64 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103F PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAA0 SWAP1 DUP3 PUSH2 0xBB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB75 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB5D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBA2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6C JUMPI PUSH2 0xDAE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 PUSH2 0xC93 DUP5 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0xCA9 DUP5 DUP3 PUSH2 0xCA4 DUP2 DUP7 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 PUSH2 0xCD2 DUP4 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE3 DUP4 DUP3 PUSH2 0xCA4 DUP2 DUP7 PUSH2 0xBB8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0xDAC JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A393149 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE79 JUMPI POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 PUSH1 0x0 PUSH2 0xE54 DUP6 PUSH1 0x1 PUSH2 0xDB3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xED3 JUMPI DUP4 DUP2 PUSH1 0x0 PUSH2 0xE8D DUP6 PUSH1 0x1 PUSH2 0xDB3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP4 MLOAD DUP3 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF62 DUP3 PUSH1 0x1 PUSH2 0xBB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x2CD3C83DDAC2953EE75F53265D9EA4463EAF05030E5459A1B7E63819B7CE88F7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208E6F 0x2A PUSH10 0xD3ED5DCE9DC86BB9825E CHAINID 0xC1 0xE8 DUP3 0xAA ADDMOD 0x2E 0xE0 0xC9 PUSH16 0x1249A2ED9CA9E5F564736F6C63430007 SDIV STOP CALLER ","sourceMap":"341:3068:16:-:0;;;1072:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1072:125:16;;;;;;;;;;-1:-1:-1;1072:125:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1072:125:16;;;;;;;;;;-1:-1:-1;1072:125:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1072:125:16;;;;;;;749:12:15;;1072:125:16;;-1:-1:-1;1171:4:16;;-1:-1:-1;1177:6:16;;1072:125;;749:12:15;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;767:16:15;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;789:9:15;:20;;-1:-1:-1;;789:20:15;;;;;;;;;;;;-1:-1:-1;341:3068:16;;-1:-1:-1;;;;341:3068:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;341:3068:16;;;-1:-1:-1;341:3068:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d714610355578063a9059cbb1461038e578063c3863ada146103c7578063dd62ed3e146103f8576100ea565b806370a08231146102e75780638779588c1461031a57806395d89b411461034d576100ea565b806323b872dd116100c857806323b872dd146101d35780632acbf82314610216578063313ce5671461029057806339509351146102ae576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101b9575b600080fd5b6100f7610433565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a56004803603604081101561018257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104e7565b604080519115158252519081900360200190f35b6101c1610504565b60408051918252519081900360200190f35b6101a5600480360360608110156101e957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561050a565b61024f6004803603604081101561022c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105ab565b60405180836fffffffffffffffffffffffffffffffff168152602001826fffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6102986105f2565b6040805160ff9092168252519081900360200190f35b6101a5600480360360408110156102c457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105fb565b6101c1600480360360208110156102fd57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610656565b6101c16004803603602081101561033057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661067e565b6100f7610690565b6101a56004803603604081101561036b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561070f565b6101a5600480360360408110156103a457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610784565b6103cf610798565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101c16004803603604081101561040e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107b4565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104dd5780601f106104b2576101008083540402835291602001916104dd565b820191906000526020600020905b8154815290600101906020018083116104c057829003601f168201915b5050505050905090565b60006104fb6104f46107ec565b84846107f0565b50600192915050565b60025490565b6000610517848484610937565b6105a1846105236107ec565b61059c856040518060600160405280602881526020016110656028913973ffffffffffffffffffffffffffffffffffffffff8a1660009081526001602052604081209061056e6107ec565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610b07565b6107f0565b5060019392505050565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b60055460ff1690565b60006104fb6106086107ec565b8461059c85600160006106196107ec565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610bb8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60076020526000908152604090205481565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104dd5780601f106104b2576101008083540402835291602001916104dd565b60006104fb61071c6107ec565b8461059c856040518060600160405280602581526020016110d660259139600160006107466107ec565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610b07565b60006104fb6107916107ec565b8484610937565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff831661085c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110b26024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166108c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061101d6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061108d6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ffa6023913960400191505060405180910390fd5b610a1a838383610c33565b610a648160405180606001604052806026815260200161103f6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610b07565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610aa09082610bb8565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bb0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b75578181015183820152602001610b5d565b50505050905090810190601f168015610ba25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c2c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c6c57610dae565b73ffffffffffffffffffffffffffffffffffffffff831615610cab576000610c9384610656565b9050610ca98482610ca48186610db3565b610df5565b505b73ffffffffffffffffffffffffffffffffffffffff821615610ce5576000610cd283610656565b9050610ce38382610ca48186610bb8565b505b60085473ffffffffffffffffffffffffffffffffffffffff168015610dac578073ffffffffffffffffffffffffffffffffffffffff16634a3931498585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b505050505b505b505050565b6000610c2c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b07565b73ffffffffffffffffffffffffffffffffffffffff831660009081526007602090815260408083205460069092529091204391908115801590610e7957506fffffffffffffffffffffffffffffffff8316816000610e54856001610db3565b81526020810191909152604001600020546fffffffffffffffffffffffffffffffff16145b15610ed35783816000610e8d856001610db3565b8152602081019190915260400160002080546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055610f89565b6040805180820182526fffffffffffffffffffffffffffffffff80861682528681166020808401918252600087815290869052939093209151825493518216700100000000000000000000000000000000029082167fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169390931716919091179055610f62826001610bb8565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600760205260409020555b6040805173ffffffffffffffffffffffffffffffffffffffff881681526fffffffffffffffffffffffffffffffff808816602083015286168183015290517f2cd3c83ddac2953ee75f53265d9ea4463eaf05030e5459a1b7e63819b7ce88f79181900360600190a150505050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208e6f2a69d3ed5dce9dc86bb9825e46c1e882aa082ee0c96f1249a2ed9ca9e5f564736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x8779588C EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2ACBF823 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AE JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x50A JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x656 JUMP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x67E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x784 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x4F4 PUSH2 0x7EC JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517 DUP5 DUP5 DUP5 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x5A1 DUP5 PUSH2 0x523 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x59C DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1065 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x56E PUSH2 0x7EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x608 PUSH2 0x7EC JUMP JUMPDEST DUP5 PUSH2 0x59C DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x619 PUSH2 0x7EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x71C PUSH2 0x7EC JUMP JUMPDEST DUP5 PUSH2 0x59C DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x746 PUSH2 0x7EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB PUSH2 0x791 PUSH2 0x7EC JUMP JUMPDEST DUP5 DUP5 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x101D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x108D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFFA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1A DUP4 DUP4 DUP4 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xA64 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103F PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAA0 SWAP1 DUP3 PUSH2 0xBB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB75 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB5D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBA2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6C JUMPI PUSH2 0xDAE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 PUSH2 0xC93 DUP5 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0xCA9 DUP5 DUP3 PUSH2 0xCA4 DUP2 DUP7 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 PUSH2 0xCD2 DUP4 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE3 DUP4 DUP3 PUSH2 0xCA4 DUP2 DUP7 PUSH2 0xBB8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0xDAC JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A393149 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xB07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE79 JUMPI POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 PUSH1 0x0 PUSH2 0xE54 DUP6 PUSH1 0x1 PUSH2 0xDB3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xED3 JUMPI DUP4 DUP2 PUSH1 0x0 PUSH2 0xE8D DUP6 PUSH1 0x1 PUSH2 0xDB3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP4 MLOAD DUP3 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF62 DUP3 PUSH1 0x1 PUSH2 0xBB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x2CD3C83DDAC2953EE75F53265D9EA4463EAF05030E5459A1B7E63819B7CE88F7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212208E6F 0x2A PUSH10 0xD3ED5DCE9DC86BB9825E CHAINID 0xC1 0xE8 DUP3 0xAA ADDMOD 0x2E 0xE0 0xC9 PUSH16 0x1249A2ED9CA9E5F564736F6C63430007 SDIV STOP CALLER ","sourceMap":"341:3068:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:156;;;;;;;;;;;;;;;;-1:-1:-1;2561:156:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1292:92;;;:::i;:::-;;;;;;;;;;;;;;;;3044:343;;;;;;;;;;;;;;;;-1:-1:-1;3044:343:15;;;;;;;;;;;;;;;;;;:::i;551:66:16:-;;;;;;;;;;;;;;;;-1:-1:-1;551:66:16;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:84:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3627:205;;;;;;;;;;;;;;;;-1:-1:-1;3627:205:15;;;;;;;;;:::i;1439:111::-;;;;;;;;;;;;;;;;-1:-1:-1;1439:111:15;;;;:::i;621:51:16:-;;;;;;;;;;;;;;;;-1:-1:-1;621:51:16;;;;:::i;1004:88:15:-;;;:::i;4082:318::-;;;;;;;;;;;;;;;;-1:-1:-1;4082:318:15;;;;;;;;;:::i;1804:162::-;;;;;;;;;;;;;;;;-1:-1:-1;1804:162:15;;;;;;;;;:::i;957:36:16:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2232:165:15;;;;;;;;;;;;;;;;-1:-1:-1;2232:165:15;;;;;;;;;;;:::i;866:84::-;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:13;;933:12;;940:5;;933:12;;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84;:::o;2561:156::-;2644:4;2656:39;2665:12;:10;:12::i;:::-;2679:7;2688:6;2656:8;:39::i;:::-;-1:-1:-1;2708:4:15;2561:156;;;;:::o;1292:92::-;1367:12;;1292:92;:::o;3044:343::-;3166:4;3178:36;3188:6;3196:9;3207:6;3178:9;:36::i;:::-;3220:145;3236:6;3250:12;:10;:12::i;:::-;3270:89;3308:6;3270:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3290:12;:10;:12::i;:::-;3270:33;;;;;;;;;;;;;-1:-1:-1;3270:33:15;;;:89;:37;:89::i;:::-;3220:8;:145::i;:::-;-1:-1:-1;3378:4:15;3044:343;;;;;:::o;551:66:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1148:84:15:-;1218:9;;;;1148:84;:::o;3627:205::-;3715:4;3727:83;3736:12;:10;:12::i;:::-;3750:7;3759:50;3798:10;3759:11;:25;3771:12;:10;:12::i;:::-;3759:25;;;;;;;;;;;;;;;;;;-1:-1:-1;3759:25:15;;;:34;;;;;;;;;;;:38;:50::i;1439:111::-;1527:18;;1505:7;1527:18;;;;;;;;;;;;1439:111::o;621:51:16:-;;;;;;;;;;;;;:::o;1004:88:15:-;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:13;;1073:14;;1080:7;;1073:14;;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;4082:318;4187:4;4201:177;4217:12;:10;:12::i;:::-;4237:7;4252:120;4300:15;4252:120;;;;;;;;;;;;;;;;;:11;:25;4264:12;:10;:12::i;:::-;4252:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4252:25:15;;;:34;;;;;;;;;;;:120;:38;:120::i;1804:162::-;1890:4;1902:42;1912:12;:10;:12::i;:::-;1926:9;1937:6;1902:9;:42::i;957:36:16:-;;;;;;:::o;2232:165:15:-;2365:18;;;;2341:7;2365:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2232:165::o;651:98:13:-;734:10;651:98;:::o;5672:338:15:-;5785:19;;;5777:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5859:21;;;5851:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5926:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;5973:32;;;;;;;;;;;;;;;;;5672:338;;;:::o;4404:520::-;4521:20;;;4513:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:23;;;4589:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4667:47;4688:6;4696:9;4707:6;4667:20;:47::i;:::-;4741:71;4763:6;4741:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;4721:17;;;;:9;:17;;;;;;;;;;;:91;;;;4841:20;;;;;;;:32;;4866:6;4841:24;:32::i;:::-;4818:20;;;;:9;:20;;;;;;;;;;;;:55;;;;4884:35;;;;;;;4818:20;;4884:35;;;;;;;;;;;;;4404:520;;;:::o;1711:189:19:-;1813:7;1844:12;1836:6;;;;1828:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1875:5:19;;;1711:189::o;913:162::-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;2698:709:16:-;2830:2;2822:10;;:4;:10;;;2818:37;;;2842:7;;2818:37;2865:18;;;;2861:160;;2893:19;2915:15;2925:4;2915:9;:15::i;:::-;2893:37;-1:-1:-1;2938:76:16;2953:4;2893:37;2989:23;2893:37;3005:6;2989:15;:23::i;:::-;2938:14;:76::i;:::-;2861:160;;3030:16;;;;3026:148;;3056:17;3076:13;3086:2;3076:9;:13::i;:::-;3056:33;-1:-1:-1;3097:70:16;3112:2;3056:33;3144:21;3056:33;3158:6;3144:13;:21::i;3097:70::-;3026:148;;3284:15;;;;3309:34;;3305:98;;3353:14;:25;;;3379:4;3385:2;3389:6;3353:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:98;2698:709;;;;;:::o;1319:128:19:-;1377:7;1399:43;1403:1;1406;1399:43;;;;;;;;;;;;;;;;;:3;:43::i;1576:767:16:-;1773:23;;;1690:20;1773:23;;;:16;:23;;;;;;;;;1856:10;:17;;;;;;1721:12;;1773:23;1942:26;;;;;:108;;-1:-1:-1;1978:72:16;;;:14;:44;1993:28;:21;2019:1;1993:25;:28::i;:::-;1978:44;;;;;;;;;;;-1:-1:-1;1978:44:16;:56;;;:72;1942:108;1931:357;;;2118:8;2065:14;:44;2080:28;:21;2106:1;2080:25;:28::i;:::-;2065:44;;;;;;;;;;;-1:-1:-1;2065:44:16;:61;;;;;;;;;;;;;;;;1931:357;;;2187:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2147:37:16;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:28;2162:21;2147:72;2253:25;:28::i;:::-;2227:23;;;;;;;:16;:23;;;;;:54;1931:357;2299:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:767;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"880000","executionCost":"infinite","totalCost":"infinite"},"external":{"_aaveGovernance()":"1079","_countsSnapshots(address)":"1157","_snapshots(address,uint256)":"1312","allowance(address,address)":"1314","approve(address,uint256)":"infinite","balanceOf(address)":"1144","decimals()":"1080","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"1066","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite","_setAaveGovernance(contract ITransferHook)":"infinite","_writeSnapshot(address,uint128,uint128)":"infinite"}},"methodIdentifiers":{"_aaveGovernance()":"c3863ada","_countsSnapshots(address)":"8779588c","_snapshots(address,uint256)":"2acbf823","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldValue\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newValue\",\"type\":\"uint128\"}],\"name\":\"SnapshotDone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_aaveGovernance\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_countsSnapshots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_snapshots\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"returns the allowance of spender on the tokens owned by owner\",\"params\":{\"owner\":\"the owner of the tokens\",\"spender\":\"the user allowed to spend the owner's tokens\"},\"returns\":{\"_0\":\"the amount of owner's tokens spender is allowed to spend*\"}},\"approve(address,uint256)\":{\"details\":\"allows spender to spend the tokens owned by msg.sender\",\"params\":{\"spender\":\"the user allowed to spend msg.sender tokens\"},\"returns\":{\"_0\":\"true*\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the balance of the token*\"}},\"decimals()\":{\"returns\":{\"_0\":\"the decimals of the token*\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"decreases the allowance of spender to spend msg.sender tokens\",\"params\":{\"spender\":\"the user allowed to spend on behalf of msg.sender\",\"subtractedValue\":\"the amount being subtracted to the allowance\"},\"returns\":{\"_0\":\"true*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"increases the allowance of spender to spend msg.sender tokens\",\"params\":{\"addedValue\":\"the amount being added to the allowance\",\"spender\":\"the user allowed to spend on behalf of msg.sender\"},\"returns\":{\"_0\":\"true*\"}},\"name()\":{\"returns\":{\"_0\":\"the name of the token*\"}},\"symbol()\":{\"returns\":{\"_0\":\"the symbol of the token*\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"the total supply of the token*\"}},\"transfer(address,uint256)\":{\"details\":\"executes a transfer of tokens from msg.sender to recipient\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\",\"sender\":\"the owner of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}}},\"stateVariables\":{\"_aaveGovernance\":{\"details\":\"reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility to control all potential reentrancies by calling back the this contract\"}},\"title\":\"ERC20WithSnapshot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 including snapshots of balances on transfer-related actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol\":\"ERC20WithSnapshot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {ERC20} from '../lib/ERC20.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\n\\n/**\\n * @title ERC20WithSnapshot\\n * @notice ERC20 including snapshots of balances on transfer-related actions\\n * @author Aave\\n **/\\ncontract ERC20WithSnapshot is ERC20 {\\n  using SafeMath for uint256;\\n\\n  /// @dev snapshot of a value on a specific block, used for balances\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  mapping(address => mapping(uint256 => Snapshot)) public _snapshots;\\n  mapping(address => uint256) public _countsSnapshots;\\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\\n  /// to control all potential reentrancies by calling back the this contract\\n  ITransferHook public _aaveGovernance;\\n\\n  event SnapshotDone(address owner, uint128 oldValue, uint128 newValue);\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public ERC20(name, symbol, decimals) {}\\n\\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\\n    _aaveGovernance = aaveGovernance;\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal virtual {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerCountOfSnapshots = _countsSnapshots[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = _snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerCountOfSnapshots != 0 &&\\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerCountOfSnapshots] = Snapshot(currentBlock, newValue);\\n      _countsSnapshots[owner] = ownerCountOfSnapshots.add(1);\\n    }\\n\\n    emit SnapshotDone(owner, oldValue, newValue);\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\\n   * - On _transfer, it writes snapshots for both \\\"from\\\" and \\\"to\\\"\\n   * - On _mint, only for _to\\n   * - On _burn, only for _from\\n   * @param from the from address\\n   * @param to the to address\\n   * @param amount the amount to transfer\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    if (from != address(0)) {\\n      uint256 fromBalance = balanceOf(from);\\n      _writeSnapshot(from, uint128(fromBalance), uint128(fromBalance.sub(amount)));\\n    }\\n    if (to != address(0)) {\\n      uint256 toBalance = balanceOf(to);\\n      _writeSnapshot(to, uint128(toBalance), uint128(toBalance.add(amount)));\\n    }\\n\\n    // caching the aave governance address to avoid multiple state loads\\n    ITransferHook aaveGovernance = _aaveGovernance;\\n    if (aaveGovernance != ITransferHook(0)) {\\n      aaveGovernance.onTransfer(from, to, amount);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xd7c631c298da697894c98fa9e8ec6760c56979d62d5e7bdb485ca71c42af9033\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1916,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1922,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1924,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1926,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1928,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1930,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":2445,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_snapshots","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)2439_storage))"},{"astId":2449,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_countsSnapshots","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2452,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"_aaveGovernance","offset":0,"slot":"8","type":"t_contract(ITransferHook)1786"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ITransferHook)1786":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)2439_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct ERC20WithSnapshot.Snapshot))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Snapshot)2439_storage)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Snapshot)2439_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot)","numberOfBytes":"32","value":"t_struct(Snapshot)2439_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Snapshot)2439_storage":{"encoding":"inplace","label":"struct ERC20WithSnapshot.Snapshot","members":[{"astId":2436,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"blockNumber","offset":0,"slot":"0","type":"t_uint128"},{"astId":2438,"contract":"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol:ERC20WithSnapshot","label":"value","offset":16,"slot":"0","type":"t_uint128"}],"numberOfBytes":"32"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"notice":"ERC20 including snapshots of balances on transfer-related actions","version":1}}},"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol":{"GovernancePowerWithSnapshot":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegatedPowerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DELEGATE_BY_TYPE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELEGATE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_aaveGovernance","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_votingSnapshots","outputs":[{"internalType":"uint128","name":"blockNumber","type":"uint128"},{"internalType":"uint128","name":"value","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_votingSnapshotsCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"delegateByType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegator","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getDelegateeByType","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{"details":"delegates all the powers to a specific user","params":{"delegatee":"the user to which the power will be delegated*"}},"delegateByType(address,uint8)":{"details":"delegates one specific power to a delegatee","params":{"delegatee":"the user which delegated power has changed","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"}},"getDelegateeByType(address,uint8)":{"details":"returns the delegatee of an user","params":{"delegator":"the address of the delegator*"}},"getPowerAtBlock(address,uint256,uint8)":{"details":"returns the delegated power of a user at a certain block","params":{"user":"the user*"}},"getPowerCurrent(address,uint8)":{"details":"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot","params":{"user":"the user*"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"totalSupplyAt(uint256)":{"details":"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*"},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"stateVariables":{"_aaveGovernance":{"details":"reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility to control all potential reentrancies by calling back the this contract"},"_votingSnapshots":{"details":"The following storage layout points to the prior StakedToken.sol implementation: _snapshots => _votingSnapshots _snapshotsCounts =>  _votingSnapshotsCounts _aaveGovernance => _aaveGovernance"}},"title":"ERC20WithSnapshot","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DELEGATE_BY_TYPE_TYPEHASH()":"aa9fbe02","DELEGATE_TYPEHASH()":"41cbf54a","_aaveGovernance()":"c3863ada","_votingSnapshots(address,uint256)":"5b3cc0cf","_votingSnapshotsCounts(address)":"7bb73c97","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateByType(address,uint8)":"dc937e1c","getDelegateeByType(address,uint8)":"6f50458d","getPowerAtBlock(address,uint256,uint8)":"c2ffbb91","getPowerCurrent(address,uint8)":"b2f4201d","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegatedPowerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATE_BY_TYPE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_aaveGovernance\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_votingSnapshots\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_votingSnapshotsCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"delegateByType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getDelegateeByType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"delegates all the powers to a specific user\",\"params\":{\"delegatee\":\"the user to which the power will be delegated*\"}},\"delegateByType(address,uint8)\":{\"details\":\"delegates one specific power to a delegatee\",\"params\":{\"delegatee\":\"the user which delegated power has changed\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\"}},\"getDelegateeByType(address,uint8)\":{\"details\":\"returns the delegatee of an user\",\"params\":{\"delegator\":\"the address of the delegator*\"}},\"getPowerAtBlock(address,uint256,uint8)\":{\"details\":\"returns the delegated power of a user at a certain block\",\"params\":{\"user\":\"the user*\"}},\"getPowerCurrent(address,uint8)\":{\"details\":\"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot\",\"params\":{\"user\":\"the user*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_aaveGovernance\":{\"details\":\"reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility to control all potential reentrancies by calling back the this contract\"},\"_votingSnapshots\":{\"details\":\"The following storage layout points to the prior StakedToken.sol implementation: _snapshots => _votingSnapshots _snapshotsCounts =>  _votingSnapshotsCounts _aaveGovernance => _aaveGovernance\"}},\"title\":\"ERC20WithSnapshot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DELEGATE_BY_TYPE_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"}},\"notice\":\"ERC20 including snapshots of balances on transfer-related actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol\":\"GovernancePowerWithSnapshot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IGovernancePowerDelegationToken {\\n  \\n  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\\n\\n  /**\\n   * @dev emitted when a user delegates to another\\n   * @param delegator the delegator\\n   * @param delegatee the delegatee\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegateChanged(\\n    address indexed delegator,\\n    address indexed delegatee,\\n    DelegationType delegationType\\n  );\\n\\n  /**\\n   * @dev emitted when an action changes the delegated power of a user\\n   * @param user the user which delegated power has changed\\n   * @param amount the amount of delegated power for the user\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external virtual;\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (address);\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external virtual view returns (uint256);\\n \\n  /**\\n  * @dev returns the total supply at a certain block number\\n  **/\\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\\n}\",\"keccak256\":\"0x82d63f935980041a1fa0cd3a166d5b26695f114214a6e26c01dbd9df4c17400b\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\",\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\"},\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\",\"keccak256\":\"0x291b3f5f85cf723a515eccae8471ac99b93817d8d8f7151a5a99e13c09587e33\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\"},\"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {SafeMath} from '../../open-zeppelin/SafeMath.sol';\\nimport {ERC20} from '../../open-zeppelin/ERC20.sol';\\nimport {\\n  IGovernancePowerDelegationToken\\n} from '../../interfaces/IGovernancePowerDelegationToken.sol';\\n\\n/**\\n * @notice implementation of the AAVE token contract\\n * @author Aave\\n */\\nabstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {\\n  using SafeMath for uint256;\\n  /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(\\n    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  bytes32 public constant DELEGATE_TYPEHASH = keccak256(\\n    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  /// @dev snapshot of a value on a specific block, used for votes\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  /**\\n   * @dev delegates one specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external override {\\n    _delegateByType(msg.sender, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external override {\\n    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);\\n    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);\\n  }\\n\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (address)\\n  {\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    return _getDelegatee(delegator, delegates);\\n  }\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (uint256)\\n  {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);\\n  }\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external override view returns (uint256) {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);\\n  }\\n\\n  /**\\n   * @dev returns the total supply at a certain block number\\n   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum\\n   * In this initial implementation with no AAVE minting, simply returns the current supply\\n   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future\\n   **/\\n  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {\\n    return super.totalSupply();\\n  }\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _delegateByType(\\n    address delegator,\\n    address delegatee,\\n    DelegationType delegationType\\n  ) internal {\\n    require(delegatee != address(0), 'INVALID_DELEGATEE');\\n\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    uint256 delegatorBalance = balanceOf(delegator);\\n\\n    address previousDelegatee = _getDelegatee(delegator, delegates);\\n\\n    delegates[delegator] = delegatee;\\n\\n    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);\\n    emit DelegateChanged(delegator, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev moves delegated power from one user to another\\n   * @param from the user from which delegated power is moved\\n   * @param to the user that will receive the delegated power\\n   * @param amount the amount of delegated power to be moved\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _moveDelegatesByType(\\n    address from,\\n    address to,\\n    uint256 amount,\\n    DelegationType delegationType\\n  ) internal {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    if (from != address(0)) {\\n      uint256 previous = 0;\\n      uint256 fromSnapshotsCount = snapshotsCounts[from];\\n\\n      if (fromSnapshotsCount != 0) {\\n        previous = snapshots[from][fromSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(from);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        from,\\n        uint128(previous),\\n        uint128(previous.sub(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(from, previous.sub(amount), delegationType);\\n    }\\n    if (to != address(0)) {\\n      uint256 previous = 0;\\n      uint256 toSnapshotsCount = snapshotsCounts[to];\\n      if (toSnapshotsCount != 0) {\\n        previous = snapshots[to][toSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(to);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        to,\\n        uint128(previous),\\n        uint128(previous.add(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(to, previous.add(amount), delegationType);\\n    }\\n  }\\n\\n  /**\\n   * @dev searches a snapshot by block number. Uses binary search.\\n   * @param snapshots the snapshots mapping\\n   * @param snapshotsCounts the number of snapshots\\n   * @param user the user for which the snapshot is being searched\\n   * @param blockNumber the block number being searched\\n   **/\\n  function _searchByBlockNumber(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address user,\\n    uint256 blockNumber\\n  ) internal view returns (uint256) {\\n    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');\\n\\n    uint256 snapshotsCount = snapshotsCounts[user];\\n\\n    if (snapshotsCount == 0) {\\n      return balanceOf(user);\\n    }\\n\\n    // First check most recent balance\\n    if (snapshots[user][snapshotsCount - 1].blockNumber <= blockNumber) {\\n      return snapshots[user][snapshotsCount - 1].value;\\n    }\\n\\n    // Next check implicit zero balance\\n    if (snapshots[user][0].blockNumber > blockNumber) {\\n      return 0;\\n    }\\n\\n    uint256 lower = 0;\\n    uint256 upper = snapshotsCount - 1;\\n    while (upper > lower) {\\n      uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n      Snapshot memory snapshot = snapshots[user][center];\\n      if (snapshot.blockNumber == blockNumber) {\\n        return snapshot.value;\\n      } else if (snapshot.blockNumber < blockNumber) {\\n        lower = center;\\n      } else {\\n        upper = center - 1;\\n      }\\n    }\\n    return snapshots[user][lower].value;\\n  }\\n\\n  /**\\n   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type\\n   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,\\n   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts\\n   * who inherit from this to provide access to the delegation data by overriding this method.\\n   * @param delegationType the type of delegation\\n   **/\\n  function _getDelegationDataByType(DelegationType delegationType)\\n    internal\\n    virtual\\n    view\\n    returns (\\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\\n      mapping(address => uint256) storage, //snapshots count\\n      mapping(address => address) storage //delegatees list\\n    );\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerSnapshotsCount = snapshotsCounts[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerSnapshotsCount != 0 &&\\n      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);\\n      snapshotsCounts[owner] = ownerSnapshotsCount + 1;\\n    }\\n  }\\n\\n  /**\\n   * @dev returns the user delegatee. If a user never performed any delegation,\\n   * his delegated address will be 0x0. In that case we simply return the user itself\\n   * @param delegator the address of the user for which return the delegatee\\n   * @param delegates the array of delegates for a particular type of delegation\\n   **/\\n  function _getDelegatee(address delegator, mapping(address => address) storage delegates)\\n    internal\\n    view\\n    returns (address)\\n  {\\n    address previousDelegatee = delegates[delegator];\\n\\n    if (previousDelegatee == address(0)) {\\n      return delegator;\\n    }\\n\\n    return previousDelegatee;\\n  }\\n}\\n\",\"keccak256\":\"0x866ad035070a7ec3551303a27b2089b372cb4ac393c985d6896678cad8be6662\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {ERC20} from '../lib/ERC20.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {\\n  GovernancePowerDelegationERC20\\n} from '@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol';\\n\\n/**\\n * @title ERC20WithSnapshot\\n * @notice ERC20 including snapshots of balances on transfer-related actions\\n * @author Aave\\n **/\\nabstract contract GovernancePowerWithSnapshot is GovernancePowerDelegationERC20 {\\n  using SafeMath for uint256;\\n\\n  /**\\n   * @dev The following storage layout points to the prior StakedToken.sol implementation:\\n   * _snapshots => _votingSnapshots\\n   * _snapshotsCounts =>  _votingSnapshotsCounts\\n   * _aaveGovernance => _aaveGovernance\\n   */\\n  mapping(address => mapping(uint256 => Snapshot)) public _votingSnapshots;\\n  mapping(address => uint256) public _votingSnapshotsCounts;\\n\\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\\n  /// to control all potential reentrancies by calling back the this contract\\n  ITransferHook public _aaveGovernance;\\n\\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\\n    _aaveGovernance = aaveGovernance;\\n  }\\n}\\n\",\"keccak256\":\"0xac61858e050c12b7fa21543c4fc86e9fa2065f4607b74d3d2ce79b73e88e5c4c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":263,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":269,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":271,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":273,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":275,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":277,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":2687,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_votingSnapshots","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))"},{"astId":2691,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_votingSnapshotsCounts","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2694,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"_aaveGovernance","offset":0,"slot":"8","type":"t_contract(ITransferHook)1786"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ITransferHook)1786":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Snapshot)977_storage)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Snapshot)977_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)","numberOfBytes":"32","value":"t_struct(Snapshot)977_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Snapshot)977_storage":{"encoding":"inplace","label":"struct GovernancePowerDelegationERC20.Snapshot","members":[{"astId":974,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"blockNumber","offset":0,"slot":"0","type":"t_uint128"},{"astId":976,"contract":"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol:GovernancePowerWithSnapshot","label":"value","offset":16,"slot":"0","type":"t_uint128"}],"numberOfBytes":"32"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"DELEGATE_BY_TYPE_TYPEHASH()":{"notice":"The EIP-712 typehash for the delegation struct used by the contract"}},"notice":"ERC20 including snapshots of balances on transfer-related actions","version":1}}},"@aave/safety-module/contracts/lib/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122072214191271e1a17d58be67577c76cfeeb6534e07a6cd877dea02a0e70a3693464736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x214191271E1A17D58BE67577C76CFEEB6534E0 PUSH27 0x6CD877DEA02A0E70A3693464736F6C634300070500330000000000 ","sourceMap":"708:1396:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122072214191271e1a17d58be67577c76cfeeb6534e07a6cd877dea02a0e70a3693464736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x214191271E1A17D58BE67577C76CFEEB6534E0 PUSH27 0x6CD877DEA02A0E70A3693464736F6C634300070500330000000000 ","sourceMap":"708:1396:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/lib/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209300d1e8281bcfa97547bb4c1c820ff852cabbfaa092013fdb86a5a072d59eb664736f6c63430007050033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 STOP 0xD1 0xE8 0x28 SHL 0xCF 0xA9 PUSH22 0x47BB4C1C820FF852CABBFAA092013FDB86A5A072D59E 0xB6 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"688:4342:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209300d1e8281bcfa97547bb4c1c820ff852cabbfaa092013fdb86a5a072d59eb664736f6c63430007050033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 STOP 0xD1 0xE8 0x28 SHL 0xCF 0xA9 PUSH22 0x47BB4C1C820FF852CABBFAA092013FDB86A5A072D59E 0xB6 PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"688:4342:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"From https://github.com/OpenZeppelin/openzeppelin-contracts Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@aave/safety-module/contracts/stake/AaveDistributionManager.sol":{"AaveDistributionManager":{"abi":[{"inputs":[{"internalType":"address","name":"emissionManager","type":"address"},{"internalType":"uint256","name":"distributionDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"emission","type":"uint256"}],"name":"AssetConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"AssetIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"UserIndexUpdated","type":"event"},{"inputs":[],"name":"DISTRIBUTION_END","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMISSION_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"assets","outputs":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint128","name":"lastUpdateTimestamp","type":"uint128"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"address","name":"underlyingAsset","type":"address"}],"internalType":"struct DistributionTypes.AssetConfigInput[]","name":"assetsConfigInput","type":"tuple[]"}],"name":"configureAssets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getUserAssetData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"configureAssets((uint128,uint256,address)[])":{"details":"Configures the distribution of rewards for a list of assets","params":{"assetsConfigInput":"The list of configurations to apply*"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}}},"title":"AaveDistributionManager","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:387:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:273:28","statements":[{"body":{"nodeType":"YulBlock","src":"158:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"167:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"175:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:28"},"nodeType":"YulFunctionCall","src":"160:22:28"},"nodeType":"YulExpressionStatement","src":"160:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:28"},"nodeType":"YulFunctionCall","src":"129:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:28"},"nodeType":"YulFunctionCall","src":"125:32:28"},"nodeType":"YulIf","src":"122:2:28"},{"nodeType":"YulVariableDeclaration","src":"193:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"212:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"206:5:28"},"nodeType":"YulFunctionCall","src":"206:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"197:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"285:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"294:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"302:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"287:6:28"},"nodeType":"YulFunctionCall","src":"287:22:28"},"nodeType":"YulExpressionStatement","src":"287:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"244:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"255:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"270:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"275:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"266:3:28"},"nodeType":"YulFunctionCall","src":"266:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"279:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"262:3:28"},"nodeType":"YulFunctionCall","src":"262:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"251:3:28"},"nodeType":"YulFunctionCall","src":"251:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"241:2:28"},"nodeType":"YulFunctionCall","src":"241:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"234:6:28"},"nodeType":"YulFunctionCall","src":"234:50:28"},"nodeType":"YulIf","src":"231:2:28"},{"nodeType":"YulAssignment","src":"320:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"330:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"320:6:28"}]},{"nodeType":"YulAssignment","src":"344:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"364:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"375:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"360:3:28"},"nodeType":"YulFunctionCall","src":"360:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"354:5:28"},"nodeType":"YulFunctionCall","src":"354:25:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"344:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"81:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"93:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"101:6:28","type":""}],"src":"14:371:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b50604051610c1a380380610c1a83398101604081905261002f916100c0565b610046814261005f60201b6104001790919060201c565b6080525060601b6001600160601b03191660a0526100f8565b6000828201838110156100b9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600080604083850312156100d2578182fd5b82516001600160a01b03811681146100e8578283fd5b6020939093015192949293505050565b60805160a05160601c610ae861013260003980610186528061039a52508061014752806105ab52806105f0528061061d5250610ae86000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063b2a5dbfa11610050578063b2a5dbfa146100bd578063cbcbb507146100d2578063f11b8188146100e757610072565b80633373ee4c14610077578063919cd40f146100a0578063aaf5eb68146100a8575b600080fd5b61008a610085366004610906565b610109565b6040516100979190610a7a565b60405180910390f35b61008a610145565b6100b0610169565b6040516100979190610a83565b6100d06100cb366004610938565b61016e565b005b6100da610398565b60405161009791906109d8565b6100fa6100f53660046108ec565b6103bc565b60405161009793929190610a4d565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526020818152604080832093861683526002909301905220545b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd906109f9565b60405180910390fd5b60005b8181101561039357600080600085858581811061020257fe5b905060600201604001602081019061021a91906108ec565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061029984848481811061026557fe5b905060600201604001602081019061027d91906108ec565b8286868681811061028a57fe5b9050606002016020013561047b565b508383838181106102a657fe5b6102bc92602060609092020190810191506109a8565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061030457fe5b905060600201604001602081019061031c91906108ec565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa85858581811061035f57fe5b61037592602060609092020190810191506109a8565b6040516103829190610a30565b60405180910390a2506001016101e9565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060208190529081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b60008282018381101561047457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16428114156104bc57509050610474565b84546000906104e09084906fffffffffffffffffffffffffffffffff16848861057a565b9050828114610541578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc826040516105389190610a7a565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b6000831580610587575081155b806105a3575042836fffffffffffffffffffffffffffffffff16145b806105e057507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156105ec575083610694565b60007f0000000000000000000000000000000000000000000000000000000000000000421161061b574261063d565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600061065d826fffffffffffffffffffffffffffffffff871661069c565b905061068f8761068986610683670de0b6b3a764000061067d8c886106de565b906106de565b90610751565b90610400565b925050505b949350505050565b600061047483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610793565b6000826106ed5750600061013f565b828202828482816106fa57fe5b0414610474576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610a926021913960400191505060405180910390fd5b600061047483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610844565b6000818484111561083c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108015781810151838201526020016107e9565b50505050905090810190601f16801561082e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156108015781810151838201526020016107e9565b5060008385816108b957fe5b0495945050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108e757600080fd5b919050565b6000602082840312156108fd578081fd5b610474826108c3565b60008060408385031215610918578081fd5b610921836108c3565b915061092f602084016108c3565b90509250929050565b6000806020838503121561094a578182fd5b823567ffffffffffffffff80821115610961578384fd5b818501915085601f830112610974578384fd5b813581811115610982578485fd5b866020606083028501011115610996578485fd5b60209290920196919550909350505050565b6000602082840312156109b9578081fd5b81356fffffffffffffffffffffffffffffffff81168114610474578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b90815260200190565b60ff9190911681526020019056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122099d58be43d58bb6efa9365b0b2d2ac115abb0d7b9b5cfee3c0a2f69c857061d664736f6c63430007050033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC1A CODESIZE SUB DUP1 PUSH2 0xC1A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x46 DUP2 TIMESTAMP PUSH2 0x5F PUSH1 0x20 SHL PUSH2 0x400 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xA0 MSTORE PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0xAE8 PUSH2 0x132 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x186 MSTORE DUP1 PUSH2 0x39A MSTORE POP DUP1 PUSH2 0x147 MSTORE DUP1 PUSH2 0x5AB MSTORE DUP1 PUSH2 0x5F0 MSTORE DUP1 PUSH2 0x61D MSTORE POP PUSH2 0xAE8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2A5DBFA GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0xE7 JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x145 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x202 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x299 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x265 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x28A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x47B JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x2A6 JUMPI INVALID JUMPDEST PUSH2 0x2BC SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x9A8 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x304 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x35F JUMPI INVALID JUMPDEST PUSH2 0x375 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x1E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x474 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x4BC JUMPI POP SWAP1 POP PUSH2 0x474 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4E0 SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x541 JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x587 JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x5A3 JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x5E0 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x5EC JUMPI POP DUP4 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x61B JUMPI TIMESTAMP PUSH2 0x63D JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x65D DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x69C JUMP JUMPDEST SWAP1 POP PUSH2 0x68F DUP8 PUSH2 0x689 DUP7 PUSH2 0x683 PUSH8 0xDE0B6B3A7640000 PUSH2 0x67D DUP13 DUP9 PUSH2 0x6DE JUMP JUMPDEST SWAP1 PUSH2 0x6DE JUMP JUMPDEST SWAP1 PUSH2 0x751 JUMP JUMPDEST SWAP1 PUSH2 0x400 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6ED JUMPI POP PUSH1 0x0 PUSH2 0x13F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x6FA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA92 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x844 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x801 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x82E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x801 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7E9 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x8B9 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x474 DUP3 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x918 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x921 DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x92F PUSH1 0x20 DUP5 ADD PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x961 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x974 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x982 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x996 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x474 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SWAP10 0xD5 DUP12 0xE4 RETURNDATASIZE PC 0xBB PUSH15 0xFA9365B0B2D2AC115ABB0D7B9B5CFE 0xE3 0xC0 LOG2 0xF6 SWAP13 DUP6 PUSH17 0x61D664736F6C6343000705003300000000 ","sourceMap":"422:7622:20:-:0;;;1068:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1167:41;1187:20;1167:15;:19;;;;;;:41;;;;:::i;:::-;1148:60;;-1:-1:-1;1214:34:20;;-1:-1:-1;;;;;;1214:34:20;;;422:7622;;913:162:19;971:7;998:5;;;1017:6;;;;1009:46;;;;;-1:-1:-1;;;1009:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;14:371:28:-;;;154:2;142:9;133:7;129:23;125:32;122:2;;;175:6;167;160:22;122:2;206:16;;-1:-1:-1;;;;;251:31:28;;241:42;;231:2;;302:6;294;287:22;231:2;375;360:18;;;;354:25;330:5;;354:25;;-1:-1:-1;;;112:273:28:o;:::-;422:7622:20;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3301:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:28","statements":[{"nodeType":"YulAssignment","src":"75:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:28"},"nodeType":"YulFunctionCall","src":"84:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:28"}]},{"body":{"nodeType":"YulBlock","src":"190:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:28"},"nodeType":"YulFunctionCall","src":"192:12:28"},"nodeType":"YulExpressionStatement","src":"192:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:28"},"nodeType":"YulFunctionCall","src":"133:54:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:28"},"nodeType":"YulFunctionCall","src":"123:65:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:28"},"nodeType":"YulFunctionCall","src":"116:73:28"},"nodeType":"YulIf","src":"113:2:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:28","type":""}],"src":"14:198:28"},{"body":{"nodeType":"YulBlock","src":"287:128:28","statements":[{"body":{"nodeType":"YulBlock","src":"333:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"342:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"350:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"335:6:28"},"nodeType":"YulFunctionCall","src":"335:22:28"},"nodeType":"YulExpressionStatement","src":"335:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"308:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"317:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"304:3:28"},"nodeType":"YulFunctionCall","src":"304:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"329:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"300:3:28"},"nodeType":"YulFunctionCall","src":"300:32:28"},"nodeType":"YulIf","src":"297:2:28"},{"nodeType":"YulAssignment","src":"368:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"399:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"378:20:28"},"nodeType":"YulFunctionCall","src":"378:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"368:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"253:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"264:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"276:6:28","type":""}],"src":"217:198:28"},{"body":{"nodeType":"YulBlock","src":"507:187:28","statements":[{"body":{"nodeType":"YulBlock","src":"553:26:28","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"562:6:28"},{"name":"value1","nodeType":"YulIdentifier","src":"570:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"555:6:28"},"nodeType":"YulFunctionCall","src":"555:22:28"},"nodeType":"YulExpressionStatement","src":"555:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"528:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"537:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"524:3:28"},"nodeType":"YulFunctionCall","src":"524:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"549:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"520:3:28"},"nodeType":"YulFunctionCall","src":"520:32:28"},"nodeType":"YulIf","src":"517:2:28"},{"nodeType":"YulAssignment","src":"588:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"619:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"598:20:28"},"nodeType":"YulFunctionCall","src":"598:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"588:6:28"}]},{"nodeType":"YulAssignment","src":"638:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"684:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:28"},"nodeType":"YulFunctionCall","src":"669:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"648:20:28"},"nodeType":"YulFunctionCall","src":"648:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"638:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"465:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"476:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"488:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"496:6:28","type":""}],"src":"420:274:28"},{"body":{"nodeType":"YulBlock","src":"840:563:28","statements":[{"body":{"nodeType":"YulBlock","src":"886:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"895:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"903:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"888:6:28"},"nodeType":"YulFunctionCall","src":"888:22:28"},"nodeType":"YulExpressionStatement","src":"888:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"861:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"870:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"857:3:28"},"nodeType":"YulFunctionCall","src":"857:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"882:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"853:3:28"},"nodeType":"YulFunctionCall","src":"853:32:28"},"nodeType":"YulIf","src":"850:2:28"},{"nodeType":"YulVariableDeclaration","src":"921:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"948:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"935:12:28"},"nodeType":"YulFunctionCall","src":"935:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"925:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"967:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"977:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"971:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1022:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1031:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1039:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1024:6:28"},"nodeType":"YulFunctionCall","src":"1024:22:28"},"nodeType":"YulExpressionStatement","src":"1024:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1010:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1018:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1007:2:28"},"nodeType":"YulFunctionCall","src":"1007:14:28"},"nodeType":"YulIf","src":"1004:2:28"},{"nodeType":"YulVariableDeclaration","src":"1057:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1071:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1082:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1067:3:28"},"nodeType":"YulFunctionCall","src":"1067:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1061:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1137:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1146:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1154:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1139:6:28"},"nodeType":"YulFunctionCall","src":"1139:22:28"},"nodeType":"YulExpressionStatement","src":"1139:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1116:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1120:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1112:3:28"},"nodeType":"YulFunctionCall","src":"1112:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1127:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1108:3:28"},"nodeType":"YulFunctionCall","src":"1108:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1101:6:28"},"nodeType":"YulFunctionCall","src":"1101:35:28"},"nodeType":"YulIf","src":"1098:2:28"},{"nodeType":"YulVariableDeclaration","src":"1172:30:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1199:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1186:12:28"},"nodeType":"YulFunctionCall","src":"1186:16:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1176:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1229:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1238:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1246:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1231:6:28"},"nodeType":"YulFunctionCall","src":"1231:22:28"},"nodeType":"YulExpressionStatement","src":"1231:22:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1217:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1225:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1214:2:28"},"nodeType":"YulFunctionCall","src":"1214:14:28"},"nodeType":"YulIf","src":"1211:2:28"},{"body":{"nodeType":"YulBlock","src":"1316:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1325:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1333:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1318:6:28"},"nodeType":"YulFunctionCall","src":"1318:22:28"},"nodeType":"YulExpressionStatement","src":"1318:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1278:2:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1286:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1294:4:28","type":"","value":"0x60"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1282:3:28"},"nodeType":"YulFunctionCall","src":"1282:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:28"},"nodeType":"YulFunctionCall","src":"1274:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"1302:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1270:3:28"},"nodeType":"YulFunctionCall","src":"1270:35:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1307:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1267:2:28"},"nodeType":"YulFunctionCall","src":"1267:48:28"},"nodeType":"YulIf","src":"1264:2:28"},{"nodeType":"YulAssignment","src":"1351:21:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1365:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1369:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:28"},"nodeType":"YulFunctionCall","src":"1361:11:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1351:6:28"}]},{"nodeType":"YulAssignment","src":"1381:16:28","value":{"name":"length","nodeType":"YulIdentifier","src":"1391:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1381:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"798:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"809:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"821:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"829:6:28","type":""}],"src":"699:704:28"},{"body":{"nodeType":"YulBlock","src":"1478:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"1524:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1533:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1541:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1526:6:28"},"nodeType":"YulFunctionCall","src":"1526:22:28"},"nodeType":"YulExpressionStatement","src":"1526:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1499:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1508:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1495:3:28"},"nodeType":"YulFunctionCall","src":"1495:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1520:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1491:3:28"},"nodeType":"YulFunctionCall","src":"1491:32:28"},"nodeType":"YulIf","src":"1488:2:28"},{"nodeType":"YulVariableDeclaration","src":"1559:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1585:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1572:12:28"},"nodeType":"YulFunctionCall","src":"1572:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1563:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1673:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1682:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1690:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1675:6:28"},"nodeType":"YulFunctionCall","src":"1675:22:28"},"nodeType":"YulExpressionStatement","src":"1675:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1617:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1628:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1635:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1624:3:28"},"nodeType":"YulFunctionCall","src":"1624:46:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1614:2:28"},"nodeType":"YulFunctionCall","src":"1614:57:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1607:6:28"},"nodeType":"YulFunctionCall","src":"1607:65:28"},"nodeType":"YulIf","src":"1604:2:28"},{"nodeType":"YulAssignment","src":"1708:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1718:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1708:6:28"}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1444:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1455:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1467:6:28","type":""}],"src":"1408:321:28"},{"body":{"nodeType":"YulBlock","src":"1835:125:28","statements":[{"nodeType":"YulAssignment","src":"1845:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1868:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1853:3:28"},"nodeType":"YulFunctionCall","src":"1853:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1845:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1887:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1902:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1910:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1898:3:28"},"nodeType":"YulFunctionCall","src":"1898:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:28"},"nodeType":"YulFunctionCall","src":"1880:74:28"},"nodeType":"YulExpressionStatement","src":"1880:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1804:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1815:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1826:4:28","type":""}],"src":"1734:226:28"},{"body":{"nodeType":"YulBlock","src":"2139:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2156:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2167:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2149:6:28"},"nodeType":"YulFunctionCall","src":"2149:21:28"},"nodeType":"YulExpressionStatement","src":"2149:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2190:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2201:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2186:3:28"},"nodeType":"YulFunctionCall","src":"2186:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"2206:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2179:6:28"},"nodeType":"YulFunctionCall","src":"2179:30:28"},"nodeType":"YulExpressionStatement","src":"2179:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2229:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2240:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2225:3:28"},"nodeType":"YulFunctionCall","src":"2225:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"2245:23:28","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2218:6:28"},"nodeType":"YulFunctionCall","src":"2218:51:28"},"nodeType":"YulExpressionStatement","src":"2218:51:28"},{"nodeType":"YulAssignment","src":"2278:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2290:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2301:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2286:3:28"},"nodeType":"YulFunctionCall","src":"2286:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2278:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2116:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2130:4:28","type":""}],"src":"1965:345:28"},{"body":{"nodeType":"YulBlock","src":"2416:117:28","statements":[{"nodeType":"YulAssignment","src":"2426:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2438:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2449:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2434:3:28"},"nodeType":"YulFunctionCall","src":"2434:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2426:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2468:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2483:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2491:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2479:3:28"},"nodeType":"YulFunctionCall","src":"2479:47:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2461:6:28"},"nodeType":"YulFunctionCall","src":"2461:66:28"},"nodeType":"YulExpressionStatement","src":"2461:66:28"}]},"name":"abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2385:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2396:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2407:4:28","type":""}],"src":"2315:218:28"},{"body":{"nodeType":"YulBlock","src":"2695:233:28","statements":[{"nodeType":"YulAssignment","src":"2705:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2717:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2728:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:28"},"nodeType":"YulFunctionCall","src":"2713:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2705:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"2740:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2750:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2744:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2800:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2815:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2823:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2811:3:28"},"nodeType":"YulFunctionCall","src":"2811:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2793:6:28"},"nodeType":"YulFunctionCall","src":"2793:34:28"},"nodeType":"YulExpressionStatement","src":"2793:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2847:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:28"},"nodeType":"YulFunctionCall","src":"2843:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2867:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2875:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2863:3:28"},"nodeType":"YulFunctionCall","src":"2863:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2836:6:28"},"nodeType":"YulFunctionCall","src":"2836:43:28"},"nodeType":"YulExpressionStatement","src":"2836:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2899:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2910:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2895:3:28"},"nodeType":"YulFunctionCall","src":"2895:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"2915:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2888:6:28"},"nodeType":"YulFunctionCall","src":"2888:34:28"},"nodeType":"YulExpressionStatement","src":"2888:34:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2648:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2659:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2667:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2675:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2686:4:28","type":""}],"src":"2538:390:28"},{"body":{"nodeType":"YulBlock","src":"3034:76:28","statements":[{"nodeType":"YulAssignment","src":"3044:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3056:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3067:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3052:3:28"},"nodeType":"YulFunctionCall","src":"3052:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3044:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3086:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3097:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3079:6:28"},"nodeType":"YulFunctionCall","src":"3079:25:28"},"nodeType":"YulExpressionStatement","src":"3079:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3003:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3014:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3025:4:28","type":""}],"src":"2933:177:28"},{"body":{"nodeType":"YulBlock","src":"3212:87:28","statements":[{"nodeType":"YulAssignment","src":"3222:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3234:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3245:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3230:3:28"},"nodeType":"YulFunctionCall","src":"3230:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3222:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3279:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3287:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3275:3:28"},"nodeType":"YulFunctionCall","src":"3275:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3257:6:28"},"nodeType":"YulFunctionCall","src":"3257:36:28"},"nodeType":"YulExpressionStatement","src":"3257:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3181:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3192:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3203:4:28","type":""}],"src":"3115:184:28"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 0x60)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3086":[{"length":32,"start":327},{"length":32,"start":1451},{"length":32,"start":1520},{"length":32,"start":1565}],"3088":[{"length":32,"start":390},{"length":32,"start":922}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c8063b2a5dbfa11610050578063b2a5dbfa146100bd578063cbcbb507146100d2578063f11b8188146100e757610072565b80633373ee4c14610077578063919cd40f146100a0578063aaf5eb68146100a8575b600080fd5b61008a610085366004610906565b610109565b6040516100979190610a7a565b60405180910390f35b61008a610145565b6100b0610169565b6040516100979190610a83565b6100d06100cb366004610938565b61016e565b005b6100da610398565b60405161009791906109d8565b6100fa6100f53660046108ec565b6103bc565b60405161009793929190610a4d565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526020818152604080832093861683526002909301905220545b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd906109f9565b60405180910390fd5b60005b8181101561039357600080600085858581811061020257fe5b905060600201604001602081019061021a91906108ec565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061029984848481811061026557fe5b905060600201604001602081019061027d91906108ec565b8286868681811061028a57fe5b9050606002016020013561047b565b508383838181106102a657fe5b6102bc92602060609092020190810191506109a8565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061030457fe5b905060600201604001602081019061031c91906108ec565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa85858581811061035f57fe5b61037592602060609092020190810191506109a8565b6040516103829190610a30565b60405180910390a2506001016101e9565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060208190529081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b60008282018381101561047457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16428114156104bc57509050610474565b84546000906104e09084906fffffffffffffffffffffffffffffffff16848861057a565b9050828114610541578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc826040516105389190610a7a565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b6000831580610587575081155b806105a3575042836fffffffffffffffffffffffffffffffff16145b806105e057507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156105ec575083610694565b60007f0000000000000000000000000000000000000000000000000000000000000000421161061b574261063d565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600061065d826fffffffffffffffffffffffffffffffff871661069c565b905061068f8761068986610683670de0b6b3a764000061067d8c886106de565b906106de565b90610751565b90610400565b925050505b949350505050565b600061047483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610793565b6000826106ed5750600061013f565b828202828482816106fa57fe5b0414610474576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610a926021913960400191505060405180910390fd5b600061047483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610844565b6000818484111561083c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108015781810151838201526020016107e9565b50505050905090810190601f16801561082e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156108015781810151838201526020016107e9565b5060008385816108b957fe5b0495945050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108e757600080fd5b919050565b6000602082840312156108fd578081fd5b610474826108c3565b60008060408385031215610918578081fd5b610921836108c3565b915061092f602084016108c3565b90509250929050565b6000806020838503121561094a578182fd5b823567ffffffffffffffff80821115610961578384fd5b818501915085601f830112610974578384fd5b813581811115610982578485fd5b866020606083028501011115610996578485fd5b60209290920196919550909350505050565b6000602082840312156109b9578081fd5b81356fffffffffffffffffffffffffffffffff81168114610474578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b90815260200190565b60ff9190911681526020019056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122099d58be43d58bb6efa9365b0b2d2ac115abb0d7b9b5cfee3c0a2f69c857061d664736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2A5DBFA GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0xE7 JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x145 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x202 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x299 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x265 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x28A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x47B JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x2A6 JUMPI INVALID JUMPDEST PUSH2 0x2BC SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x9A8 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x304 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x35F JUMPI INVALID JUMPDEST PUSH2 0x375 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x1E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x474 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x4BC JUMPI POP SWAP1 POP PUSH2 0x474 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4E0 SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x541 JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x587 JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x5A3 JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x5E0 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x5EC JUMPI POP DUP4 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x61B JUMPI TIMESTAMP PUSH2 0x63D JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x65D DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x69C JUMP JUMPDEST SWAP1 POP PUSH2 0x68F DUP8 PUSH2 0x689 DUP7 PUSH2 0x683 PUSH8 0xDE0B6B3A7640000 PUSH2 0x67D DUP13 DUP9 PUSH2 0x6DE JUMP JUMPDEST SWAP1 PUSH2 0x6DE JUMP JUMPDEST SWAP1 PUSH2 0x751 JUMP JUMPDEST SWAP1 PUSH2 0x400 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6ED JUMPI POP PUSH1 0x0 PUSH2 0x13F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x6FA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA92 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x844 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x801 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x82E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x801 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7E9 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x8B9 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x474 DUP3 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x918 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x921 DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x92F PUSH1 0x20 DUP5 ADD PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x961 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x974 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x982 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x996 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x474 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SWAP10 0xD5 DUP12 0xE4 RETURNDATASIZE PC 0xBB PUSH15 0xFA9365B0B2D2AC115ABB0D7B9B5CFE 0xE3 0xC0 LOG2 0xF6 SWAP13 DUP6 PUSH17 0x61D664736F6C6343000705003300000000 ","sourceMap":"422:7622:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7914:128;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;666:41;;;:::i;758:36::-;;;:::i;:::-;;;;;;;:::i;1406:709::-;;;;;;:::i;:::-;;:::i;:::-;;712:41;;;:::i;:::-;;;;;;;:::i;799:43::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;7914:128::-;8012:13;;;;7990:7;8012:13;;;;;;;;;;;:25;;;;;:19;;;;:25;;;;7914:128;;;;;:::o;666:41::-;;;:::o;758:36::-;792:2;758:36;:::o;1406:709::-;1538:10;:30;1552:16;1538:30;;1530:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1606:9;1601:510;1621:28;;;1601:510;;;1664:29;1696:6;:44;1703:17;;1721:1;1703:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1696:44;;;;;;;;;;;;;;;1664:76;;1749:142;1784:17;;1802:1;1784:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1830:11;1851:17;;1869:1;1851:20;;;;;;;;;;;;:32;;;1749:25;:142::i;:::-;;1932:17;;1950:1;1932:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;1932:38:20;:::i;:::-;1900:70;;;;;;;;;;;;2012:17;;2030:1;2012:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1984:120;;;2058:17;;2076:1;2058:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;2058:38:20;:::i;:::-;1984:120;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1651:3:20;;1601:510;;;;1406:709;;:::o;712:41::-;;;:::o;799:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;913:162:19:-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;2526:689:20:-;2706:17;;;;2759:31;;2672:7;;2706:17;2759:31;;;;;2801:15;:38;;2797:74;;;-1:-1:-1;2856:8:20;-1:-1:-1;2849:15:20;;2797:74;2927:29;;2877:16;;2902:89;;2917:8;;2927:29;;2958:19;2979:11;2902:14;:89::i;:::-;2877:114;;3014:8;3002;:20;2998:126;;3052:8;3032:11;:17;;:28;;;;3091:15;3073:44;;;3108:8;3073:44;;;;;;:::i;:::-;;;;;;;;2998:126;3130:58;;;3172:15;3130:58;;;;;;;;;3202:8;-1:-1:-1;;;2526:689:20;;;;;:::o;7011:693::-;7178:7;7204:22;;;:49;;-1:-1:-1;7236:17:20;;7204:49;:97;;;;7286:15;7263:19;:38;;;7204:97;:146;;;;7334:16;7311:19;:39;;;;7204:146;7193:198;;;-1:-1:-1;7372:12:20;7365:19;;7193:198;7397:24;7448:16;7430:15;:34;:71;;7486:15;7430:71;;;7467:16;7430:71;7397:104;-1:-1:-1;7507:17:20;7527:41;7397:104;7527:41;;;:20;:41::i;:::-;7507:61;-1:-1:-1;7587:112:20;7679:12;7587:78;7652:12;7587:60;7624:22;7587:32;:17;7507:61;7587:21;:32::i;:::-;:36;;:60::i;:::-;:64;;:78::i;:::-;:82;;:112::i;:::-;7574:125;;;;7011:693;;;;;;;:::o;1319:128:19:-;1377:7;1399:43;1403:1;1406;1399:43;;;;;;;;;;;;;;;;;:3;:43::i;2120:419::-;2178:7;2403:6;2399:35;;-1:-1:-1;2426:1:19;2419:8;;2399:35;2452:5;;;2456:1;2452;:5;:1;2471:5;;;;;:10;2463:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:124;3028:7;3050:39;3054:1;3057;3050:39;;;;;;;;;;;;;;;;;:3;:39::i;1711:189::-;1813:7;1844:12;1836:6;;;;1828:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1875:5:19;;;1711:189::o;3545:332::-;3647:7;3739:12;3732:5;3724:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:9;3774:1;3770;:5;;;;;;;3545:332;-1:-1:-1;;;;;3545:332:19:o;14:198:28:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;113:2;65:147;;;:::o;217:198::-;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;420:274::-;;;549:2;537:9;528:7;524:23;520:32;517:2;;;570:6;562;555:22;517:2;598:31;619:9;598:31;:::i;:::-;588:41;;648:40;684:2;673:9;669:18;648:40;:::i;:::-;638:50;;507:187;;;;;:::o;699:704::-;;;882:2;870:9;861:7;857:23;853:32;850:2;;;903:6;895;888:22;850:2;948:9;935:23;977:18;1018:2;1010:6;1007:14;1004:2;;;1039:6;1031;1024:22;1004:2;1082:6;1071:9;1067:22;1057:32;;1127:7;1120:4;1116:2;1112:13;1108:27;1098:2;;1154:6;1146;1139:22;1098:2;1199;1186:16;1225:2;1217:6;1214:14;1211:2;;;1246:6;1238;1231:22;1211:2;1307:7;1302:2;1294:4;1286:6;1282:17;1278:2;1274:26;1270:35;1267:48;1264:2;;;1333:6;1325;1318:22;1264:2;1369;1361:11;;;;;1391:6;;-1:-1:-1;840:563:28;;-1:-1:-1;;;;840:563:28:o;1408:321::-;;1520:2;1508:9;1499:7;1495:23;1491:32;1488:2;;;1541:6;1533;1526:22;1488:2;1585:9;1572:23;1635:34;1628:5;1624:46;1617:5;1614:57;1604:2;;1690:6;1682;1675:22;1734:226;1910:42;1898:55;;;;1880:74;;1868:2;1853:18;;1835:125::o;1965:345::-;2167:2;2149:21;;;2206:2;2186:18;;;2179:30;2245:23;2240:2;2225:18;;2218:51;2301:2;2286:18;;2139:171::o;2315:218::-;2491:34;2479:47;;;;2461:66;;2449:2;2434:18;;2416:117::o;2538:390::-;2750:34;2811:15;;;2793:34;;2863:15;;;;2858:2;2843:18;;2836:43;2910:2;2895:18;;2888:34;;;;2728:2;2713:18;;2695:233::o;2933:177::-;3079:25;;;3067:2;3052:18;;3034:76::o;3115:184::-;3287:4;3275:17;;;;3257:36;;3245:2;3230:18;;3212:87::o"},"gasEstimates":{"creation":{"codeDepositCost":"558400","executionCost":"infinite","totalCost":"infinite"},"external":{"DISTRIBUTION_END()":"infinite","EMISSION_MANAGER()":"infinite","PRECISION()":"285","assets(address)":"2200","configureAssets((uint128,uint256,address)[])":"infinite","getUserAssetData(address,address)":"infinite"},"internal":{"_claimRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)":"infinite","_getAssetIndex(uint256,uint256,uint128,uint256)":"infinite","_getRewards(uint256,uint256,uint256)":"infinite","_getUnclaimedRewards(address,struct DistributionTypes.UserStakeInput memory[] memory)":"infinite","_updateAssetStateInternal(address,struct AaveDistributionManager.AssetData storage pointer,uint256)":"infinite","_updateUserAssetInternal(address,address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"DISTRIBUTION_END()":"919cd40f","EMISSION_MANAGER()":"cbcbb507","PRECISION()":"aaf5eb68","assets(address)":"f11b8188","configureAssets((uint128,uint256,address)[])":"b2a5dbfa","getUserAssetData(address,address)":"3373ee4c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"distributionDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"}],\"internalType\":\"struct DistributionTypes.AssetConfigInput[]\",\"name\":\"assetsConfigInput\",\"type\":\"tuple[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"configureAssets((uint128,uint256,address)[])\":{\"details\":\"Configures the distribution of rewards for a list of assets\",\"params\":{\"assetsConfigInput\":\"The list of configurations to apply*\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}}},\"title\":\"AaveDistributionManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Accounting contract to manage multiple staking distributions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/stake/AaveDistributionManager.sol\":\"AaveDistributionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external;\\n}\\n\",\"keccak256\":\"0xb9f57138a1840eea2b01e686f7fcfc296a631ba602c9404b70752ecb8f86f8db\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/AaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\n/**\\n * @title AaveDistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract AaveDistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint128 emissionPerSecond;\\n    uint128 lastUpdateTimestamp;\\n    uint256 index;\\n    mapping(address => uint256) users;\\n  }\\n\\n  uint256 public immutable DISTRIBUTION_END;\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n\\n  constructor(address emissionManager, uint256 distributionDuration) public {\\n    DISTRIBUTION_END = block.timestamp.add(distributionDuration);\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /**\\n   * @dev Configures the distribution of rewards for a list of assets\\n   * @param assetsConfigInput The list of configurations to apply\\n   **/\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external\\n    override\\n  {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address underlyingAsset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, assetConfig.emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      assetConfig.index = newIndex;\\n      emit AssetIndexUpdated(underlyingAsset, newIndex);\\n    }\\n\\n    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)).div(10**uint256(PRECISION));\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= DISTRIBUTION_END\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > DISTRIBUTION_END ? DISTRIBUTION_END : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n\\n  /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n  function getUserAssetData(address user, address asset) public view returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n}\\n\",\"keccak256\":\"0x1f639ee1fe125ee2122aefd7b849b54d548b3dd7623280ae216320e98f2c6d3c\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3095,"contract":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol:AaveDistributionManager","label":"assets","offset":0,"slot":"0","type":"t_mapping(t_address,t_struct(AssetData)3084_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_struct(AssetData)3084_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AaveDistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)3084_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AssetData)3084_storage":{"encoding":"inplace","label":"struct AaveDistributionManager.AssetData","members":[{"astId":3075,"contract":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol:AaveDistributionManager","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint128"},{"astId":3077,"contract":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol:AaveDistributionManager","label":"lastUpdateTimestamp","offset":16,"slot":"0","type":"t_uint128"},{"astId":3079,"contract":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol:AaveDistributionManager","label":"index","offset":0,"slot":"1","type":"t_uint256"},{"astId":3083,"contract":"@aave/safety-module/contracts/stake/AaveDistributionManager.sol:AaveDistributionManager","label":"users","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"96"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Accounting contract to manage multiple staking distributions","version":1}}},"@aave/safety-module/contracts/stake/StakedAave.sol":{"StakedAave":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"stakedToken","type":"address"},{"internalType":"contract IERC20","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"cooldownSeconds","type":"uint256"},{"internalType":"uint256","name":"unstakeWindow","type":"uint256"},{"internalType":"address","name":"rewardsVault","type":"address"},{"internalType":"address","name":"emissionManager","type":"address"},{"internalType":"uint128","name":"distributionDuration","type":"uint128"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"emission","type":"uint256"}],"name":"AssetConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"AssetIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"Cooldown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsAccrued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint128","name":"oldValue","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"newValue","type":"uint128"}],"name":"SnapshotDone","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"UserIndexUpdated","type":"event"},{"inputs":[],"name":"COOLDOWN_SECONDS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISTRIBUTION_END","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMISSION_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARDS_VAULT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARD_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKED_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UNSTAKE_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_aaveGovernance","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_countsSnapshots","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_snapshots","outputs":[{"internalType":"uint128","name":"blockNumber","type":"uint128"},{"internalType":"uint128","name":"value","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"assets","outputs":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint128","name":"lastUpdateTimestamp","type":"uint128"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"address","name":"underlyingAsset","type":"address"}],"internalType":"struct DistributionTypes.AssetConfigInput[]","name":"assetsConfigInput","type":"tuple[]"}],"name":"configureAssets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fromCooldownTimestamp","type":"uint256"},{"internalType":"uint256","name":"amountToReceive","type":"uint256"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"toBalance","type":"uint256"}],"name":"getNextCooldownTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getTotalRewardsBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getUserAssetData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransferHook","name":"aaveGovernance","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakerRewardsToClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakersCooldowns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"returns the allowance of spender on the tokens owned by owner","params":{"owner":"the owner of the tokens","spender":"the user allowed to spend the owner's tokens"},"returns":{"_0":"the amount of owner's tokens spender is allowed to spend*"}},"approve(address,uint256)":{"details":"allows spender to spend the tokens owned by msg.sender","params":{"spender":"the user allowed to spend msg.sender tokens"},"returns":{"_0":"true*"}},"balanceOf(address)":{"returns":{"_0":"the balance of the token*"}},"claimRewards(address,uint256)":{"details":"Claims an `amount` of `REWARD_TOKEN` to the address `to`","params":{"amount":"Amount to stake*","to":"Address to stake for"}},"configureAssets((uint128,uint256,address)[])":{"details":"Configures the distribution of rewards for a list of assets","params":{"assetsConfigInput":"The list of configurations to apply*"}},"cooldown()":{"details":"Activates the cooldown period to unstake - It can't be called if the user is not staking*"},"decimals()":{"returns":{"_0":"the decimals of the token*"}},"decreaseAllowance(address,uint256)":{"details":"decreases the allowance of spender to spend msg.sender tokens","params":{"spender":"the user allowed to spend on behalf of msg.sender","subtractedValue":"the amount being subtracted to the allowance"},"returns":{"_0":"true*"}},"getNextCooldownTimestamp(uint256,uint256,address,uint256)":{"details":"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \"worse\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0","params":{"amountToReceive":"Amount","fromCooldownTimestamp":"Cooldown timestamp of the sender","toAddress":"Address of the recipient","toBalance":"Current balance of the receiver"},"returns":{"_0":"The new cooldown timestamp*"}},"getTotalRewardsBalance(address)":{"details":"Return the total rewards pending to claim by an staker","params":{"staker":"The staker address"},"returns":{"_0":"The rewards"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"increaseAllowance(address,uint256)":{"details":"increases the allowance of spender to spend msg.sender tokens","params":{"addedValue":"the amount being added to the allowance","spender":"the user allowed to spend on behalf of msg.sender"},"returns":{"_0":"true*"}},"initialize(address,string,string,uint8)":{"details":"Called by the proxy contract*"},"name()":{"returns":{"_0":"the name of the token*"}},"redeem(address,uint256)":{"details":"Redeems staked tokens, and stop earning rewards","params":{"amount":"Amount to redeem*","to":"Address to redeem to"}},"symbol()":{"returns":{"_0":"the symbol of the token*"}},"totalSupply()":{"returns":{"_0":"the total supply of the token*"}},"transfer(address,uint256)":{"details":"executes a transfer of tokens from msg.sender to recipient","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}},"transferFrom(address,address,uint256)":{"details":"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens","sender":"the owner of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}}},"title":"StakedAave","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1166:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"227:799:28","statements":[{"body":{"nodeType":"YulBlock","src":"274:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"283:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"291:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"276:6:28"},"nodeType":"YulFunctionCall","src":"276:22:28"},"nodeType":"YulExpressionStatement","src":"276:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"248:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"257:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"244:3:28"},"nodeType":"YulFunctionCall","src":"244:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"269:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"240:3:28"},"nodeType":"YulFunctionCall","src":"240:33:28"},"nodeType":"YulIf","src":"237:2:28"},{"nodeType":"YulVariableDeclaration","src":"309:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"328:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"322:5:28"},"nodeType":"YulFunctionCall","src":"322:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"313:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"374:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"347:26:28"},"nodeType":"YulFunctionCall","src":"347:33:28"},"nodeType":"YulExpressionStatement","src":"347:33:28"},{"nodeType":"YulAssignment","src":"389:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"399:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"389:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"413:40:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"438:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"449:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"434:3:28"},"nodeType":"YulFunctionCall","src":"434:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"428:5:28"},"nodeType":"YulFunctionCall","src":"428:25:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"417:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"489:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"462:26:28"},"nodeType":"YulFunctionCall","src":"462:35:28"},"nodeType":"YulExpressionStatement","src":"462:35:28"},{"nodeType":"YulAssignment","src":"506:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"516:7:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"506:6:28"}]},{"nodeType":"YulAssignment","src":"532:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"552:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"563:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"548:3:28"},"nodeType":"YulFunctionCall","src":"548:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:28"},"nodeType":"YulFunctionCall","src":"542:25:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"532:6:28"}]},{"nodeType":"YulAssignment","src":"576:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"607:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"592:3:28"},"nodeType":"YulFunctionCall","src":"592:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"586:5:28"},"nodeType":"YulFunctionCall","src":"586:25:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"576:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"620:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"645:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"656:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"641:3:28"},"nodeType":"YulFunctionCall","src":"641:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"635:5:28"},"nodeType":"YulFunctionCall","src":"635:26:28"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"624:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"697:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"670:26:28"},"nodeType":"YulFunctionCall","src":"670:35:28"},"nodeType":"YulExpressionStatement","src":"670:35:28"},{"nodeType":"YulAssignment","src":"714:17:28","value":{"name":"value_2","nodeType":"YulIdentifier","src":"724:7:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"714:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"740:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"765:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"776:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"761:3:28"},"nodeType":"YulFunctionCall","src":"761:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"755:5:28"},"nodeType":"YulFunctionCall","src":"755:26:28"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"744:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"817:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"790:26:28"},"nodeType":"YulFunctionCall","src":"790:35:28"},"nodeType":"YulExpressionStatement","src":"790:35:28"},{"nodeType":"YulAssignment","src":"834:17:28","value":{"name":"value_3","nodeType":"YulIdentifier","src":"844:7:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"834:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"860:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"885:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"896:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:28"},"nodeType":"YulFunctionCall","src":"881:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"875:5:28"},"nodeType":"YulFunctionCall","src":"875:26:28"},"variables":[{"name":"value_4","nodeType":"YulTypedName","src":"864:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"968:26:28","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"977:6:28"},{"name":"value6","nodeType":"YulIdentifier","src":"985:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"970:6:28"},"nodeType":"YulFunctionCall","src":"970:22:28"},"nodeType":"YulExpressionStatement","src":"970:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_4","nodeType":"YulIdentifier","src":"923:7:28"},{"arguments":[{"name":"value_4","nodeType":"YulIdentifier","src":"936:7:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"953:3:28","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"958:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"949:3:28"},"nodeType":"YulFunctionCall","src":"949:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"962:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"945:3:28"},"nodeType":"YulFunctionCall","src":"945:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"932:3:28"},"nodeType":"YulFunctionCall","src":"932:33:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"920:2:28"},"nodeType":"YulFunctionCall","src":"920:46:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"913:6:28"},"nodeType":"YulFunctionCall","src":"913:54:28"},"nodeType":"YulIf","src":"910:2:28"},{"nodeType":"YulAssignment","src":"1003:17:28","value":{"name":"value_4","nodeType":"YulIdentifier","src":"1013:7:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1003:6:28"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"145:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"156:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"168:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"176:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"184:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"192:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"200:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"208:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"216:6:28","type":""}],"src":"14:1012:28"},{"body":{"nodeType":"YulBlock","src":"1078:86:28","statements":[{"body":{"nodeType":"YulBlock","src":"1142:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1151:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1154:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1144:6:28"},"nodeType":"YulFunctionCall","src":"1144:12:28"},"nodeType":"YulExpressionStatement","src":"1144:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1101:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1112:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1132:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1123:3:28"},"nodeType":"YulFunctionCall","src":"1123:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1119:3:28"},"nodeType":"YulFunctionCall","src":"1119:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1108:3:28"},"nodeType":"YulFunctionCall","src":"1108:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1098:2:28"},"nodeType":"YulFunctionCall","src":"1098:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1091:6:28"},"nodeType":"YulFunctionCall","src":"1091:50:28"},"nodeType":"YulIf","src":"1088:2:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1067:5:28","type":""}],"src":"1031:133:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        let value_2 := mload(add(headStart, 128))\n        validator_revert_t_address(value_2)\n        value4 := value_2\n        let value_3 := mload(add(headStart, 160))\n        validator_revert_t_address(value_3)\n        value5 := value_3\n        let value_4 := mload(add(headStart, 192))\n        if iszero(eq(value_4, and(value_4, sub(shl(128, 1), 1)))) { revert(value6, value6) }\n        value6 := value_4\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405260006009553480156200001757600080fd5b5060405162003670380380620036708339810160408190526200003a9162000262565b868686868686866040518060400160405280600b81526020016a5374616b6564204161766560a81b8152506040518060400160405280600781526020016673746b4141564560c81b815250601284846001600160801b03168484848282828260039080519060200190620000b0929190620001b6565b508151620000c6906004906020850190620001b6565b5080600560006101000a81548160ff021916908360ff1602179055505050505050506200010281426200015460201b620014f41790919060201c565b608052506001600160601b0319606091821b811660a0529a811b8b1660c05298891b8a1660e05250505061010094909452506101209190915290911b9091166101405250620003189650505050505050565b600082820183811015620001af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001ee576000855562000239565b82601f106200020957805160ff191683800117855562000239565b8280016001018555821562000239579182015b82811115620002395782518255916020019190600101906200021c565b50620002479291506200024b565b5090565b5b808211156200024757600081556001016200024c565b600080600080600080600060e0888a0312156200027d578283fd5b87516200028a81620002ff565b60208901519097506200029d81620002ff565b8096505060408801519450606088015193506080880151620002bf81620002ff565b60a0890151909350620002d281620002ff565b60c08901519092506001600160801b0381168114620002ef578182fd5b8091505092959891949750929550565b6001600160a01b03811681146200031557600080fd5b50565b60805160a05160601c60c05160601c60e05160601c61010051610120516101405160601c6132b7620003b960003980610b795280610d1f5250806106415280610924528061132a5250806105e3528061066952806109cb528061134f525080610c1c5280610ce852508061073c52806108ba5280610f86525080611023528061124b525080610b555280612731528061277652806127a352506132b76000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80638dbefee211610145578063adc9772e116100bd578063dd62ed3e1161008c578063f11b818811610071578063f11b81881461045b578063f1cc432a1461047d578063f6d2ee861461049057610241565b8063dd62ed3e14610440578063dde43cba1461045357610241565b8063adc9772e1461040a578063b2a5dbfa1461041d578063c3863ada14610430578063cbcbb5071461043857610241565b806399248ea711610114578063a457c2d7116100f9578063a457c2d7146103dc578063a9059cbb146103ef578063aaf5eb681461040257610241565b806399248ea7146103c15780639a99b4f0146103c957610241565b80638dbefee214610396578063919cd40f146103a9578063946776cd146103b157806395d89b41146103b957610241565b8063313ce567116101d857806370a08231116101a7578063787a08a61161018c578063787a08a6146103685780637e90d7ef146103705780638779588c1461038357610241565b806370a082311461034d57806372b49d631461036057610241565b8063313ce5671461030a5780633373ee4c1461031f578063359c4a9614610332578063395093511461033a57610241565b80631e9a6950116102145780631e9a6950146102ac57806323b872dd146102c15780632acbf823146102d4578063312f6b83146102f557610241565b806306fdde0314610246578063091030c314610264578063095ea7b31461028457806318160ddd146102a4575b600080fd5b61024e6104a3565b60405161025b9190612e97565b60405180910390f35b610277610272366004612c11565b610557565b60405161025b9190613088565b610297610292366004612ca5565b610569565b60405161025b9190612e8c565b610277610587565b6102bf6102ba366004612ca5565b61058d565b005b6102976102cf366004612c65565b6107cf565b6102e76102e2366004612ca5565b610871565b60405161025b929190613038565b6102fd6108b8565b60405161025b9190612e45565b6103126108dc565b60405161025b9190613091565b61027761032d366004612c2d565b6108e5565b610277610922565b610297610348366004612ca5565b610946565b61027761035b366004612c11565b6109a1565b6102776109c9565b6102bf6109ed565b61027761037e366004612c11565b610a66565b610277610391366004612c11565b610a78565b6102776103a4366004612c11565b610a8a565b610277610b53565b6102fd610b77565b61024e610b9b565b6102fd610c1a565b6102bf6103d7366004612ca5565b610c3e565b6102976103ea366004612ca5565b610db0565b6102976103fd366004612ca5565b610e25565b610312610e39565b6102bf610418366004612ca5565b610e3e565b6102bf61042b366004612cd0565b61100b565b6102fd61122d565b6102fd611249565b61027761044e366004612c2d565b61126d565b6102776112a5565b61046e610469366004612c11565b6112aa565b60405161025b9392919061305b565b61027761048b366004612e07565b6112ee565b6102bf61049e366004612d40565b6113f2565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061057d610576611568565b848461156c565b5060015b92915050565b60025490565b806105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b60405180910390fd5b336000908152603e6020526040902054610607817f00000000000000000000000000000000000000000000000000000000000000006114f4565b421161063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f3f565b7f000000000000000000000000000000000000000000000000000000000000000061069461068d837f00000000000000000000000000000000000000000000000000000000000000006114f4565b42906116b3565b11156106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fad565b60006106d7336109a1565b905060008184116106e857836106ea565b815b90506106f8338360016116f5565b5061070333826117b4565b61070d82826116b3565b61072257336000908152603e60205260408120555b61076373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836118fe565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d9836040516107c09190613088565b60405180910390a35050505050565b60006107dc84848461198b565b610866846107e8611568565b610861856040518060600160405280602881526020016131736028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610833611568565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190611a98565b61156c565b5060015b9392505050565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061057d610953611568565b846108618560016000610964611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c1681529252902054906114f4565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109f6336109a1565b610a2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fe4565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b603d6020526000908152604090205481565b60076020526000908152604090205481565b60408051600180825281830190925260009160609190816020015b610aad612af2565b815260200190600190039081610aa557905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610af2856109a1565b8152602001610aff610587565b81525081600081518110610b0f57fe5b602002602001018190525061086a610b278483611b49565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d6020526040902054906114f4565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c5433610c4d336109a1565b60006116f5565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314610c855782610c87565b815b9050610cd3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e5400000000000000000000000000000000000081525084611a989092919063ffffffff16565b336000908152603d6020526040902055610d457f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051610da29190613088565b60405180910390a350505050565b600061057d610dbd611568565b846108618560405180606001604052806025815260200161325d6025913960016000610de7611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190611a98565b600061057d610e32611568565b848461198b565b601281565b80610e75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b6000610e80836109a1565b90506000610e97843084610e92610587565b611d0c565b90508015610f2f577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a768482604051610ed0929190612e66565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d6020526040902054610f0890826114f4565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b610f3c60008486856112ee565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902055610f6c8484611de5565b610fae73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051610da29190613088565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461107a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f76565b60005b81811015611228576000603c600085858581811061109757fe5b90506060020160400160208101906110af9190612c11565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061112e8484848181106110fa57fe5b90506060020160400160208101906111129190612c11565b8286868681811061111f57fe5b90506060020160200135611f16565b5083838381811061113b57fe5b6111519260206060909202019081019150612dd7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061119957fe5b90506060020160400160208101906111b19190612c11565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106111f457fe5b61120a9260206060909202019081019150612dd7565b604051611217919061301b565b60405180910390a25060010161107d565b505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600181565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e6020526040812054806113235760009150506113ea565b60006113797f0000000000000000000000000000000000000000000000000000000000000000611373427f00000000000000000000000000000000000000000000000000000000000000006116b3565b906116b3565b90508181111561138c57600091506113e6565b600087821161139b578761139d565b425b9050828110156113b2578293505050506113ea565b6113e26113bf88876114f4565b6113dc6113cc8887612015565b6113d68b86612015565b906114f4565b90612088565b9250505b5090505b949350505050565b60006113fc6120ca565b90506009548111611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061319b602e913960400191505060405180910390fd5b6009819055604080516020601f880181900481028201810190925286815261149a9188908890819084018382808284376000920191909152506120cf92505050565b6114d984848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120e692505050565b6114e2826120f9565b6114eb8761212d565b50505050505050565b60008282018381101561086a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b73ffffffffffffffffffffffffffffffffffffffff83166115d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061320f6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061310a6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061086a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a98565b600080611706853086610e92610587565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d60205260408120549192509061173a90836114f4565b905081156117ab5783156117715773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7686836040516117a2929190612e66565b60405180910390a15b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131c96021913960400191505060405180910390fd5b61182c82600083612174565b611876816040518060600160405280602281526020016130e86022913973ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546118a990826116b3565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526112289084906122f2565b6000611996846109a1565b90506119a4848260016116f5565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a875760006119e3846109a1565b90506119f1848260016116f5565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902054611a24818587856112ee565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260409020558284148015611a5857508015155b15611a845773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b611a92848484612530565b50505050565b60008184841115611b41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b06578181015183820152602001611aee565b50505050905090810190601f168015611b335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600080805b8351811015611c6f576000603c6000868481518110611b6957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040016000908120600181015481548851929450611bf4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a9088908110611be357fe5b602002602001015160400151612700565b9050611c63611c5c878581518110611c0857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612814565b85906114f4565b93505050600101611b4e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611a929085906122f2565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280611d54888588611f16565b9050808314611dd9578615611d7157611d6e878285612814565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90611dd0908590613088565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611e6757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611e7360008383612174565b600254611e8090826114f4565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611eb390826114f4565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415611f575750905061086a565b8454600090611f7b9084906fffffffffffffffffffffffffffffffff168488612700565b9050828114611fdc578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051611fd39190613088565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b60008261202457506000610581565b8282028284828161203157fe5b041461086a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131526021913960400191505060405180910390fd5b600061086a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612836565b600190565b80516120e2906003906020840190612b29565b5050565b80516120e2906004906020840190612b29565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156121ad57611228565b73ffffffffffffffffffffffffffffffffffffffff8316156121ec5760006121d4846109a1565b90506121ea84826121e581866116b3565b6128b5565b505b73ffffffffffffffffffffffffffffffffffffffff821615612226576000612213836109a1565b905061222483826121e581866114f4565b505b60085473ffffffffffffffffffffffffffffffffffffffff168015611a92578073ffffffffffffffffffffffffffffffffffffffff16634a3931498585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156122d457600080fd5b505af11580156122e8573d6000803e3d6000fd5b5050505050505050565b6123118273ffffffffffffffffffffffffffffffffffffffff16612ab9565b61237c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123e557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123a8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612447576040519150601f19603f3d011682016040523d82523d6000602084013e61244c565b606091505b5091509150816124bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611a92578080602001905160208110156124d957600080fd5b5051611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613233602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831661259c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806131ea6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130c56023913960400191505060405180910390fd5b612613838383612174565b61265d8160405180606001604052806026815260200161312c6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461269990826114f4565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600083158061270d575081155b80612729575042836fffffffffffffffffffffffffffffffff16145b8061276657507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156127725750836113ea565b60007f000000000000000000000000000000000000000000000000000000000000000042116127a157426127c3565b7f00000000000000000000000000000000000000000000000000000000000000005b905060006127e3826fffffffffffffffffffffffffffffffff87166116b3565b9050612809876113d6866113dc670de0b6b3a76400006128038c88612015565b90612015565b979650505050505050565b60006113ea670de0b6b3a76400006113dc61282f86866116b3565b8790612015565b6000818361289f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315611b06578181015183820152602001611aee565b5060008385816128ab57fe5b0495945050505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600760209081526040808320546006909252909120439190811580159061293957506fffffffffffffffffffffffffffffffff83168160006129148560016116b3565b81526020810191909152604001600020546fffffffffffffffffffffffffffffffff16145b15612993578381600061294d8560016116b3565b8152602081019190915260400160002080546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055612a49565b6040805180820182526fffffffffffffffffffffffffffffffff80861682528681166020808401918252600087815290869052939093209151825493518216700100000000000000000000000000000000029082167fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169390931716919091179055612a228260016114f4565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600760205260409020555b6040805173ffffffffffffffffffffffffffffffffffffffff881681526fffffffffffffffffffffffffffffffff808816602083015286168183015290517f2cd3c83ddac2953ee75f53265d9ea4463eaf05030e5459a1b7e63819b7ce88f79181900360600190a1505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113ea575050151592915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612b5f5760008555612ba5565b82601f10612b7857805160ff1916838001178555612ba5565b82800160010185558215612ba5579182015b82811115612ba5578251825591602001919060010190612b8a565b50612bb1929150612bb5565b5090565b5b80821115612bb15760008155600101612bb6565b60008083601f840112612bdb578182fd5b50813567ffffffffffffffff811115612bf2578182fd5b602083019150836020828501011115612c0a57600080fd5b9250929050565b600060208284031215612c22578081fd5b813561086a8161309f565b60008060408385031215612c3f578081fd5b8235612c4a8161309f565b91506020830135612c5a8161309f565b809150509250929050565b600080600060608486031215612c79578081fd5b8335612c848161309f565b92506020840135612c948161309f565b929592945050506040919091013590565b60008060408385031215612cb7578182fd5b8235612cc28161309f565b946020939093013593505050565b60008060208385031215612ce2578182fd5b823567ffffffffffffffff80821115612cf9578384fd5b818501915085601f830112612d0c578384fd5b813581811115612d1a578485fd5b866020606083028501011115612d2e578485fd5b60209290920196919550909350505050565b60008060008060008060808789031215612d58578182fd5b8635612d638161309f565b9550602087013567ffffffffffffffff80821115612d7f578384fd5b612d8b8a838b01612bca565b90975095506040890135915080821115612da3578384fd5b50612db089828a01612bca565b909450925050606087013560ff81168114612dc9578182fd5b809150509295509295509295565b600060208284031215612de8578081fd5b81356fffffffffffffffffffffffffffffffff8116811461086a578182fd5b60008060008060808587031215612e1c578384fd5b84359350602085013592506040850135612e358161309f565b9396929550929360600135925050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015612ec357858101830151858201604001528201612ea7565b81811115612ed45783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b90815260200190565b60ff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146130c157600080fd5b5056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122039bef5afce8f6ff90bfcc67f6bfa85b468995fc2f3183adda3faef1fab23d00f64736f6c63430007050033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3670 CODESIZE SUB DUP1 PUSH3 0x3670 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x262 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x5374616B65642041617665 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x73746B41415645 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH1 0x12 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 DUP5 DUP5 DUP3 DUP3 DUP3 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB0 SWAP3 SWAP2 SWAP1 PUSH3 0x1B6 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0xC6 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1B6 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x102 DUP2 TIMESTAMP PUSH3 0x154 PUSH1 0x20 SHL PUSH3 0x14F4 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0xA0 MSTORE SWAP11 DUP2 SHL DUP12 AND PUSH1 0xC0 MSTORE SWAP9 DUP10 SHL DUP11 AND PUSH1 0xE0 MSTORE POP POP POP PUSH2 0x100 SWAP5 SWAP1 SWAP5 MSTORE POP PUSH2 0x120 SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 SHL SWAP1 SWAP2 AND PUSH2 0x140 MSTORE POP PUSH3 0x318 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x1AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1EE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x239 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x209 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x239 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x239 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x239 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x21C JUMP JUMPDEST POP PUSH3 0x247 SWAP3 SWAP2 POP PUSH3 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x247 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x24C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x27D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x28A DUP2 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH3 0x29D DUP2 PUSH3 0x2FF JUMP JUMPDEST DUP1 SWAP7 POP POP PUSH1 0x40 DUP9 ADD MLOAD SWAP5 POP PUSH1 0x60 DUP9 ADD MLOAD SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD PUSH3 0x2BF DUP2 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x2D2 DUP2 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2EF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x32B7 PUSH3 0x3B9 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xB79 MSTORE DUP1 PUSH2 0xD1F MSTORE POP DUP1 PUSH2 0x641 MSTORE DUP1 PUSH2 0x924 MSTORE DUP1 PUSH2 0x132A MSTORE POP DUP1 PUSH2 0x5E3 MSTORE DUP1 PUSH2 0x669 MSTORE DUP1 PUSH2 0x9CB MSTORE DUP1 PUSH2 0x134F MSTORE POP DUP1 PUSH2 0xC1C MSTORE DUP1 PUSH2 0xCE8 MSTORE POP DUP1 PUSH2 0x73C MSTORE DUP1 PUSH2 0x8BA MSTORE DUP1 PUSH2 0xF86 MSTORE POP DUP1 PUSH2 0x1023 MSTORE DUP1 PUSH2 0x124B MSTORE POP DUP1 PUSH2 0xB55 MSTORE DUP1 PUSH2 0x2731 MSTORE DUP1 PUSH2 0x2776 MSTORE DUP1 PUSH2 0x27A3 MSTORE POP PUSH2 0x32B7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x241 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBEFEE2 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF11B8188 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xF6D2EE86 EQ PUSH2 0x490 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x453 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x438 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x402 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x3C9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x787A08A6 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x8779588C EQ PUSH2 0x383 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x360 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x33A JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x1E9A6950 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2ACBF823 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x2F5 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST PUSH2 0x277 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C65 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP3 SWAP2 SWAP1 PUSH2 0x3038 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x277 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH2 0x277 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x312 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD0 JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x122D JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST PUSH2 0x277 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST PUSH2 0x277 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D40 JUMP JUMPDEST PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x530 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x576 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x607 DUP2 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH32 0x0 PUSH2 0x694 PUSH2 0x68D DUP4 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x16B3 JUMP JUMPDEST GT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 CALLER PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x6E8 JUMPI DUP4 PUSH2 0x6EA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x6F8 CALLER DUP4 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH2 0x703 CALLER DUP3 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x70D DUP3 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x722 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x763 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x18FE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP5 DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x866 DUP5 PUSH2 0x7E8 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3173 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x833 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x953 PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x964 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9F6 CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FE4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAAD PUSH2 0x2AF2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAA5 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF2 DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAFF PUSH2 0x587 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB0F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x86A PUSH2 0xB27 DUP5 DUP4 PUSH2 0x1B49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC54 CALLER PUSH2 0xC4D CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0xC85 JUMPI DUP3 PUSH2 0xC87 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0xCD3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1A98 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xD45 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xDBD PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x325D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDE7 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xE32 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE80 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE97 DUP5 ADDRESS DUP5 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED0 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF08 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xF3C PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xF6C DUP5 DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0xFAE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1097 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x112E DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x10FA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x111F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F16 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x113B JUMPI INVALID JUMPDEST PUSH2 0x1151 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1199 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH2 0x120A SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x301B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x107D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1323 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 PUSH32 0x0 PUSH2 0x1373 TIMESTAMP PUSH32 0x0 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x139B JUMPI DUP8 PUSH2 0x139D JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x13E2 PUSH2 0x13BF DUP9 DUP8 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x13DC PUSH2 0x13CC DUP9 DUP8 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x13D6 DUP12 DUP7 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC PUSH2 0x20CA JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x319B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE PUSH2 0x149A SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20CF SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20E6 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14E2 DUP3 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x14EB DUP8 PUSH2 0x212D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x320F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x310A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1706 DUP6 ADDRESS DUP7 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x173A SWAP1 DUP4 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x17AB JUMPI DUP4 ISZERO PUSH2 0x1771 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17A2 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31C9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x182C DUP3 PUSH1 0x0 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30E8 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x18A9 SWAP1 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1228 SWAP1 DUP5 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A4 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A87 JUMPI PUSH1 0x0 PUSH2 0x19E3 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F1 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A24 DUP2 DUP6 DUP8 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x1A58 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1A84 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x1A92 DUP5 DUP5 DUP5 PUSH2 0x2530 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B33 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1C6F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B69 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x1BF4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x1BE3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C63 PUSH2 0x1C5C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2814 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x1B4E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1A92 SWAP1 DUP6 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x1D54 DUP9 DUP6 DUP9 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1DD9 JUMPI DUP7 ISZERO PUSH2 0x1D71 JUMPI PUSH2 0x1D6E DUP8 DUP3 DUP6 PUSH2 0x2814 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x1DD0 SWAP1 DUP6 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1E67 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1E73 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1E80 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1EB3 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x1F57 JUMPI POP SWAP1 POP PUSH2 0x86A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1F7B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x1FDC JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2024 JUMPI POP PUSH1 0x0 PUSH2 0x581 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2031 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3152 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21AD JUMPI PUSH2 0x1228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x21EC JUMPI PUSH1 0x0 PUSH2 0x21D4 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x21EA DUP5 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x28B5 JUMP JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x2226 JUMPI PUSH1 0x0 PUSH2 0x2213 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2224 DUP4 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x14F4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1A92 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A393149 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2311 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x237C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23E5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2447 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x244C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A92 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3233 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x259C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31EA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30C5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2613 DUP4 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x312C PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2699 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x270D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x2729 JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x2766 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x2772 JUMPI POP DUP4 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x27A1 JUMPI TIMESTAMP PUSH2 0x27C3 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27E3 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2809 DUP8 PUSH2 0x13D6 DUP7 PUSH2 0x13DC PUSH8 0xDE0B6B3A7640000 PUSH2 0x2803 DUP13 DUP9 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x2015 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA PUSH8 0xDE0B6B3A7640000 PUSH2 0x13DC PUSH2 0x282F DUP7 DUP7 PUSH2 0x16B3 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x289F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x28AB JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2939 JUMPI POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 PUSH1 0x0 PUSH2 0x2914 DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2993 JUMPI DUP4 DUP2 PUSH1 0x0 PUSH2 0x294D DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP4 MLOAD DUP3 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A22 DUP3 PUSH1 0x1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x2CD3C83DDAC2953EE75F53265D9EA4463EAF05030E5459A1B7E63819B7CE88F7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x13EA JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B5F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B78 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BA5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BA5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B8A JUMP JUMPDEST POP PUSH2 0x2BB1 SWAP3 SWAP2 POP PUSH2 0x2BB5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BDB JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C22 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x86A DUP2 PUSH2 0x309F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C3F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C4A DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C5A DUP2 PUSH2 0x309F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C84 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C94 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CC2 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CF9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D0C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D1A JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2D2E JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D58 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2D63 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D7F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2D8B DUP11 DUP4 DUP12 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DA3 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2DB0 DUP10 DUP3 DUP11 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2DC9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x86A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E1C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2E35 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EC3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2EA7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2ED4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x30C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 CODECOPY 0xBE CREATE2 0xAF 0xCE DUP16 PUSH16 0xF90BFCC67F6BFA85B468995FC2F3183A 0xDD LOG3 STATICCALL 0xEF 0x1F 0xAB 0x23 0xD0 0xF PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"293:620:21:-:0;;;924:1:25;881:44;;470:441:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;713:11;732;751:15;774:13;795:12;815:15;838:20;866:4;;;;;;;;;;;;;-1:-1:-1;;;866:4:21;;;878:6;;;;;;;;;;;;;-1:-1:-1;;;878:6:21;;;463:2;2222:15:23;2239:20;-1:-1:-1;;;;;1068:185:20;2170:4:23;2176:6;2184:8;1171:4:16;1177:6;1185:8;757:4:15;749:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;767:16:15;;;;:7;;:16;;;;;:::i;:::-;;801:8;789:9;;:20;;;;;;;;;;;;;;;;;;650:164;;;1072:125:16;;;1167:41:20;1187:20;1167:15;:19;;;;;;:41;;;;:::i;:::-;1148:60;;-1:-1:-1;;;;;;;1214:34:20;;;;;;;;2269:26:23;;;;;::::2;::::0;2301;;;;;::::2;::::0;-1:-1:-1;;;2333:34:23::2;::::0;;;;-1:-1:-1;2373:30:23::2;::::0;;;;2409:28;;;;;;::::2;::::0;-1:-1:-1;293:620:21;;-1:-1:-1;;;;;;;293:620:21;913:162:19;971:7;998:5;;;1017:6;;;;1009:46;;;;;-1:-1:-1;;;1009:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;293:620:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;293:620:21;;;-1:-1:-1;293:620:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1012:28;;;;;;;;269:3;257:9;248:7;244:23;240:33;237:2;;;291:6;283;276:22;237:2;328:9;322:16;347:33;374:5;347:33;:::i;:::-;449:2;434:18;;428:25;399:5;;-1:-1:-1;462:35:28;428:25;462:35;:::i;:::-;516:7;506:17;;;563:2;552:9;548:18;542:25;532:35;;607:2;596:9;592:18;586:25;576:35;;656:3;645:9;641:19;635:26;670:35;697:7;670:35;:::i;:::-;776:3;761:19;;755:26;724:7;;-1:-1:-1;790:35:28;755:26;790:35;:::i;:::-;896:3;881:19;;875:26;844:7;;-1:-1:-1;;;;;;932:33:28;;920:46;;910:2;;985:6;977;970:22;910:2;1013:7;1003:17;;;227:799;;;;;;;;;;:::o;1031:133::-;-1:-1:-1;;;;;1108:31:28;;1098:42;;1088:2;;1154:1;1151;1144:12;1088:2;1078:86;:::o;:::-;293:620:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9592:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"89:303:28","statements":[{"body":{"nodeType":"YulBlock","src":"138:30:28","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"147:8:28"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"157:8:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"140:6:28"},"nodeType":"YulFunctionCall","src":"140:26:28"},"nodeType":"YulExpressionStatement","src":"140:26:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"117:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"125:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"113:3:28"},"nodeType":"YulFunctionCall","src":"113:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"132:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"109:3:28"},"nodeType":"YulFunctionCall","src":"109:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"102:6:28"},"nodeType":"YulFunctionCall","src":"102:35:28"},"nodeType":"YulIf","src":"99:2:28"},{"nodeType":"YulAssignment","src":"177:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"200:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"187:12:28"},"nodeType":"YulFunctionCall","src":"187:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"177:6:28"}]},{"body":{"nodeType":"YulBlock","src":"250:30:28","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"259:8:28"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"269:8:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"252:6:28"},"nodeType":"YulFunctionCall","src":"252:26:28"},"nodeType":"YulExpressionStatement","src":"252:26:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"222:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"230:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"219:2:28"},"nodeType":"YulFunctionCall","src":"219:30:28"},"nodeType":"YulIf","src":"216:2:28"},{"nodeType":"YulAssignment","src":"289:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"305:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"313:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"301:3:28"},"nodeType":"YulFunctionCall","src":"301:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"289:8:28"}]},{"body":{"nodeType":"YulBlock","src":"370:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"382:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"372:6:28"},"nodeType":"YulFunctionCall","src":"372:12:28"},"nodeType":"YulExpressionStatement","src":"372:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"341:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"349:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"337:3:28"},"nodeType":"YulFunctionCall","src":"337:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"358:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"333:3:28"},"nodeType":"YulFunctionCall","src":"333:30:28"},{"name":"end","nodeType":"YulIdentifier","src":"365:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"330:2:28"},"nodeType":"YulFunctionCall","src":"330:39:28"},"nodeType":"YulIf","src":"327:2:28"}]},"name":"abi_decode_t_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"68:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"78:6:28","type":""}],"src":"14:378:28"},{"body":{"nodeType":"YulBlock","src":"467:189:28","statements":[{"body":{"nodeType":"YulBlock","src":"513:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"522:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"530:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"515:6:28"},"nodeType":"YulFunctionCall","src":"515:22:28"},"nodeType":"YulExpressionStatement","src":"515:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"488:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"484:3:28"},"nodeType":"YulFunctionCall","src":"484:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"509:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"480:3:28"},"nodeType":"YulFunctionCall","src":"480:32:28"},"nodeType":"YulIf","src":"477:2:28"},{"nodeType":"YulVariableDeclaration","src":"548:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"561:12:28"},"nodeType":"YulFunctionCall","src":"561:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"552:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"593:26:28"},"nodeType":"YulFunctionCall","src":"593:33:28"},"nodeType":"YulExpressionStatement","src":"593:33:28"},{"nodeType":"YulAssignment","src":"635:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"645:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"635:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"433:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"444:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"456:6:28","type":""}],"src":"397:259:28"},{"body":{"nodeType":"YulBlock","src":"748:315:28","statements":[{"body":{"nodeType":"YulBlock","src":"794:26:28","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"803:6:28"},{"name":"value1","nodeType":"YulIdentifier","src":"811:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"796:6:28"},"nodeType":"YulFunctionCall","src":"796:22:28"},"nodeType":"YulExpressionStatement","src":"796:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"769:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"778:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"765:3:28"},"nodeType":"YulFunctionCall","src":"765:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"790:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"761:3:28"},"nodeType":"YulFunctionCall","src":"761:32:28"},"nodeType":"YulIf","src":"758:2:28"},{"nodeType":"YulVariableDeclaration","src":"829:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"855:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"842:12:28"},"nodeType":"YulFunctionCall","src":"842:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"833:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"901:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"874:26:28"},"nodeType":"YulFunctionCall","src":"874:33:28"},"nodeType":"YulExpressionStatement","src":"874:33:28"},{"nodeType":"YulAssignment","src":"916:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"926:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"916:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"940:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"972:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"983:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"968:3:28"},"nodeType":"YulFunctionCall","src":"968:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"955:12:28"},"nodeType":"YulFunctionCall","src":"955:32:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"944:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1023:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"996:26:28"},"nodeType":"YulFunctionCall","src":"996:35:28"},"nodeType":"YulExpressionStatement","src":"996:35:28"},{"nodeType":"YulAssignment","src":"1040:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1050:7:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1040:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"706:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"717:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"729:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"737:6:28","type":""}],"src":"661:402:28"},{"body":{"nodeType":"YulBlock","src":"1172:366:28","statements":[{"body":{"nodeType":"YulBlock","src":"1218:26:28","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1227:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"1235:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1220:6:28"},"nodeType":"YulFunctionCall","src":"1220:22:28"},"nodeType":"YulExpressionStatement","src":"1220:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1202:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1189:3:28"},"nodeType":"YulFunctionCall","src":"1189:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1185:3:28"},"nodeType":"YulFunctionCall","src":"1185:32:28"},"nodeType":"YulIf","src":"1182:2:28"},{"nodeType":"YulVariableDeclaration","src":"1253:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1279:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1266:12:28"},"nodeType":"YulFunctionCall","src":"1266:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1257:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1298:26:28"},"nodeType":"YulFunctionCall","src":"1298:33:28"},"nodeType":"YulExpressionStatement","src":"1298:33:28"},{"nodeType":"YulAssignment","src":"1340:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1350:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1340:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1364:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1396:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1407:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:28"},"nodeType":"YulFunctionCall","src":"1392:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1379:12:28"},"nodeType":"YulFunctionCall","src":"1379:32:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1368:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1447:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1420:26:28"},"nodeType":"YulFunctionCall","src":"1420:35:28"},"nodeType":"YulExpressionStatement","src":"1420:35:28"},{"nodeType":"YulAssignment","src":"1464:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1474:7:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1464:6:28"}]},{"nodeType":"YulAssignment","src":"1490:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1528:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:28"},"nodeType":"YulFunctionCall","src":"1513:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1500:12:28"},"nodeType":"YulFunctionCall","src":"1500:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1490:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1122:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1133:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1145:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1153:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1161:6:28","type":""}],"src":"1068:470:28"},{"body":{"nodeType":"YulBlock","src":"1630:240:28","statements":[{"body":{"nodeType":"YulBlock","src":"1676:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1685:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1693:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1678:6:28"},"nodeType":"YulFunctionCall","src":"1678:22:28"},"nodeType":"YulExpressionStatement","src":"1678:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1651:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1660:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1647:3:28"},"nodeType":"YulFunctionCall","src":"1647:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1672:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1643:3:28"},"nodeType":"YulFunctionCall","src":"1643:32:28"},"nodeType":"YulIf","src":"1640:2:28"},{"nodeType":"YulVariableDeclaration","src":"1711:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1737:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1724:12:28"},"nodeType":"YulFunctionCall","src":"1724:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1715:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1783:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1756:26:28"},"nodeType":"YulFunctionCall","src":"1756:33:28"},"nodeType":"YulExpressionStatement","src":"1756:33:28"},{"nodeType":"YulAssignment","src":"1798:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1808:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1798:6:28"}]},{"nodeType":"YulAssignment","src":"1822:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1849:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1860:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1845:3:28"},"nodeType":"YulFunctionCall","src":"1845:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1832:12:28"},"nodeType":"YulFunctionCall","src":"1832:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1822:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1588:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1599:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1611:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1619:6:28","type":""}],"src":"1543:327:28"},{"body":{"nodeType":"YulBlock","src":"2016:563:28","statements":[{"body":{"nodeType":"YulBlock","src":"2062:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2071:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2079:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2064:6:28"},"nodeType":"YulFunctionCall","src":"2064:22:28"},"nodeType":"YulExpressionStatement","src":"2064:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2037:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2046:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2033:3:28"},"nodeType":"YulFunctionCall","src":"2033:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2058:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2029:3:28"},"nodeType":"YulFunctionCall","src":"2029:32:28"},"nodeType":"YulIf","src":"2026:2:28"},{"nodeType":"YulVariableDeclaration","src":"2097:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2124:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2111:12:28"},"nodeType":"YulFunctionCall","src":"2111:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2101:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2143:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2153:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2147:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2198:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2207:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2215:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2200:6:28"},"nodeType":"YulFunctionCall","src":"2200:22:28"},"nodeType":"YulExpressionStatement","src":"2200:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2186:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2194:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2183:2:28"},"nodeType":"YulFunctionCall","src":"2183:14:28"},"nodeType":"YulIf","src":"2180:2:28"},{"nodeType":"YulVariableDeclaration","src":"2233:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2247:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2258:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2243:3:28"},"nodeType":"YulFunctionCall","src":"2243:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2237:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2313:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2322:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2330:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2315:6:28"},"nodeType":"YulFunctionCall","src":"2315:22:28"},"nodeType":"YulExpressionStatement","src":"2315:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2292:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2296:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:28"},"nodeType":"YulFunctionCall","src":"2288:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2284:3:28"},"nodeType":"YulFunctionCall","src":"2284:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2277:6:28"},"nodeType":"YulFunctionCall","src":"2277:35:28"},"nodeType":"YulIf","src":"2274:2:28"},{"nodeType":"YulVariableDeclaration","src":"2348:30:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2375:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2362:12:28"},"nodeType":"YulFunctionCall","src":"2362:16:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2352:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2405:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2414:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2422:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2407:6:28"},"nodeType":"YulFunctionCall","src":"2407:22:28"},"nodeType":"YulExpressionStatement","src":"2407:22:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2393:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2401:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2390:2:28"},"nodeType":"YulFunctionCall","src":"2390:14:28"},"nodeType":"YulIf","src":"2387:2:28"},{"body":{"nodeType":"YulBlock","src":"2492:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2501:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2509:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2494:6:28"},"nodeType":"YulFunctionCall","src":"2494:22:28"},"nodeType":"YulExpressionStatement","src":"2494:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2454:2:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2462:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:28","type":"","value":"0x60"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2458:3:28"},"nodeType":"YulFunctionCall","src":"2458:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:28"},"nodeType":"YulFunctionCall","src":"2450:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"2478:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2446:3:28"},"nodeType":"YulFunctionCall","src":"2446:35:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2483:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2443:2:28"},"nodeType":"YulFunctionCall","src":"2443:48:28"},"nodeType":"YulIf","src":"2440:2:28"},{"nodeType":"YulAssignment","src":"2527:21:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2541:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2537:3:28"},"nodeType":"YulFunctionCall","src":"2537:11:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2527:6:28"}]},{"nodeType":"YulAssignment","src":"2557:16:28","value":{"name":"length","nodeType":"YulIdentifier","src":"2567:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2557:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1974:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1985:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1997:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2005:6:28","type":""}],"src":"1875:704:28"},{"body":{"nodeType":"YulBlock","src":"2765:909:28","statements":[{"body":{"nodeType":"YulBlock","src":"2812:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2821:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"2829:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2814:6:28"},"nodeType":"YulFunctionCall","src":"2814:22:28"},"nodeType":"YulExpressionStatement","src":"2814:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2786:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2795:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2782:3:28"},"nodeType":"YulFunctionCall","src":"2782:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2807:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2778:3:28"},"nodeType":"YulFunctionCall","src":"2778:33:28"},"nodeType":"YulIf","src":"2775:2:28"},{"nodeType":"YulVariableDeclaration","src":"2847:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2873:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2860:12:28"},"nodeType":"YulFunctionCall","src":"2860:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2851:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2919:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2892:26:28"},"nodeType":"YulFunctionCall","src":"2892:33:28"},"nodeType":"YulExpressionStatement","src":"2892:33:28"},{"nodeType":"YulAssignment","src":"2934:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2944:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2934:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2958:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2989:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3000:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2985:3:28"},"nodeType":"YulFunctionCall","src":"2985:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2972:12:28"},"nodeType":"YulFunctionCall","src":"2972:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2962:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3013:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3023:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3017:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3068:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3077:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"3085:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3070:6:28"},"nodeType":"YulFunctionCall","src":"3070:22:28"},"nodeType":"YulExpressionStatement","src":"3070:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3056:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3064:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3053:2:28"},"nodeType":"YulFunctionCall","src":"3053:14:28"},"nodeType":"YulIf","src":"3050:2:28"},{"nodeType":"YulVariableDeclaration","src":"3103:87:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3162:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3173:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3158:3:28"},"nodeType":"YulFunctionCall","src":"3158:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3182:7:28"}],"functionName":{"name":"abi_decode_t_string_calldata","nodeType":"YulIdentifier","src":"3129:28:28"},"nodeType":"YulFunctionCall","src":"3129:61:28"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"3107:8:28","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"3117:8:28","type":""}]},{"nodeType":"YulAssignment","src":"3199:18:28","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3209:8:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3199:6:28"}]},{"nodeType":"YulAssignment","src":"3226:18:28","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3236:8:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3226:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3253:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3286:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3297:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3282:3:28"},"nodeType":"YulFunctionCall","src":"3282:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3269:12:28"},"nodeType":"YulFunctionCall","src":"3269:32:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3257:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3330:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3339:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"3347:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3332:6:28"},"nodeType":"YulFunctionCall","src":"3332:22:28"},"nodeType":"YulExpressionStatement","src":"3332:22:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3316:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3326:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3313:2:28"},"nodeType":"YulFunctionCall","src":"3313:16:28"},"nodeType":"YulIf","src":"3310:2:28"},{"nodeType":"YulVariableDeclaration","src":"3365:89:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3435:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:28"},"nodeType":"YulFunctionCall","src":"3420:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3446:7:28"}],"functionName":{"name":"abi_decode_t_string_calldata","nodeType":"YulIdentifier","src":"3391:28:28"},"nodeType":"YulFunctionCall","src":"3391:63:28"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"3369:8:28","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"3379:8:28","type":""}]},{"nodeType":"YulAssignment","src":"3463:18:28","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3473:8:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3463:6:28"}]},{"nodeType":"YulAssignment","src":"3490:18:28","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3500:8:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3490:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3517:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3549:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3560:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3545:3:28"},"nodeType":"YulFunctionCall","src":"3545:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3532:12:28"},"nodeType":"YulFunctionCall","src":"3532:32:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3521:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3616:26:28","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"3625:6:28"},{"name":"value5","nodeType":"YulIdentifier","src":"3633:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3618:6:28"},"nodeType":"YulFunctionCall","src":"3618:22:28"},"nodeType":"YulExpressionStatement","src":"3618:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3586:7:28"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3599:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"3608:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3595:3:28"},"nodeType":"YulFunctionCall","src":"3595:18:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3583:2:28"},"nodeType":"YulFunctionCall","src":"3583:31:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3576:6:28"},"nodeType":"YulFunctionCall","src":"3576:39:28"},"nodeType":"YulIf","src":"3573:2:28"},{"nodeType":"YulAssignment","src":"3651:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3661:7:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3651:6:28"}]}]},"name":"abi_decode_tuple_t_contract$_ITransferHook_$1786t_string_calldata_ptrt_string_calldata_ptrt_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2691:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2702:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2714:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2722:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2730:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2738:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2746:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2754:6:28","type":""}],"src":"2584:1090:28"},{"body":{"nodeType":"YulBlock","src":"3749:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"3795:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3804:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3812:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3797:6:28"},"nodeType":"YulFunctionCall","src":"3797:22:28"},"nodeType":"YulExpressionStatement","src":"3797:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3770:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3779:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3766:3:28"},"nodeType":"YulFunctionCall","src":"3766:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3791:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3762:3:28"},"nodeType":"YulFunctionCall","src":"3762:32:28"},"nodeType":"YulIf","src":"3759:2:28"},{"nodeType":"YulVariableDeclaration","src":"3830:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3856:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3843:12:28"},"nodeType":"YulFunctionCall","src":"3843:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3834:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3944:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3953:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3961:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3946:6:28"},"nodeType":"YulFunctionCall","src":"3946:22:28"},"nodeType":"YulExpressionStatement","src":"3946:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3888:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3899:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3906:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3895:3:28"},"nodeType":"YulFunctionCall","src":"3895:46:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3885:2:28"},"nodeType":"YulFunctionCall","src":"3885:57:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3878:6:28"},"nodeType":"YulFunctionCall","src":"3878:65:28"},"nodeType":"YulIf","src":"3875:2:28"},{"nodeType":"YulAssignment","src":"3979:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"3989:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3979:6:28"}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3715:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3726:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3738:6:28","type":""}],"src":"3679:321:28"},{"body":{"nodeType":"YulBlock","src":"4126:343:28","statements":[{"body":{"nodeType":"YulBlock","src":"4173:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4182:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4190:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4175:6:28"},"nodeType":"YulFunctionCall","src":"4175:22:28"},"nodeType":"YulExpressionStatement","src":"4175:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4147:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4143:3:28"},"nodeType":"YulFunctionCall","src":"4143:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4168:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4139:3:28"},"nodeType":"YulFunctionCall","src":"4139:33:28"},"nodeType":"YulIf","src":"4136:2:28"},{"nodeType":"YulAssignment","src":"4208:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4231:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4218:12:28"},"nodeType":"YulFunctionCall","src":"4218:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4208:6:28"}]},{"nodeType":"YulAssignment","src":"4250:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4288:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:28"},"nodeType":"YulFunctionCall","src":"4273:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4260:12:28"},"nodeType":"YulFunctionCall","src":"4260:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4250:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"4301:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4331:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4342:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4327:3:28"},"nodeType":"YulFunctionCall","src":"4327:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4314:12:28"},"nodeType":"YulFunctionCall","src":"4314:32:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4305:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4382:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4355:26:28"},"nodeType":"YulFunctionCall","src":"4355:33:28"},"nodeType":"YulExpressionStatement","src":"4355:33:28"},{"nodeType":"YulAssignment","src":"4397:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"4407:5:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4397:6:28"}]},{"nodeType":"YulAssignment","src":"4421:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4448:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4459:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4444:3:28"},"nodeType":"YulFunctionCall","src":"4444:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4431:12:28"},"nodeType":"YulFunctionCall","src":"4431:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4421:6:28"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4068:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4079:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4091:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4099:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4107:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4115:6:28","type":""}],"src":"4005:464:28"},{"body":{"nodeType":"YulBlock","src":"4575:125:28","statements":[{"nodeType":"YulAssignment","src":"4585:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4608:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:28"},"nodeType":"YulFunctionCall","src":"4593:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4585:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4642:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4650:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4638:3:28"},"nodeType":"YulFunctionCall","src":"4638:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4620:6:28"},"nodeType":"YulFunctionCall","src":"4620:74:28"},"nodeType":"YulExpressionStatement","src":"4620:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4544:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4555:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4566:4:28","type":""}],"src":"4474:226:28"},{"body":{"nodeType":"YulBlock","src":"4834:168:28","statements":[{"nodeType":"YulAssignment","src":"4844:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:28"},"nodeType":"YulFunctionCall","src":"4852:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4844:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4901:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4909:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4897:3:28"},"nodeType":"YulFunctionCall","src":"4897:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4879:6:28"},"nodeType":"YulFunctionCall","src":"4879:74:28"},"nodeType":"YulExpressionStatement","src":"4879:74:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4973:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4969:3:28"},"nodeType":"YulFunctionCall","src":"4969:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"4989:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4962:6:28"},"nodeType":"YulFunctionCall","src":"4962:34:28"},"nodeType":"YulExpressionStatement","src":"4962:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4806:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4814:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4825:4:28","type":""}],"src":"4705:297:28"},{"body":{"nodeType":"YulBlock","src":"5102:92:28","statements":[{"nodeType":"YulAssignment","src":"5112:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:28"},"nodeType":"YulFunctionCall","src":"5120:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5112:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5179:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5172:6:28"},"nodeType":"YulFunctionCall","src":"5172:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5165:6:28"},"nodeType":"YulFunctionCall","src":"5165:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:28"},"nodeType":"YulFunctionCall","src":"5147:41:28"},"nodeType":"YulExpressionStatement","src":"5147:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5071:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5082:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5093:4:28","type":""}],"src":"5007:187:28"},{"body":{"nodeType":"YulBlock","src":"5315:125:28","statements":[{"nodeType":"YulAssignment","src":"5325:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5337:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5348:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5333:3:28"},"nodeType":"YulFunctionCall","src":"5333:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5325:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5367:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5382:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5390:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5378:3:28"},"nodeType":"YulFunctionCall","src":"5378:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5360:6:28"},"nodeType":"YulFunctionCall","src":"5360:74:28"},"nodeType":"YulExpressionStatement","src":"5360:74:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5284:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5295:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5306:4:28","type":""}],"src":"5199:241:28"},{"body":{"nodeType":"YulBlock","src":"5568:125:28","statements":[{"nodeType":"YulAssignment","src":"5578:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5590:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5601:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5586:3:28"},"nodeType":"YulFunctionCall","src":"5586:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5578:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5635:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5643:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:28"},"nodeType":"YulFunctionCall","src":"5631:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5613:6:28"},"nodeType":"YulFunctionCall","src":"5613:74:28"},"nodeType":"YulExpressionStatement","src":"5613:74:28"}]},"name":"abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5537:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5548:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5559:4:28","type":""}],"src":"5445:248:28"},{"body":{"nodeType":"YulBlock","src":"5819:541:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5829:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5839:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5833:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5868:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5850:6:28"},"nodeType":"YulFunctionCall","src":"5850:21:28"},"nodeType":"YulExpressionStatement","src":"5850:21:28"},{"nodeType":"YulVariableDeclaration","src":"5880:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5900:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5894:5:28"},"nodeType":"YulFunctionCall","src":"5894:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5884:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5927:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5938:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:28"},"nodeType":"YulFunctionCall","src":"5923:18:28"},{"name":"length","nodeType":"YulIdentifier","src":"5943:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5916:6:28"},"nodeType":"YulFunctionCall","src":"5916:34:28"},"nodeType":"YulExpressionStatement","src":"5916:34:28"},{"nodeType":"YulVariableDeclaration","src":"5959:13:28","value":{"name":"tail","nodeType":"YulIdentifier","src":"5968:4:28"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5963:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6031:90:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:28"},{"name":"i","nodeType":"YulIdentifier","src":"6071:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:28"},"nodeType":"YulFunctionCall","src":"6056:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"6075:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6052:3:28"},"nodeType":"YulFunctionCall","src":"6052:26:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6094:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"6102:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:28"},"nodeType":"YulFunctionCall","src":"6090:14:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6106:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6086:3:28"},"nodeType":"YulFunctionCall","src":"6086:23:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6080:5:28"},"nodeType":"YulFunctionCall","src":"6080:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6045:6:28"},"nodeType":"YulFunctionCall","src":"6045:66:28"},"nodeType":"YulExpressionStatement","src":"6045:66:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5992:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"5995:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5989:2:28"},"nodeType":"YulFunctionCall","src":"5989:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6003:19:28","statements":[{"nodeType":"YulAssignment","src":"6005:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6014:1:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6017:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6010:3:28"},"nodeType":"YulFunctionCall","src":"6010:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6005:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5985:3:28","statements":[]},"src":"5981:140:28"},{"body":{"nodeType":"YulBlock","src":"6155:69:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:28"},{"name":"length","nodeType":"YulIdentifier","src":"6195:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6180:3:28"},"nodeType":"YulFunctionCall","src":"6180:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"6204:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6176:3:28"},"nodeType":"YulFunctionCall","src":"6176:31:28"},{"name":"tail","nodeType":"YulIdentifier","src":"6209:4:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6169:6:28"},"nodeType":"YulFunctionCall","src":"6169:45:28"},"nodeType":"YulExpressionStatement","src":"6169:45:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6136:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"6139:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6133:2:28"},"nodeType":"YulFunctionCall","src":"6133:13:28"},"nodeType":"YulIf","src":"6130:2:28"},{"nodeType":"YulAssignment","src":"6233:121:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6249:9:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6268:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6276:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6264:3:28"},"nodeType":"YulFunctionCall","src":"6264:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"6281:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6260:3:28"},"nodeType":"YulFunctionCall","src":"6260:88:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6245:3:28"},"nodeType":"YulFunctionCall","src":"6245:104:28"},{"kind":"number","nodeType":"YulLiteral","src":"6351:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6241:3:28"},"nodeType":"YulFunctionCall","src":"6241:113:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6233:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5788:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5799:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5810:4:28","type":""}],"src":"5698:662:28"},{"body":{"nodeType":"YulBlock","src":"6539:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6556:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6567:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6549:6:28"},"nodeType":"YulFunctionCall","src":"6549:21:28"},"nodeType":"YulExpressionStatement","src":"6549:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6590:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6601:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6586:3:28"},"nodeType":"YulFunctionCall","src":"6586:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6606:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6579:6:28"},"nodeType":"YulFunctionCall","src":"6579:30:28"},"nodeType":"YulExpressionStatement","src":"6579:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6629:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6640:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6625:3:28"},"nodeType":"YulFunctionCall","src":"6625:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"6645:21:28","type":"","value":"INVALID_ZERO_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6618:6:28"},"nodeType":"YulFunctionCall","src":"6618:49:28"},"nodeType":"YulExpressionStatement","src":"6618:49:28"},{"nodeType":"YulAssignment","src":"6676:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6688:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6699:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6684:3:28"},"nodeType":"YulFunctionCall","src":"6684:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6676:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6516:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6530:4:28","type":""}],"src":"6365:343:28"},{"body":{"nodeType":"YulBlock","src":"6887:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6904:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6915:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6897:6:28"},"nodeType":"YulFunctionCall","src":"6897:21:28"},"nodeType":"YulExpressionStatement","src":"6897:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6938:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6949:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6934:3:28"},"nodeType":"YulFunctionCall","src":"6934:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6954:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6927:6:28"},"nodeType":"YulFunctionCall","src":"6927:30:28"},"nodeType":"YulExpressionStatement","src":"6927:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6988:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:28"},"nodeType":"YulFunctionCall","src":"6973:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"6993:23:28","type":"","value":"INSUFFICIENT_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6966:6:28"},"nodeType":"YulFunctionCall","src":"6966:51:28"},"nodeType":"YulExpressionStatement","src":"6966:51:28"},{"nodeType":"YulAssignment","src":"7026:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7038:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7049:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7034:3:28"},"nodeType":"YulFunctionCall","src":"7034:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7026:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6864:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6878:4:28","type":""}],"src":"6713:345:28"},{"body":{"nodeType":"YulBlock","src":"7237:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7265:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7247:6:28"},"nodeType":"YulFunctionCall","src":"7247:21:28"},"nodeType":"YulExpressionStatement","src":"7247:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7288:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7299:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7284:3:28"},"nodeType":"YulFunctionCall","src":"7284:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7304:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:28"},"nodeType":"YulFunctionCall","src":"7277:30:28"},"nodeType":"YulExpressionStatement","src":"7277:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7327:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7338:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:28"},"nodeType":"YulFunctionCall","src":"7323:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"7343:23:28","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7316:6:28"},"nodeType":"YulFunctionCall","src":"7316:51:28"},"nodeType":"YulExpressionStatement","src":"7316:51:28"},{"nodeType":"YulAssignment","src":"7376:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7388:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7399:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7384:3:28"},"nodeType":"YulFunctionCall","src":"7384:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7376:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7214:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7228:4:28","type":""}],"src":"7063:345:28"},{"body":{"nodeType":"YulBlock","src":"7587:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7604:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7615:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7597:6:28"},"nodeType":"YulFunctionCall","src":"7597:21:28"},"nodeType":"YulExpressionStatement","src":"7597:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7638:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7634:3:28"},"nodeType":"YulFunctionCall","src":"7634:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7654:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7627:6:28"},"nodeType":"YulFunctionCall","src":"7627:30:28"},"nodeType":"YulExpressionStatement","src":"7627:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7677:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7688:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7673:3:28"},"nodeType":"YulFunctionCall","src":"7673:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"7693:25:28","type":"","value":"UNSTAKE_WINDOW_FINISHED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7666:6:28"},"nodeType":"YulFunctionCall","src":"7666:53:28"},"nodeType":"YulExpressionStatement","src":"7666:53:28"},{"nodeType":"YulAssignment","src":"7728:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7751:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7736:3:28"},"nodeType":"YulFunctionCall","src":"7736:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7728:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7564:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7578:4:28","type":""}],"src":"7413:347:28"},{"body":{"nodeType":"YulBlock","src":"7939:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7956:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7967:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7949:6:28"},"nodeType":"YulFunctionCall","src":"7949:21:28"},"nodeType":"YulExpressionStatement","src":"7949:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7990:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8001:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7986:3:28"},"nodeType":"YulFunctionCall","src":"7986:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8006:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7979:6:28"},"nodeType":"YulFunctionCall","src":"7979:30:28"},"nodeType":"YulExpressionStatement","src":"7979:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8040:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8025:3:28"},"nodeType":"YulFunctionCall","src":"8025:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"8045:29:28","type":"","value":"INVALID_BALANCE_ON_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8018:6:28"},"nodeType":"YulFunctionCall","src":"8018:57:28"},"nodeType":"YulExpressionStatement","src":"8018:57:28"},{"nodeType":"YulAssignment","src":"8084:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8096:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8107:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8092:3:28"},"nodeType":"YulFunctionCall","src":"8092:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8084:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7916:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7930:4:28","type":""}],"src":"7765:351:28"},{"body":{"nodeType":"YulBlock","src":"8222:117:28","statements":[{"nodeType":"YulAssignment","src":"8232:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8244:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8255:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8240:3:28"},"nodeType":"YulFunctionCall","src":"8240:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8232:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8274:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8289:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8297:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8285:3:28"},"nodeType":"YulFunctionCall","src":"8285:47:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8267:6:28"},"nodeType":"YulFunctionCall","src":"8267:66:28"},"nodeType":"YulExpressionStatement","src":"8267:66:28"}]},"name":"abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8191:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8202:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8213:4:28","type":""}],"src":"8121:218:28"},{"body":{"nodeType":"YulBlock","src":"8473:190:28","statements":[{"nodeType":"YulAssignment","src":"8483:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8495:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8506:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8491:3:28"},"nodeType":"YulFunctionCall","src":"8491:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8483:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"8518:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8528:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8522:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8578:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8593:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8601:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8589:3:28"},"nodeType":"YulFunctionCall","src":"8589:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8571:6:28"},"nodeType":"YulFunctionCall","src":"8571:34:28"},"nodeType":"YulExpressionStatement","src":"8571:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8625:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8621:3:28"},"nodeType":"YulFunctionCall","src":"8621:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8645:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8653:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8641:3:28"},"nodeType":"YulFunctionCall","src":"8641:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8614:6:28"},"nodeType":"YulFunctionCall","src":"8614:43:28"},"nodeType":"YulExpressionStatement","src":"8614:43:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8434:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8445:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8453:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8464:4:28","type":""}],"src":"8344:319:28"},{"body":{"nodeType":"YulBlock","src":"8825:233:28","statements":[{"nodeType":"YulAssignment","src":"8835:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8847:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8858:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8843:3:28"},"nodeType":"YulFunctionCall","src":"8843:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8835:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"8870:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8880:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8874:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8930:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8945:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8953:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8941:3:28"},"nodeType":"YulFunctionCall","src":"8941:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8923:6:28"},"nodeType":"YulFunctionCall","src":"8923:34:28"},"nodeType":"YulExpressionStatement","src":"8923:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8977:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8988:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8973:3:28"},"nodeType":"YulFunctionCall","src":"8973:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8997:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9005:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8993:3:28"},"nodeType":"YulFunctionCall","src":"8993:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8966:6:28"},"nodeType":"YulFunctionCall","src":"8966:43:28"},"nodeType":"YulExpressionStatement","src":"8966:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9040:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9025:3:28"},"nodeType":"YulFunctionCall","src":"9025:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9045:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9018:6:28"},"nodeType":"YulFunctionCall","src":"9018:34:28"},"nodeType":"YulExpressionStatement","src":"9018:34:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8778:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8789:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8797:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8805:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8816:4:28","type":""}],"src":"8668:390:28"},{"body":{"nodeType":"YulBlock","src":"9164:76:28","statements":[{"nodeType":"YulAssignment","src":"9174:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9186:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9197:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9182:3:28"},"nodeType":"YulFunctionCall","src":"9182:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9174:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9216:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"9227:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9209:6:28"},"nodeType":"YulFunctionCall","src":"9209:25:28"},"nodeType":"YulExpressionStatement","src":"9209:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9133:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9144:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9155:4:28","type":""}],"src":"9063:177:28"},{"body":{"nodeType":"YulBlock","src":"9342:87:28","statements":[{"nodeType":"YulAssignment","src":"9352:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9364:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9375:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9360:3:28"},"nodeType":"YulFunctionCall","src":"9360:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9352:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9394:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9409:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9417:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9405:3:28"},"nodeType":"YulFunctionCall","src":"9405:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9387:6:28"},"nodeType":"YulFunctionCall","src":"9387:36:28"},"nodeType":"YulExpressionStatement","src":"9387:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9311:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9322:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9333:4:28","type":""}],"src":"9245:184:28"},{"body":{"nodeType":"YulBlock","src":"9481:109:28","statements":[{"body":{"nodeType":"YulBlock","src":"9568:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9577:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9580:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9570:6:28"},"nodeType":"YulFunctionCall","src":"9570:12:28"},"nodeType":"YulExpressionStatement","src":"9570:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9504:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9515:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"9522:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9511:3:28"},"nodeType":"YulFunctionCall","src":"9511:54:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9501:2:28"},"nodeType":"YulFunctionCall","src":"9501:65:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9494:6:28"},"nodeType":"YulFunctionCall","src":"9494:73:28"},"nodeType":"YulIf","src":"9491:2:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9470:5:28","type":""}],"src":"9434:156:28"}]},"contents":"{\n    { }\n    function abi_decode_t_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 0x60)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_contract$_ITransferHook_$1786t_string_calldata_ptrt_string_calldata_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value1_1, value2_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_string_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value5, value5) }\n        value5 := value_1\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"INVALID_ZERO_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"INSUFFICIENT_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UNSTAKE_WINDOW_FINISHED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"INVALID_BALANCE_ON_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3086":[{"length":32,"start":2901},{"length":32,"start":10033},{"length":32,"start":10102},{"length":32,"start":10147}],"3088":[{"length":32,"start":4131},{"length":32,"start":4683}],"3737":[{"length":32,"start":1852},{"length":32,"start":2234},{"length":32,"start":3974}],"3739":[{"length":32,"start":3100},{"length":32,"start":3304}],"3741":[{"length":32,"start":1507},{"length":32,"start":1641},{"length":32,"start":2507},{"length":32,"start":4943}],"3744":[{"length":32,"start":1601},{"length":32,"start":2340},{"length":32,"start":4906}],"3747":[{"length":32,"start":2937},{"length":32,"start":3359}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102415760003560e01c80638dbefee211610145578063adc9772e116100bd578063dd62ed3e1161008c578063f11b818811610071578063f11b81881461045b578063f1cc432a1461047d578063f6d2ee861461049057610241565b8063dd62ed3e14610440578063dde43cba1461045357610241565b8063adc9772e1461040a578063b2a5dbfa1461041d578063c3863ada14610430578063cbcbb5071461043857610241565b806399248ea711610114578063a457c2d7116100f9578063a457c2d7146103dc578063a9059cbb146103ef578063aaf5eb681461040257610241565b806399248ea7146103c15780639a99b4f0146103c957610241565b80638dbefee214610396578063919cd40f146103a9578063946776cd146103b157806395d89b41146103b957610241565b8063313ce567116101d857806370a08231116101a7578063787a08a61161018c578063787a08a6146103685780637e90d7ef146103705780638779588c1461038357610241565b806370a082311461034d57806372b49d631461036057610241565b8063313ce5671461030a5780633373ee4c1461031f578063359c4a9614610332578063395093511461033a57610241565b80631e9a6950116102145780631e9a6950146102ac57806323b872dd146102c15780632acbf823146102d4578063312f6b83146102f557610241565b806306fdde0314610246578063091030c314610264578063095ea7b31461028457806318160ddd146102a4575b600080fd5b61024e6104a3565b60405161025b9190612e97565b60405180910390f35b610277610272366004612c11565b610557565b60405161025b9190613088565b610297610292366004612ca5565b610569565b60405161025b9190612e8c565b610277610587565b6102bf6102ba366004612ca5565b61058d565b005b6102976102cf366004612c65565b6107cf565b6102e76102e2366004612ca5565b610871565b60405161025b929190613038565b6102fd6108b8565b60405161025b9190612e45565b6103126108dc565b60405161025b9190613091565b61027761032d366004612c2d565b6108e5565b610277610922565b610297610348366004612ca5565b610946565b61027761035b366004612c11565b6109a1565b6102776109c9565b6102bf6109ed565b61027761037e366004612c11565b610a66565b610277610391366004612c11565b610a78565b6102776103a4366004612c11565b610a8a565b610277610b53565b6102fd610b77565b61024e610b9b565b6102fd610c1a565b6102bf6103d7366004612ca5565b610c3e565b6102976103ea366004612ca5565b610db0565b6102976103fd366004612ca5565b610e25565b610312610e39565b6102bf610418366004612ca5565b610e3e565b6102bf61042b366004612cd0565b61100b565b6102fd61122d565b6102fd611249565b61027761044e366004612c2d565b61126d565b6102776112a5565b61046e610469366004612c11565b6112aa565b60405161025b9392919061305b565b61027761048b366004612e07565b6112ee565b6102bf61049e366004612d40565b6113f2565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061057d610576611568565b848461156c565b5060015b92915050565b60025490565b806105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b60405180910390fd5b336000908152603e6020526040902054610607817f00000000000000000000000000000000000000000000000000000000000000006114f4565b421161063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f3f565b7f000000000000000000000000000000000000000000000000000000000000000061069461068d837f00000000000000000000000000000000000000000000000000000000000000006114f4565b42906116b3565b11156106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fad565b60006106d7336109a1565b905060008184116106e857836106ea565b815b90506106f8338360016116f5565b5061070333826117b4565b61070d82826116b3565b61072257336000908152603e60205260408120555b61076373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836118fe565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d9836040516107c09190613088565b60405180910390a35050505050565b60006107dc84848461198b565b610866846107e8611568565b610861856040518060600160405280602881526020016131736028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610833611568565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190611a98565b61156c565b5060015b9392505050565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061057d610953611568565b846108618560016000610964611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c1681529252902054906114f4565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109f6336109a1565b610a2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fe4565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b603d6020526000908152604090205481565b60076020526000908152604090205481565b60408051600180825281830190925260009160609190816020015b610aad612af2565b815260200190600190039081610aa557905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610af2856109a1565b8152602001610aff610587565b81525081600081518110610b0f57fe5b602002602001018190525061086a610b278483611b49565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d6020526040902054906114f4565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c5433610c4d336109a1565b60006116f5565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314610c855782610c87565b815b9050610cd3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e5400000000000000000000000000000000000081525084611a989092919063ffffffff16565b336000908152603d6020526040902055610d457f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051610da29190613088565b60405180910390a350505050565b600061057d610dbd611568565b846108618560405180606001604052806025815260200161325d6025913960016000610de7611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190611a98565b600061057d610e32611568565b848461198b565b601281565b80610e75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b6000610e80836109a1565b90506000610e97843084610e92610587565b611d0c565b90508015610f2f577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a768482604051610ed0929190612e66565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d6020526040902054610f0890826114f4565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b610f3c60008486856112ee565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902055610f6c8484611de5565b610fae73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051610da29190613088565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461107a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f76565b60005b81811015611228576000603c600085858581811061109757fe5b90506060020160400160208101906110af9190612c11565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061112e8484848181106110fa57fe5b90506060020160400160208101906111129190612c11565b8286868681811061111f57fe5b90506060020160200135611f16565b5083838381811061113b57fe5b6111519260206060909202019081019150612dd7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061119957fe5b90506060020160400160208101906111b19190612c11565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106111f457fe5b61120a9260206060909202019081019150612dd7565b604051611217919061301b565b60405180910390a25060010161107d565b505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600181565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e6020526040812054806113235760009150506113ea565b60006113797f0000000000000000000000000000000000000000000000000000000000000000611373427f00000000000000000000000000000000000000000000000000000000000000006116b3565b906116b3565b90508181111561138c57600091506113e6565b600087821161139b578761139d565b425b9050828110156113b2578293505050506113ea565b6113e26113bf88876114f4565b6113dc6113cc8887612015565b6113d68b86612015565b906114f4565b90612088565b9250505b5090505b949350505050565b60006113fc6120ca565b90506009548111611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061319b602e913960400191505060405180910390fd5b6009819055604080516020601f880181900481028201810190925286815261149a9188908890819084018382808284376000920191909152506120cf92505050565b6114d984848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120e692505050565b6114e2826120f9565b6114eb8761212d565b50505050505050565b60008282018381101561086a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b73ffffffffffffffffffffffffffffffffffffffff83166115d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061320f6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061310a6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061086a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a98565b600080611706853086610e92610587565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d60205260408120549192509061173a90836114f4565b905081156117ab5783156117715773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7686836040516117a2929190612e66565b60405180910390a15b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131c96021913960400191505060405180910390fd5b61182c82600083612174565b611876816040518060600160405280602281526020016130e86022913973ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546118a990826116b3565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526112289084906122f2565b6000611996846109a1565b90506119a4848260016116f5565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a875760006119e3846109a1565b90506119f1848260016116f5565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902054611a24818587856112ee565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260409020558284148015611a5857508015155b15611a845773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b611a92848484612530565b50505050565b60008184841115611b41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b06578181015183820152602001611aee565b50505050905090810190601f168015611b335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600080805b8351811015611c6f576000603c6000868481518110611b6957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040016000908120600181015481548851929450611bf4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a9088908110611be357fe5b602002602001015160400151612700565b9050611c63611c5c878581518110611c0857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612814565b85906114f4565b93505050600101611b4e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611a929085906122f2565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280611d54888588611f16565b9050808314611dd9578615611d7157611d6e878285612814565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90611dd0908590613088565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611e6757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611e7360008383612174565b600254611e8090826114f4565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611eb390826114f4565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415611f575750905061086a565b8454600090611f7b9084906fffffffffffffffffffffffffffffffff168488612700565b9050828114611fdc578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051611fd39190613088565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b60008261202457506000610581565b8282028284828161203157fe5b041461086a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131526021913960400191505060405180910390fd5b600061086a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612836565b600190565b80516120e2906003906020840190612b29565b5050565b80516120e2906004906020840190612b29565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156121ad57611228565b73ffffffffffffffffffffffffffffffffffffffff8316156121ec5760006121d4846109a1565b90506121ea84826121e581866116b3565b6128b5565b505b73ffffffffffffffffffffffffffffffffffffffff821615612226576000612213836109a1565b905061222483826121e581866114f4565b505b60085473ffffffffffffffffffffffffffffffffffffffff168015611a92578073ffffffffffffffffffffffffffffffffffffffff16634a3931498585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156122d457600080fd5b505af11580156122e8573d6000803e3d6000fd5b5050505050505050565b6123118273ffffffffffffffffffffffffffffffffffffffff16612ab9565b61237c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123e557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123a8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612447576040519150601f19603f3d011682016040523d82523d6000602084013e61244c565b606091505b5091509150816124bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611a92578080602001905160208110156124d957600080fd5b5051611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613233602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831661259c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806131ea6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130c56023913960400191505060405180910390fd5b612613838383612174565b61265d8160405180606001604052806026815260200161312c6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461269990826114f4565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600083158061270d575081155b80612729575042836fffffffffffffffffffffffffffffffff16145b8061276657507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156127725750836113ea565b60007f000000000000000000000000000000000000000000000000000000000000000042116127a157426127c3565b7f00000000000000000000000000000000000000000000000000000000000000005b905060006127e3826fffffffffffffffffffffffffffffffff87166116b3565b9050612809876113d6866113dc670de0b6b3a76400006128038c88612015565b90612015565b979650505050505050565b60006113ea670de0b6b3a76400006113dc61282f86866116b3565b8790612015565b6000818361289f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315611b06578181015183820152602001611aee565b5060008385816128ab57fe5b0495945050505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600760209081526040808320546006909252909120439190811580159061293957506fffffffffffffffffffffffffffffffff83168160006129148560016116b3565b81526020810191909152604001600020546fffffffffffffffffffffffffffffffff16145b15612993578381600061294d8560016116b3565b8152602081019190915260400160002080546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055612a49565b6040805180820182526fffffffffffffffffffffffffffffffff80861682528681166020808401918252600087815290869052939093209151825493518216700100000000000000000000000000000000029082167fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169390931716919091179055612a228260016114f4565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600760205260409020555b6040805173ffffffffffffffffffffffffffffffffffffffff881681526fffffffffffffffffffffffffffffffff808816602083015286168183015290517f2cd3c83ddac2953ee75f53265d9ea4463eaf05030e5459a1b7e63819b7ce88f79181900360600190a1505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113ea575050151592915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612b5f5760008555612ba5565b82601f10612b7857805160ff1916838001178555612ba5565b82800160010185558215612ba5579182015b82811115612ba5578251825591602001919060010190612b8a565b50612bb1929150612bb5565b5090565b5b80821115612bb15760008155600101612bb6565b60008083601f840112612bdb578182fd5b50813567ffffffffffffffff811115612bf2578182fd5b602083019150836020828501011115612c0a57600080fd5b9250929050565b600060208284031215612c22578081fd5b813561086a8161309f565b60008060408385031215612c3f578081fd5b8235612c4a8161309f565b91506020830135612c5a8161309f565b809150509250929050565b600080600060608486031215612c79578081fd5b8335612c848161309f565b92506020840135612c948161309f565b929592945050506040919091013590565b60008060408385031215612cb7578182fd5b8235612cc28161309f565b946020939093013593505050565b60008060208385031215612ce2578182fd5b823567ffffffffffffffff80821115612cf9578384fd5b818501915085601f830112612d0c578384fd5b813581811115612d1a578485fd5b866020606083028501011115612d2e578485fd5b60209290920196919550909350505050565b60008060008060008060808789031215612d58578182fd5b8635612d638161309f565b9550602087013567ffffffffffffffff80821115612d7f578384fd5b612d8b8a838b01612bca565b90975095506040890135915080821115612da3578384fd5b50612db089828a01612bca565b909450925050606087013560ff81168114612dc9578182fd5b809150509295509295509295565b600060208284031215612de8578081fd5b81356fffffffffffffffffffffffffffffffff8116811461086a578182fd5b60008060008060808587031215612e1c578384fd5b84359350602085013592506040850135612e358161309f565b9396929550929360600135925050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015612ec357858101830151858201604001528201612ea7565b81811115612ed45783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b90815260200190565b60ff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146130c157600080fd5b5056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122039bef5afce8f6ff90bfcc67f6bfa85b468995fc2f3183adda3faef1fab23d00f64736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x241 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBEFEE2 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF11B8188 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xF6D2EE86 EQ PUSH2 0x490 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x453 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x438 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x402 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x3C9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x787A08A6 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x8779588C EQ PUSH2 0x383 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x360 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x33A JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x1E9A6950 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2ACBF823 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x2F5 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST PUSH2 0x277 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C65 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP3 SWAP2 SWAP1 PUSH2 0x3038 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x277 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH2 0x277 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x312 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD0 JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x122D JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST PUSH2 0x277 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST PUSH2 0x277 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D40 JUMP JUMPDEST PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x530 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x576 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x607 DUP2 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH32 0x0 PUSH2 0x694 PUSH2 0x68D DUP4 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x16B3 JUMP JUMPDEST GT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 CALLER PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x6E8 JUMPI DUP4 PUSH2 0x6EA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x6F8 CALLER DUP4 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH2 0x703 CALLER DUP3 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x70D DUP3 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x722 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x763 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x18FE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP5 DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x866 DUP5 PUSH2 0x7E8 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3173 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x833 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x953 PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x964 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9F6 CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FE4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAAD PUSH2 0x2AF2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAA5 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF2 DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAFF PUSH2 0x587 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB0F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x86A PUSH2 0xB27 DUP5 DUP4 PUSH2 0x1B49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC54 CALLER PUSH2 0xC4D CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0xC85 JUMPI DUP3 PUSH2 0xC87 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0xCD3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1A98 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xD45 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xDBD PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x325D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDE7 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xE32 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE80 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE97 DUP5 ADDRESS DUP5 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED0 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF08 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xF3C PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xF6C DUP5 DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0xFAE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1097 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x112E DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x10FA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x111F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F16 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x113B JUMPI INVALID JUMPDEST PUSH2 0x1151 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1199 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH2 0x120A SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x301B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x107D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1323 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 PUSH32 0x0 PUSH2 0x1373 TIMESTAMP PUSH32 0x0 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x139B JUMPI DUP8 PUSH2 0x139D JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x13E2 PUSH2 0x13BF DUP9 DUP8 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x13DC PUSH2 0x13CC DUP9 DUP8 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x13D6 DUP12 DUP7 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC PUSH2 0x20CA JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x319B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE PUSH2 0x149A SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20CF SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20E6 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14E2 DUP3 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x14EB DUP8 PUSH2 0x212D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x320F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x310A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1706 DUP6 ADDRESS DUP7 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x173A SWAP1 DUP4 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x17AB JUMPI DUP4 ISZERO PUSH2 0x1771 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17A2 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31C9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x182C DUP3 PUSH1 0x0 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30E8 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x18A9 SWAP1 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1228 SWAP1 DUP5 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A4 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A87 JUMPI PUSH1 0x0 PUSH2 0x19E3 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F1 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A24 DUP2 DUP6 DUP8 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x1A58 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1A84 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x1A92 DUP5 DUP5 DUP5 PUSH2 0x2530 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B33 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1C6F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B69 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x1BF4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x1BE3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C63 PUSH2 0x1C5C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2814 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x1B4E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1A92 SWAP1 DUP6 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x1D54 DUP9 DUP6 DUP9 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1DD9 JUMPI DUP7 ISZERO PUSH2 0x1D71 JUMPI PUSH2 0x1D6E DUP8 DUP3 DUP6 PUSH2 0x2814 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x1DD0 SWAP1 DUP6 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1E67 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1E73 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1E80 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1EB3 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x1F57 JUMPI POP SWAP1 POP PUSH2 0x86A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1F7B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x1FDC JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2024 JUMPI POP PUSH1 0x0 PUSH2 0x581 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2031 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3152 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21AD JUMPI PUSH2 0x1228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x21EC JUMPI PUSH1 0x0 PUSH2 0x21D4 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x21EA DUP5 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x28B5 JUMP JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x2226 JUMPI PUSH1 0x0 PUSH2 0x2213 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2224 DUP4 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x14F4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1A92 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A393149 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2311 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x237C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23E5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2447 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x244C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A92 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3233 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x259C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31EA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30C5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2613 DUP4 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x312C PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2699 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x270D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x2729 JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x2766 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x2772 JUMPI POP DUP4 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x27A1 JUMPI TIMESTAMP PUSH2 0x27C3 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27E3 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2809 DUP8 PUSH2 0x13D6 DUP7 PUSH2 0x13DC PUSH8 0xDE0B6B3A7640000 PUSH2 0x2803 DUP13 DUP9 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x2015 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA PUSH8 0xDE0B6B3A7640000 PUSH2 0x13DC PUSH2 0x282F DUP7 DUP7 PUSH2 0x16B3 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x289F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x28AB JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2939 JUMPI POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 PUSH1 0x0 PUSH2 0x2914 DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2993 JUMPI DUP4 DUP2 PUSH1 0x0 PUSH2 0x294D DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP4 MLOAD DUP3 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A22 DUP3 PUSH1 0x1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x2CD3C83DDAC2953EE75F53265D9EA4463EAF05030E5459A1B7E63819B7CE88F7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x13EA JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B5F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B78 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BA5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BA5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B8A JUMP JUMPDEST POP PUSH2 0x2BB1 SWAP3 SWAP2 POP PUSH2 0x2BB5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BDB JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C22 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x86A DUP2 PUSH2 0x309F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C3F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C4A DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C5A DUP2 PUSH2 0x309F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C84 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C94 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CC2 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CF9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D0C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D1A JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2D2E JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D58 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2D63 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D7F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2D8B DUP11 DUP4 DUP12 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DA3 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2DB0 DUP10 DUP3 DUP11 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2DC9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x86A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E1C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2E35 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EC3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2EA7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2ED4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x30C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 CODECOPY 0xBE CREATE2 0xAF 0xCE DUP16 PUSH16 0xF90BFCC67F6BFA85B468995FC2F3183A 0xDD LOG3 STATICCALL 0xEF 0x1F 0xAB 0x23 0xD0 0xF PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"293:620:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1467:51:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2561:156:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1292:92::-;;;:::i;3659:971:23:-;;;;;;:::i;:::-;;:::i;:::-;;3044:343:15;;;;;;:::i;:::-;;:::i;551:66:16:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1029:36:23:-;;;:::i;:::-;;;;;;;:::i;1148:84:15:-;;;:::i;:::-;;;;;;;:::i;7914:128:20:-;;;;;;:::i;:::-;;:::i;1236:39:23:-;;;:::i;3627:205:15:-;;;;;;:::i;:::-;;:::i;1439:111::-;;;;;;:::i;:::-;;:::i;1109:41:23:-;;;:::i;4751:230::-;;;:::i;1408:55::-;;;;;;:::i;:::-;;:::i;621:51:16:-;;;;;;:::i;:::-;;:::i;9493:468:23:-;;;;;;:::i;:::-;;:::i;666:41:20:-;;;:::i;1365:38:23:-;;;:::i;1004:88:15:-;;;:::i;1069:36:23:-;;;:::i;5136:490::-;;;;;;:::i;:::-;;:::i;4082:318:15:-;;;;;;:::i;:::-;;:::i;1804:162::-;;;;;;:::i;:::-;;:::i;758:36:20:-;;;:::i;2772:740:23:-;;;;;;:::i;:::-;;:::i;1406:709:20:-;;;;;;:::i;:::-;;:::i;957:36:16:-;;;:::i;712:41:20:-;;;:::i;2232:165:15:-;;;;;;:::i;:::-;;:::i;988:36:23:-;;;:::i;799:43:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;8324:1025:23:-;;;;;;:::i;:::-;;:::i;2498:270::-;;;;;;:::i;:::-;;:::i;866:84:15:-;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:13;;933:12;;940:5;;933:12;;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84;:::o;1467:51:23:-;;;;;;;;;;;;;:::o;2561:156:15:-;2644:4;2656:39;2665:12;:10;:12::i;:::-;2679:7;2688:6;2656:8;:39::i;:::-;-1:-1:-1;2708:4:15;2561:156;;;;;:::o;1292:92::-;1367:12;;1292:92;:::o;3659:971:23:-;3735:11;3727:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:10;3807:30;3840:28;;;:16;:28;;;;;;3907:44;3840:28;3934:16;3907:26;:44::i;:::-;3889:15;:62;3874:114;;;;;;;;;;;;:::i;:::-;4078:14;4009:65;4029:44;:22;4056:16;4029:26;:44::i;:::-;4009:15;;:19;:65::i;:::-;:83;;3994:137;;;;;;;;;;;;:::i;:::-;4137:30;4170:21;4180:10;4170:9;:21::i;:::-;4137:54;;4198:22;4233;4224:6;:31;4223:67;;4284:6;4223:67;;;4259:22;4223:67;4198:92;;4297:72;4328:10;4340:22;4364:4;4297:30;:72::i;:::-;;4376:33;4382:10;4394:14;4376:5;:33::i;:::-;4420:42;:22;4447:14;4420:26;:42::i;:::-;4416:100;;4494:10;4508:1;4477:28;;;:16;:28;;;;;:32;4416:100;4522:53;:33;4529:12;4522:33;4556:2;4560:14;4522:33;:53::i;:::-;4606:2;4587:38;;4594:10;4587:38;;;4610:14;4587:38;;;;;;:::i;:::-;;;;;;;;3659:971;;;;;:::o;3044:343:15:-;3166:4;3178:36;3188:6;3196:9;3207:6;3178:9;:36::i;:::-;3220:145;3236:6;3250:12;:10;:12::i;:::-;3270:89;3308:6;3270:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3290:12;:10;:12::i;:::-;3270:33;;;;;;;;;;;;;-1:-1:-1;3270:33:15;;;:89;:37;:89::i;:::-;3220:8;:145::i;:::-;-1:-1:-1;3378:4:15;3044:343;;;;;;:::o;551:66:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1029:36:23:-;;;:::o;1148:84:15:-;1218:9;;;;1148:84;:::o;7914:128:20:-;8012:13;;;;7990:7;8012:13;;;:6;:13;;;;;;;;:25;;;;;:19;;;;:25;;;;7914:128;;;;:::o;1236:39:23:-;;;:::o;3627:205:15:-;3715:4;3727:83;3736:12;:10;:12::i;:::-;3750:7;3759:50;3798:10;3759:11;:25;3771:12;:10;:12::i;:::-;3759:25;;;;;;;;;;;;;;;;;;-1:-1:-1;3759:25:15;;;:34;;;;;;;;;;;:38;:50::i;1439:111::-;1527:18;;1505:7;1527:18;;;;;;;;;;;;1439:111::o;1109:41:23:-;;;:::o;4751:230::-;4803:21;4813:10;4803:9;:21::i;:::-;4795:66;;;;;;;;;;;;:::i;:::-;4915:10;4898:28;;;;:16;:28;;;;;;4929:15;4898:46;;4956:20;;;4898:28;4956:20;4751:230::o;1408:55::-;;;;;;;;;;;;;:::o;621:51:16:-;;;;;;;;;;;;;:::o;9493:468:23:-;9645:41;;;9684:1;9645:41;;;;;;;;;9564:7;;9579:57;;9645:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9579:107;;9713:151;;;;;;;;9779:4;9713:151;;;;;;9806:17;9816:6;9806:9;:17::i;:::-;9713:151;;;;9844:13;:11;:13::i;:::-;9713:151;;;9692:15;9708:1;9692:18;;;;;;;;;;;;;:172;;;;9877:79;9910:45;9931:6;9939:15;9910:20;:45::i;:::-;9877:28;;;;;;;:20;:28;;;;;;;:32;:79::i;666:41:20:-;;;:::o;1365:38:23:-;;;:::o;1004:88:15:-;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:13;;1073:14;;1080:7;;1073:14;;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;1069:36:23;;;:::o;5136:490::-;5210:23;5242:72;5273:10;5285:21;5295:10;5285:9;:21::i;:::-;5308:5;5242:30;:72::i;:::-;5210:104;;5320:21;5355:17;5345:6;:27;5344:56;;5394:6;5344:56;;;5376:15;5344:56;5320:80;;5442:52;5462:13;5442:52;;;;;;;;;;;;;;;;;:15;:19;;:52;;;;;:::i;:::-;5428:10;5407:32;;;;:20;:32;;;;;:87;5501:63;:12;5407:32;5501:29;5531:13;5546:2;5550:13;5501:29;:63::i;:::-;5603:2;5576:45;;5591:10;5576:45;;;5607:13;5576:45;;;;;;:::i;:::-;;;;;;;;5136:490;;;;:::o;4082:318:15:-;4187:4;4201:177;4217:12;:10;:12::i;:::-;4237:7;4252:120;4300:15;4252:120;;;;;;;;;;;;;;;;;:11;:25;4264:12;:10;:12::i;:::-;4252:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4252:25:15;;;:34;;;;;;;;;;;:120;:38;:120::i;1804:162::-;1890:4;1902:42;1912:12;:10;:12::i;:::-;1926:9;1937:6;1902:9;:42::i;758:36:20:-;792:2;758:36;:::o;2772:740:23:-;2855:11;2847:43;;;;;;;;;;;;:::i;:::-;2896:21;2920;2930:10;2920:9;:21::i;:::-;2896:45;;2948:22;2979:81;3004:10;3024:4;3031:13;3046;:11;:13::i;:::-;2979:24;:81::i;:::-;2948:112;-1:-1:-1;3070:19:23;;3066:182;;3104:42;3119:10;3131:14;3104:42;;;;;;;:::i;:::-;;;;;;;;3189:32;;;;;;;:20;:32;;;;;;:52;;3226:14;3189:36;:52::i;:::-;3154:32;;;;;;;:20;:32;;;;;:87;3066:182;3285:62;3310:1;3313:6;3321:10;3333:13;3285:24;:62::i;:::-;3254:28;;;;;;;:16;:28;;;;;:93;3354:25;3271:10;3372:6;3354:5;:25::i;:::-;3385:72;:37;3392:12;3385:37;3423:10;3443:4;3450:6;3385:37;:72::i;:::-;3488:10;3469:38;;3476:10;3469:38;;;3500:6;3469:38;;;;;;:::i;1406:709:20:-;1538:10;:30;1552:16;1538:30;;1530:64;;;;;;;;;;;;:::i;:::-;1606:9;1601:510;1621:28;;;1601:510;;;1664:29;1696:6;:44;1703:17;;1721:1;1703:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1696:44;;;;;;;;;;;;;;;1664:76;;1749:142;1784:17;;1802:1;1784:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1830:11;1851:17;;1869:1;1851:20;;;;;;;;;;;;:32;;;1749:25;:142::i;:::-;;1932:17;;1950:1;1932:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;1932:38:20;:::i;:::-;1900:70;;;;;;;;;;;;2012:17;;2030:1;2012:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1984:120;;;2058:17;;2076:1;2058:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;2058:38:20;:::i;:::-;1984:120;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1651:3:20;;1601:510;;;;1406:709;;:::o;957:36:16:-;;;;;;:::o;712:41:20:-;;;:::o;2232:165:15:-;2365:18;;;;2341:7;2365:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2232:165::o;988:36:23:-;1023:1;988:36;:::o;799:43:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8324:1025:23:-;8538:27;;;8493:7;8538:27;;;:16;:27;;;;;;8575:24;8571:53;;8616:1;8609:8;;;;;8571:53;8630:37;8676:57;8718:14;8676:37;:15;8696:16;8676:19;:37::i;:::-;:41;;:57::i;:::-;8630:103;;8776:19;8744:29;:51;8740:573;;;8827:1;8805:23;;8740:573;;;8849:29;8922:21;8890:29;:53;8889:117;;8985:21;8889:117;;;8957:15;8889:117;8849:157;;9043:19;9019:21;:43;9015:292;;;9081:19;9074:26;;;;;;;9015:292;9147:151;9267:30;:15;9287:9;9267:19;:30::i;:::-;9159:82;9206:34;:9;9220:19;9206:13;:34::i;:::-;9159:42;:15;9179:21;9159:19;:42::i;:::-;:46;;:82::i;:::-;9147:119;;:151::i;:::-;9125:173;;8740:573;;-1:-1:-1;9325:19:23;-1:-1:-1;8324:1025:23;;;;;;;:::o;2498:270::-;1040:16:25;1059:13;:11;:13::i;:::-;1040:32;;1097:23;;1086:8;:34;1078:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:23;:34;;;2657:14:23::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;2666:4;;;;;;2657:14;::::1;2666:4:::0;;;;2657:14;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;2657:8:23::1;::::0;-1:-1:-1;;;2657:14:23:i:1;:::-;2677:18;2688:6;;2677:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2677:10:23::1;::::0;-1:-1:-1;;;2677:18:23:i:1;:::-;2701:22;2714:8;2701:12;:22::i;:::-;2729:34;2748:14;2729:18;:34::i;:::-;2498:270:::0;;;;;;;:::o;913:162:19:-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:98:13;734:10;651:98;:::o;5672:338:15:-;5785:19;;;5777:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5859:21;;;5851:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5926:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;5973:32;;;;;;;;;;;;;;;;;5672:338;;;:::o;1319:128:19:-;1377:7;1399:43;1403:1;1406;1399:43;;;;;;;;;;;;;;;;;:3;:43::i;6995:539:23:-;7124:7;7139:22;7170:73;7195:4;7209;7216:11;7229:13;:11;:13::i;7170:73::-;7276:26;;;7249:24;7276:26;;;:20;:26;;;;;;7139:104;;-1:-1:-1;7249:24:23;7276:46;;7139:104;7276:30;:46::i;:::-;7249:73;-1:-1:-1;7333:19:23;;7329:171;;7366:13;7362:83;;;7391:26;;;;;;;:20;:26;;;;;:45;;;7362:83;7457:36;7472:4;7478:14;7457:36;;;;;;;:::i;:::-;;;;;;;;7329:171;7513:16;6995:539;-1:-1:-1;;;;;6995:539:23:o;5280:388:15:-;5359:21;;;5351:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5425:49;5446:7;5463:1;5467:6;5425:20;:49::i;:::-;5502:68;5525:6;5502:68;;;;;;;;;;;;;;;;;:18;;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;5481:18;;;:9;:18;;;;;;;;;;:89;5591:12;;:24;;5608:6;5591:16;:24::i;:::-;5576:12;:39;5626:37;;;;;;;;5652:1;;5626:37;;;;;;;;;;;;;5280:388;;:::o;790:184:18:-;910:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:23;910:58;;;884:85;;903:5;;884:18;:85::i;5827:822:23:-;5928:21;5952:15;5962:4;5952:9;:15::i;:::-;5928:39;;5987:57;6018:4;6024:13;6039:4;5987:30;:57::i;:::-;;6080:2;6072:10;;:4;:10;;;6068:537;;6092:19;6114:13;6124:2;6114:9;:13::i;:::-;6092:35;;6135:53;6166:2;6170:11;6183:4;6135:30;:53::i;:::-;-1:-1:-1;6230:22:23;;;6197:30;6230:22;;;:16;:22;;;;;;6283:113;6230:22;6349:6;6365:2;6377:11;6283:24;:113::i;:::-;6260:20;;;;;;;:16;:20;;;;;:136;6498:23;;;:54;;;;-1:-1:-1;6525:27:23;;;6498:54;6494:105;;;6564:22;;;6589:1;6564:22;;;:16;:22;;;;;:26;6494:105;6068:537;;;6611:33;6627:4;6633:2;6637:6;6611:15;:33::i;:::-;5827:822;;;;:::o;1711:189:19:-;1813:7;1844:12;1836:6;;;;1828:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1875:5:19;;;1711:189::o;5299:675:20:-;5428:7;;;5478:465;5502:6;:13;5498:1;:17;5478:465;;;5530:29;5562:6;:33;5569:6;5576:1;5569:9;;;;;;;;;;;;;;;;;;;:25;5562:33;;;;;;;;;;;;5569:25;5562:33;;;5658:17;;;;5687:29;;5771:9;;5562:33;;-1:-1:-1;5632:170:20;;5687:29;;;;;5728:31;;;;;5771:6;;5778:1;;5771:9;;;;;;;;;;;;:21;;;5632:14;:170::i;:::-;5603:199;;5828:108;5856:72;5868:6;5875:1;5868:9;;;;;;;;;;;;;;:22;;;5892:10;5904:11;:17;;:23;5922:4;5904:23;;;;;;;;;;;;;;;;5856:11;:72::i;:::-;5828:14;;:18;:108::i;:::-;5811:125;-1:-1:-1;;;5517:3:20;;5478:465;;;-1:-1:-1;5955:14:20;5299:675;-1:-1:-1;;;5299:675:20:o;978:216:18:-;1120:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:27;1120:68;;;1094:95;;1113:5;;1094:18;:95::i;3620:641:20:-;3809:13;;;;3764:7;3809:13;;;:6;:13;;;;;;;;3848:21;;;;;:15;;;:21;;;;;;3764:7;;3809:13;3764:7;;3927:56;3816:5;3809:13;3971:11;3927:25;:56::i;:::-;3908:75;;4007:8;3994:9;:21;3990:239;;4029:17;;4025:105;;4075:46;4087:12;4101:8;4111:9;4075:11;:46::i;:::-;4058:63;;4025:105;4138:21;;;;;;;;:15;;;:21;;;;;;;:32;;;4183:39;;;;;;;;;4162:8;;4183:39;:::i;:::-;;;;;;;;3990:239;-1:-1:-1;4242:14:20;3620:641;-1:-1:-1;;;;;;;3620:641:20:o;4928:348:15:-;5007:21;;;4999:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5071:49;5100:1;5104:7;5113:6;5071:20;:49::i;:::-;5142:12;;:24;;5159:6;5142:16;:24::i;:::-;5127:12;:39;5193:18;;;:9;:18;;;;;;;;;;;:30;;5216:6;5193:22;:30::i;:::-;5172:18;;;:9;:18;;;;;;;;;;;:51;;;;5234:37;;;;;;;5172:18;;:9;;5234:37;;;;;;;;;;4928:348;;:::o;2526:689:20:-;2706:17;;;;2759:31;;2672:7;;2706:17;2759:31;;;;;2801:15;:38;;2797:74;;;-1:-1:-1;2856:8:20;-1:-1:-1;2849:15:20;;2797:74;2927:29;;2877:16;;2902:89;;2917:8;;2927:29;;2958:19;2979:11;2902:14;:89::i;:::-;2877:114;;3014:8;3002;:20;2998:126;;3052:8;3032:11;:17;;:28;;;;3091:15;3073:44;;;3108:8;3073:44;;;;;;:::i;:::-;;;;;;;;2998:126;3130:58;;;3172:15;3130:58;;;;;;;;;3202:8;-1:-1:-1;;;2526:689:20;;;;;:::o;2120:419:19:-;2178:7;2403:6;2399:35;;-1:-1:-1;2426:1:19;2419:8;;2399:35;2452:5;;;2456:1;2452;:5;:1;2471:5;;;;;:10;2463:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:124;3028:7;3050:39;3054:1;3057;3050:39;;;;;;;;;;;;;;;;;:3;:39::i;10065:90:23:-;1023:1;10065:90;:::o;6014:76:15:-;6070:15;;;;:5;;:15;;;;;:::i;:::-;;6014:76;:::o;6094:84::-;6154:19;;;;:7;;:19;;;;;:::i;6182:84::-;6238:9;:23;;;;;;;;;;;;;;;6182:84::o;1201:118:16:-;1282:15;:32;;;;;;;;;;;;;;;1201:118::o;2698:709::-;2830:2;2822:10;;:4;:10;;;2818:37;;;2842:7;;2818:37;2865:18;;;;2861:160;;2893:19;2915:15;2925:4;2915:9;:15::i;:::-;2893:37;-1:-1:-1;2938:76:16;2953:4;2893:37;2989:23;2893:37;3005:6;2989:15;:23::i;:::-;2938:14;:76::i;:::-;2861:160;;3030:16;;;;3026:148;;3056:17;3076:13;3086:2;3076:9;:13::i;:::-;3056:33;-1:-1:-1;3097:70:16;3112:2;3056:33;3144:21;3056:33;3158:6;3144:13;:21::i;3097:70::-;3026:148;;3284:15;;;;3309:34;;3305:98;;3353:14;:25;;;3379:4;3385:2;3389:6;3353:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:709;;;;:::o;1547:555:18:-;1630:27;1638:5;1630:25;;;:27::i;:::-;1622:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:12;1770:23;1805:5;1797:19;;1817:4;1797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:67;;;;1836:7;1828:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:17;;:21;1887:211;;2025:10;2014:30;;;;;;;;;;;;;;;-1:-1:-1;2014:30:18;2006:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4404:520:15;4521:20;;;4513:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:23;;;4589:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4667:47;4688:6;4696:9;4707:6;4667:20;:47::i;:::-;4741:71;4763:6;4741:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;4721:17;;;;:9;:17;;;;;;;;;;;:91;;;;4841:20;;;;;;;:32;;4866:6;4841:24;:32::i;:::-;4818:20;;;;:9;:20;;;;;;;;;;;;:55;;;;4884:35;;;;;;;4818:20;;4884:35;;;;;;;;;;;;;4404:520;;;:::o;7011:693:20:-;7178:7;7204:22;;;:49;;-1:-1:-1;7236:17:20;;7204:49;:97;;;;7286:15;7263:19;:38;;;7204:97;:146;;;;7334:16;7311:19;:39;;;;7204:146;7193:198;;;-1:-1:-1;7372:12:20;7365:19;;7193:198;7397:24;7448:16;7430:15;:34;:71;;7486:15;7430:71;;;7467:16;7430:71;7397:104;-1:-1:-1;7507:17:20;7527:41;7397:104;7527:41;;;:20;:41::i;:::-;7507:61;-1:-1:-1;7587:112:20;7679:12;7587:78;7652:12;7587:60;7624:22;7587:32;:17;7507:61;7587:21;:32::i;:::-;:36;;:60::i;:112::-;7574:125;7011:693;-1:-1:-1;;;;;;;7011:693:20:o;6319:239::-;6450:7;6472:81;6530:22;6472:53;6497:27;:12;6514:9;6497:16;:27::i;:::-;6472:20;;:24;:53::i;3545:332:19:-;3647:7;3739:12;3732:5;3724:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:9;3774:1;3770;:5;;;;;;;3545:332;-1:-1:-1;;;;;3545:332:19:o;1576:767:16:-;1773:23;;;1690:20;1773:23;;;:16;:23;;;;;;;;;1856:10;:17;;;;;;1721:12;;1773:23;1942:26;;;;;:108;;-1:-1:-1;1978:72:16;;;:14;:44;1993:28;:21;2019:1;1993:25;:28::i;:::-;1978:44;;;;;;;;;;;-1:-1:-1;1978:44:16;:56;;;:72;1942:108;1931:357;;;2118:8;2065:14;:44;2080:28;:21;2106:1;2080:25;:28::i;:::-;2065:44;;;;;;;;;;;-1:-1:-1;2065:44:16;:61;;;;;;;;;;;;;;;;1931:357;;;2187:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2147:37:16;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:28;2162:21;2147:72;2253:25;:28::i;:::-;2227:23;;;;;;;:16;:23;;;;;:54;1931:357;2299:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:767;;;;;;:::o;743:586:12:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;;1308:15:12;;;1273:51;-1:-1:-1;;743:586:12:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:378:28;;;132:3;125:4;117:6;113:17;109:27;99:2;;157:8;147;140:26;99:2;-1:-1:-1;187:20:28;;230:18;219:30;;216:2;;;269:8;259;252:26;216:2;313:4;305:6;301:17;289:29;;365:3;358:4;349:6;341;337:19;333:30;330:39;327:2;;;382:1;379;372:12;327:2;89:303;;;;;:::o;397:259::-;;509:2;497:9;488:7;484:23;480:32;477:2;;;530:6;522;515:22;477:2;574:9;561:23;593:33;620:5;593:33;:::i;661:402::-;;;790:2;778:9;769:7;765:23;761:32;758:2;;;811:6;803;796:22;758:2;855:9;842:23;874:33;901:5;874:33;:::i;:::-;926:5;-1:-1:-1;983:2:28;968:18;;955:32;996:35;955:32;996:35;:::i;:::-;1050:7;1040:17;;;748:315;;;;;:::o;1068:470::-;;;;1214:2;1202:9;1193:7;1189:23;1185:32;1182:2;;;1235:6;1227;1220:22;1182:2;1279:9;1266:23;1298:33;1325:5;1298:33;:::i;:::-;1350:5;-1:-1:-1;1407:2:28;1392:18;;1379:32;1420:35;1379:32;1420:35;:::i;:::-;1172:366;;1474:7;;-1:-1:-1;;;1528:2:28;1513:18;;;;1500:32;;1172:366::o;1543:327::-;;;1672:2;1660:9;1651:7;1647:23;1643:32;1640:2;;;1693:6;1685;1678:22;1640:2;1737:9;1724:23;1756:33;1783:5;1756:33;:::i;:::-;1808:5;1860:2;1845:18;;;;1832:32;;-1:-1:-1;;;1630:240:28:o;1875:704::-;;;2058:2;2046:9;2037:7;2033:23;2029:32;2026:2;;;2079:6;2071;2064:22;2026:2;2124:9;2111:23;2153:18;2194:2;2186:6;2183:14;2180:2;;;2215:6;2207;2200:22;2180:2;2258:6;2247:9;2243:22;2233:32;;2303:7;2296:4;2292:2;2288:13;2284:27;2274:2;;2330:6;2322;2315:22;2274:2;2375;2362:16;2401:2;2393:6;2390:14;2387:2;;;2422:6;2414;2407:22;2387:2;2483:7;2478:2;2470:4;2462:6;2458:17;2454:2;2450:26;2446:35;2443:48;2440:2;;;2509:6;2501;2494:22;2440:2;2545;2537:11;;;;;2567:6;;-1:-1:-1;2016:563:28;;-1:-1:-1;;;;2016:563:28:o;2584:1090::-;;;;;;;2807:3;2795:9;2786:7;2782:23;2778:33;2775:2;;;2829:6;2821;2814:22;2775:2;2873:9;2860:23;2892:33;2919:5;2892:33;:::i;:::-;2944:5;-1:-1:-1;3000:2:28;2985:18;;2972:32;3023:18;3053:14;;;3050:2;;;3085:6;3077;3070:22;3050:2;3129:61;3182:7;3173:6;3162:9;3158:22;3129:61;:::i;:::-;3209:8;;-1:-1:-1;3103:87:28;-1:-1:-1;3297:2:28;3282:18;;3269:32;;-1:-1:-1;3313:16:28;;;3310:2;;;3347:6;3339;3332:22;3310:2;;3391:63;3446:7;3435:8;3424:9;3420:24;3391:63;:::i;:::-;3473:8;;-1:-1:-1;3365:89:28;-1:-1:-1;;3560:2:28;3545:18;;3532:32;3608:4;3595:18;;3583:31;;3573:2;;3633:6;3625;3618:22;3573:2;3661:7;3651:17;;;2765:909;;;;;;;;:::o;3679:321::-;;3791:2;3779:9;3770:7;3766:23;3762:32;3759:2;;;3812:6;3804;3797:22;3759:2;3856:9;3843:23;3906:34;3899:5;3895:46;3888:5;3885:57;3875:2;;3961:6;3953;3946:22;4005:464;;;;;4168:3;4156:9;4147:7;4143:23;4139:33;4136:2;;;4190:6;4182;4175:22;4136:2;4231:9;4218:23;4208:33;;4288:2;4277:9;4273:18;4260:32;4250:42;;4342:2;4331:9;4327:18;4314:32;4355:33;4382:5;4355:33;:::i;:::-;4126:343;;;;-1:-1:-1;4407:5:28;;4459:2;4444:18;4431:32;;-1:-1:-1;;4126:343:28:o;4474:226::-;4650:42;4638:55;;;;4620:74;;4608:2;4593:18;;4575:125::o;4705:297::-;4909:42;4897:55;;;;4879:74;;4984:2;4969:18;;4962:34;4867:2;4852:18;;4834:168::o;5007:187::-;5172:14;;5165:22;5147:41;;5135:2;5120:18;;5102:92::o;5698:662::-;;5839:2;5868;5857:9;5850:21;5900:6;5894:13;5943:6;5938:2;5927:9;5923:18;5916:34;5968:4;5981:140;5995:6;5992:1;5989:13;5981:140;;;6090:14;;;6086:23;;6080:30;6056:17;;;6075:2;6052:26;6045:66;6010:10;;5981:140;;;6139:6;6136:1;6133:13;6130:2;;;6209:4;6204:2;6195:6;6184:9;6180:22;6176:31;6169:45;6130:2;-1:-1:-1;6276:2:28;6264:15;6281:66;6260:88;6245:104;;;;6351:2;6241:113;;5819:541;-1:-1:-1;;;5819:541:28:o;6365:343::-;6567:2;6549:21;;;6606:2;6586:18;;;6579:30;6645:21;6640:2;6625:18;;6618:49;6699:2;6684:18;;6539:169::o;6713:345::-;6915:2;6897:21;;;6954:2;6934:18;;;6927:30;6993:23;6988:2;6973:18;;6966:51;7049:2;7034:18;;6887:171::o;7063:345::-;7265:2;7247:21;;;7304:2;7284:18;;;7277:30;7343:23;7338:2;7323:18;;7316:51;7399:2;7384:18;;7237:171::o;7413:347::-;7615:2;7597:21;;;7654:2;7634:18;;;7627:30;7693:25;7688:2;7673:18;;7666:53;7751:2;7736:18;;7587:173::o;7765:351::-;7967:2;7949:21;;;8006:2;7986:18;;;7979:30;8045:29;8040:2;8025:18;;8018:57;8107:2;8092:18;;7939:177::o;8121:218::-;8297:34;8285:47;;;;8267:66;;8255:2;8240:18;;8222:117::o;8344:319::-;8528:34;8589:15;;;8571:34;;8641:15;;8636:2;8621:18;;8614:43;8506:2;8491:18;;8473:190::o;8668:390::-;8880:34;8941:15;;;8923:34;;8993:15;;;;8988:2;8973:18;;8966:43;9040:2;9025:18;;9018:34;;;;8858:2;8843:18;;8825:233::o;9063:177::-;9209:25;;;9197:2;9182:18;;9164:76::o;9245:184::-;9417:4;9405:17;;;;9387:36;;9375:2;9360:18;;9342:87::o;9434:156::-;9522:42;9515:5;9511:54;9504:5;9501:65;9491:2;;9580:1;9577;9570:12;9491:2;9481:109;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2596600","executionCost":"infinite","totalCost":"infinite"},"external":{"COOLDOWN_SECONDS()":"infinite","DISTRIBUTION_END()":"infinite","EMISSION_MANAGER()":"infinite","PRECISION()":"351","REVISION()":"317","REWARDS_VAULT()":"infinite","REWARD_TOKEN()":"infinite","STAKED_TOKEN()":"infinite","UNSTAKE_WINDOW()":"infinite","_aaveGovernance()":"1135","_countsSnapshots(address)":"1345","_snapshots(address,uint256)":"1479","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","assets(address)":"2213","balanceOf(address)":"1311","claimRewards(address,uint256)":"infinite","configureAssets((uint128,uint256,address)[])":"infinite","cooldown()":"22348","decimals()":"1092","decreaseAllowance(address,uint256)":"infinite","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"infinite","getTotalRewardsBalance(address)":"infinite","getUserAssetData(address,address)":"infinite","increaseAllowance(address,uint256)":"infinite","initialize(address,string,string,uint8)":"infinite","name()":"infinite","redeem(address,uint256)":"infinite","stake(address,uint256)":"infinite","stakerRewardsToClaim(address)":"1323","stakersCooldowns(address)":"1303","symbol()":"infinite","totalSupply()":"1141","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"COOLDOWN_SECONDS()":"72b49d63","DISTRIBUTION_END()":"919cd40f","EMISSION_MANAGER()":"cbcbb507","PRECISION()":"aaf5eb68","REVISION()":"dde43cba","REWARDS_VAULT()":"946776cd","REWARD_TOKEN()":"99248ea7","STAKED_TOKEN()":"312f6b83","UNSTAKE_WINDOW()":"359c4a96","_aaveGovernance()":"c3863ada","_countsSnapshots(address)":"8779588c","_snapshots(address,uint256)":"2acbf823","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assets(address)":"f11b8188","balanceOf(address)":"70a08231","claimRewards(address,uint256)":"9a99b4f0","configureAssets((uint128,uint256,address)[])":"b2a5dbfa","cooldown()":"787a08a6","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"f1cc432a","getTotalRewardsBalance(address)":"8dbefee2","getUserAssetData(address,address)":"3373ee4c","increaseAllowance(address,uint256)":"39509351","initialize(address,string,string,uint8)":"f6d2ee86","name()":"06fdde03","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e","stakerRewardsToClaim(address)":"7e90d7ef","stakersCooldowns(address)":"091030c3","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldownSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeWindow\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardsVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"distributionDuration\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Cooldown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldValue\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newValue\",\"type\":\"uint128\"}],\"name\":\"SnapshotDone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COOLDOWN_SECONDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKED_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_aaveGovernance\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_countsSnapshots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_snapshots\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"}],\"internalType\":\"struct DistributionTypes.AssetConfigInput[]\",\"name\":\"assetsConfigInput\",\"type\":\"tuple[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCooldownTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReceive\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBalance\",\"type\":\"uint256\"}],\"name\":\"getNextCooldownTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getTotalRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"aaveGovernance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerRewardsToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakersCooldowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"returns the allowance of spender on the tokens owned by owner\",\"params\":{\"owner\":\"the owner of the tokens\",\"spender\":\"the user allowed to spend the owner's tokens\"},\"returns\":{\"_0\":\"the amount of owner's tokens spender is allowed to spend*\"}},\"approve(address,uint256)\":{\"details\":\"allows spender to spend the tokens owned by msg.sender\",\"params\":{\"spender\":\"the user allowed to spend msg.sender tokens\"},\"returns\":{\"_0\":\"true*\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the balance of the token*\"}},\"claimRewards(address,uint256)\":{\"details\":\"Claims an `amount` of `REWARD_TOKEN` to the address `to`\",\"params\":{\"amount\":\"Amount to stake*\",\"to\":\"Address to stake for\"}},\"configureAssets((uint128,uint256,address)[])\":{\"details\":\"Configures the distribution of rewards for a list of assets\",\"params\":{\"assetsConfigInput\":\"The list of configurations to apply*\"}},\"cooldown()\":{\"details\":\"Activates the cooldown period to unstake - It can't be called if the user is not staking*\"},\"decimals()\":{\"returns\":{\"_0\":\"the decimals of the token*\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"decreases the allowance of spender to spend msg.sender tokens\",\"params\":{\"spender\":\"the user allowed to spend on behalf of msg.sender\",\"subtractedValue\":\"the amount being subtracted to the allowance\"},\"returns\":{\"_0\":\"true*\"}},\"getNextCooldownTimestamp(uint256,uint256,address,uint256)\":{\"details\":\"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \\\"worse\\\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0\",\"params\":{\"amountToReceive\":\"Amount\",\"fromCooldownTimestamp\":\"Cooldown timestamp of the sender\",\"toAddress\":\"Address of the recipient\",\"toBalance\":\"Current balance of the receiver\"},\"returns\":{\"_0\":\"The new cooldown timestamp*\"}},\"getTotalRewardsBalance(address)\":{\"details\":\"Return the total rewards pending to claim by an staker\",\"params\":{\"staker\":\"The staker address\"},\"returns\":{\"_0\":\"The rewards\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"increases the allowance of spender to spend msg.sender tokens\",\"params\":{\"addedValue\":\"the amount being added to the allowance\",\"spender\":\"the user allowed to spend on behalf of msg.sender\"},\"returns\":{\"_0\":\"true*\"}},\"initialize(address,string,string,uint8)\":{\"details\":\"Called by the proxy contract*\"},\"name()\":{\"returns\":{\"_0\":\"the name of the token*\"}},\"redeem(address,uint256)\":{\"details\":\"Redeems staked tokens, and stop earning rewards\",\"params\":{\"amount\":\"Amount to redeem*\",\"to\":\"Address to redeem to\"}},\"symbol()\":{\"returns\":{\"_0\":\"the symbol of the token*\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"the total supply of the token*\"}},\"transfer(address,uint256)\":{\"details\":\"executes a transfer of tokens from msg.sender to recipient\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\",\"sender\":\"the owner of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}}},\"title\":\"StakedAave\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"REWARDS_VAULT()\":{\"notice\":\"Address to pull from the rewards, needs to have approved this contract\"},\"UNSTAKE_WINDOW()\":{\"notice\":\"Seconds available to redeem once the cooldown period is fullfilled\"}},\"notice\":\"StakedToken with AAVE token as staked token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/stake/StakedAave.sol\":\"StakedAave\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external;\\n}\\n\",\"keccak256\":\"0xb9f57138a1840eea2b01e686f7fcfc296a631ba602c9404b70752ecb8f86f8db\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IStakedAave.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedAave {\\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x757fb8a77394148520347549d7d339f5902e4beb113db528788e2d44b0bb7289\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {ERC20} from '../lib/ERC20.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\n\\n/**\\n * @title ERC20WithSnapshot\\n * @notice ERC20 including snapshots of balances on transfer-related actions\\n * @author Aave\\n **/\\ncontract ERC20WithSnapshot is ERC20 {\\n  using SafeMath for uint256;\\n\\n  /// @dev snapshot of a value on a specific block, used for balances\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  mapping(address => mapping(uint256 => Snapshot)) public _snapshots;\\n  mapping(address => uint256) public _countsSnapshots;\\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\\n  /// to control all potential reentrancies by calling back the this contract\\n  ITransferHook public _aaveGovernance;\\n\\n  event SnapshotDone(address owner, uint128 oldValue, uint128 newValue);\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public ERC20(name, symbol, decimals) {}\\n\\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\\n    _aaveGovernance = aaveGovernance;\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal virtual {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerCountOfSnapshots = _countsSnapshots[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = _snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerCountOfSnapshots != 0 &&\\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerCountOfSnapshots] = Snapshot(currentBlock, newValue);\\n      _countsSnapshots[owner] = ownerCountOfSnapshots.add(1);\\n    }\\n\\n    emit SnapshotDone(owner, oldValue, newValue);\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\\n   * - On _transfer, it writes snapshots for both \\\"from\\\" and \\\"to\\\"\\n   * - On _mint, only for _to\\n   * - On _burn, only for _from\\n   * @param from the from address\\n   * @param to the to address\\n   * @param amount the amount to transfer\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    if (from != address(0)) {\\n      uint256 fromBalance = balanceOf(from);\\n      _writeSnapshot(from, uint128(fromBalance), uint128(fromBalance.sub(amount)));\\n    }\\n    if (to != address(0)) {\\n      uint256 toBalance = balanceOf(to);\\n      _writeSnapshot(to, uint128(toBalance), uint128(toBalance.add(amount)));\\n    }\\n\\n    // caching the aave governance address to avoid multiple state loads\\n    ITransferHook aaveGovernance = _aaveGovernance;\\n    if (aaveGovernance != ITransferHook(0)) {\\n      aaveGovernance.onTransfer(from, to, amount);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xd7c631c298da697894c98fa9e8ec6760c56979d62d5e7bdb485ca71c42af9033\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/AaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\n/**\\n * @title AaveDistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract AaveDistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint128 emissionPerSecond;\\n    uint128 lastUpdateTimestamp;\\n    uint256 index;\\n    mapping(address => uint256) users;\\n  }\\n\\n  uint256 public immutable DISTRIBUTION_END;\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n\\n  constructor(address emissionManager, uint256 distributionDuration) public {\\n    DISTRIBUTION_END = block.timestamp.add(distributionDuration);\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /**\\n   * @dev Configures the distribution of rewards for a list of assets\\n   * @param assetsConfigInput The list of configurations to apply\\n   **/\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external\\n    override\\n  {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address underlyingAsset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, assetConfig.emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      assetConfig.index = newIndex;\\n      emit AssetIndexUpdated(underlyingAsset, newIndex);\\n    }\\n\\n    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)).div(10**uint256(PRECISION));\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= DISTRIBUTION_END\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > DISTRIBUTION_END ? DISTRIBUTION_END : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n\\n  /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n  function getUserAssetData(address user, address asset) public view returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n}\\n\",\"keccak256\":\"0x1f639ee1fe125ee2122aefd7b849b54d548b3dd7623280ae216320e98f2c6d3c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/StakedAave.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {StakedToken} from './StakedToken.sol';\\n\\n/**\\n * @title StakedAave\\n * @notice StakedToken with AAVE token as staked token\\n * @author Aave\\n **/\\ncontract StakedAave is StakedToken {\\n  string internal constant NAME = 'Staked Aave';\\n  string internal constant SYMBOL = 'stkAAVE';\\n  uint8 internal constant DECIMALS = 18;\\n\\n  constructor(\\n    IERC20 stakedToken,\\n    IERC20 rewardToken,\\n    uint256 cooldownSeconds,\\n    uint256 unstakeWindow,\\n    address rewardsVault,\\n    address emissionManager,\\n    uint128 distributionDuration\\n  )\\n    public\\n    StakedToken(\\n      stakedToken,\\n      rewardToken,\\n      cooldownSeconds,\\n      unstakeWindow,\\n      rewardsVault,\\n      emissionManager,\\n      distributionDuration,\\n      NAME,\\n      SYMBOL,\\n      DECIMALS\\n    )\\n  {}\\n}\\n\",\"keccak256\":\"0xec343ba4e73b6a66509186d38f3c30ccbdb69f0df2b4f9a299240314ee396b97\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/StakedToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IStakedAave} from '../interfaces/IStakedAave.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {ERC20WithSnapshot} from '../lib/ERC20WithSnapshot.sol';\\nimport {SafeERC20} from '../lib/SafeERC20.sol';\\nimport {VersionedInitializable} from '../utils/VersionedInitializable.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {AaveDistributionManager} from './AaveDistributionManager.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\n\\n/**\\n * @title StakedToken\\n * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\\n * @author Aave\\n **/\\ncontract StakedToken is\\n  IStakedAave,\\n  ERC20WithSnapshot,\\n  VersionedInitializable,\\n  AaveDistributionManager\\n{\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  uint256 public constant REVISION = 1;\\n\\n  IERC20 public immutable STAKED_TOKEN;\\n  IERC20 public immutable REWARD_TOKEN;\\n  uint256 public immutable COOLDOWN_SECONDS;\\n\\n  /// @notice Seconds available to redeem once the cooldown period is fullfilled\\n  uint256 public immutable UNSTAKE_WINDOW;\\n\\n  /// @notice Address to pull from the rewards, needs to have approved this contract\\n  address public immutable REWARDS_VAULT;\\n\\n  mapping(address => uint256) public stakerRewardsToClaim;\\n  mapping(address => uint256) public stakersCooldowns;\\n\\n  event Staked(address indexed from, address indexed onBehalfOf, uint256 amount);\\n  event Redeem(address indexed from, address indexed to, uint256 amount);\\n\\n  event RewardsAccrued(address user, uint256 amount);\\n  event RewardsClaimed(address indexed from, address indexed to, uint256 amount);\\n\\n  event Cooldown(address indexed user);\\n\\n  constructor(\\n    IERC20 stakedToken,\\n    IERC20 rewardToken,\\n    uint256 cooldownSeconds,\\n    uint256 unstakeWindow,\\n    address rewardsVault,\\n    address emissionManager,\\n    uint128 distributionDuration,\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  )\\n    public\\n    ERC20WithSnapshot(name, symbol, decimals)\\n    AaveDistributionManager(emissionManager, distributionDuration)\\n  {\\n    STAKED_TOKEN = stakedToken;\\n    REWARD_TOKEN = rewardToken;\\n    COOLDOWN_SECONDS = cooldownSeconds;\\n    UNSTAKE_WINDOW = unstakeWindow;\\n    REWARDS_VAULT = rewardsVault;\\n  }\\n\\n  /**\\n   * @dev Called by the proxy contract\\n   **/\\n  function initialize(\\n    ITransferHook aaveGovernance,\\n    string calldata name,\\n    string calldata symbol,\\n    uint8 decimals\\n  ) external initializer {\\n    _setName(name);\\n    _setSymbol(symbol);\\n    _setDecimals(decimals);\\n    _setAaveGovernance(aaveGovernance);\\n  }\\n\\n  function stake(address onBehalfOf, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    uint256 balanceOfUser = balanceOf(onBehalfOf);\\n\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(onBehalfOf, address(this), balanceOfUser, totalSupply());\\n    if (accruedRewards != 0) {\\n      emit RewardsAccrued(onBehalfOf, accruedRewards);\\n      stakerRewardsToClaim[onBehalfOf] = stakerRewardsToClaim[onBehalfOf].add(accruedRewards);\\n    }\\n\\n    stakersCooldowns[onBehalfOf] = getNextCooldownTimestamp(0, amount, onBehalfOf, balanceOfUser);\\n\\n    _mint(onBehalfOf, amount);\\n    IERC20(STAKED_TOKEN).safeTransferFrom(msg.sender, address(this), amount);\\n\\n    emit Staked(msg.sender, onBehalfOf, amount);\\n  }\\n\\n  /**\\n   * @dev Redeems staked tokens, and stop earning rewards\\n   * @param to Address to redeem to\\n   * @param amount Amount to redeem\\n   **/\\n  function redeem(address to, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    //solium-disable-next-line\\n    uint256 cooldownStartTimestamp = stakersCooldowns[msg.sender];\\n    require(\\n      block.timestamp > cooldownStartTimestamp.add(COOLDOWN_SECONDS),\\n      'INSUFFICIENT_COOLDOWN'\\n    );\\n    require(\\n      block.timestamp.sub(cooldownStartTimestamp.add(COOLDOWN_SECONDS)) <= UNSTAKE_WINDOW,\\n      'UNSTAKE_WINDOW_FINISHED'\\n    );\\n    uint256 balanceOfMessageSender = balanceOf(msg.sender);\\n\\n    uint256 amountToRedeem = (amount > balanceOfMessageSender) ? balanceOfMessageSender : amount;\\n\\n    _updateCurrentUnclaimedRewards(msg.sender, balanceOfMessageSender, true);\\n\\n    _burn(msg.sender, amountToRedeem);\\n\\n    if (balanceOfMessageSender.sub(amountToRedeem) == 0) {\\n      stakersCooldowns[msg.sender] = 0;\\n    }\\n\\n    IERC20(STAKED_TOKEN).safeTransfer(to, amountToRedeem);\\n\\n    emit Redeem(msg.sender, to, amountToRedeem);\\n  }\\n\\n  /**\\n   * @dev Activates the cooldown period to unstake\\n   * - It can't be called if the user is not staking\\n   **/\\n  function cooldown() external override {\\n    require(balanceOf(msg.sender) != 0, 'INVALID_BALANCE_ON_COOLDOWN');\\n    //solium-disable-next-line\\n    stakersCooldowns[msg.sender] = block.timestamp;\\n\\n    emit Cooldown(msg.sender);\\n  }\\n\\n  /**\\n   * @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\\n   * @param to Address to stake for\\n   * @param amount Amount to stake\\n   **/\\n  function claimRewards(address to, uint256 amount) external override {\\n    uint256 newTotalRewards =\\n      _updateCurrentUnclaimedRewards(msg.sender, balanceOf(msg.sender), false);\\n    uint256 amountToClaim = (amount == type(uint256).max) ? newTotalRewards : amount;\\n\\n    stakerRewardsToClaim[msg.sender] = newTotalRewards.sub(amountToClaim, 'INVALID_AMOUNT');\\n\\n    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);\\n\\n    emit RewardsClaimed(msg.sender, to, amountToClaim);\\n  }\\n\\n  /**\\n   * @dev Internal ERC20 _transfer of the tokenized staked tokens\\n   * @param from Address to transfer from\\n   * @param to Address to transfer to\\n   * @param amount Amount to transfer\\n   **/\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    uint256 balanceOfFrom = balanceOf(from);\\n    // Sender\\n    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);\\n\\n    // Recipient\\n    if (from != to) {\\n      uint256 balanceOfTo = balanceOf(to);\\n      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);\\n\\n      uint256 previousSenderCooldown = stakersCooldowns[from];\\n      stakersCooldowns[to] = getNextCooldownTimestamp(\\n        previousSenderCooldown,\\n        amount,\\n        to,\\n        balanceOfTo\\n      );\\n      // if cooldown was set and whole balance of sender was transferred - clear cooldown\\n      if (balanceOfFrom == amount && previousSenderCooldown != 0) {\\n        stakersCooldowns[from] = 0;\\n      }\\n    }\\n\\n    super._transfer(from, to, amount);\\n  }\\n\\n  /**\\n   * @dev Updates the user state related with his accrued rewards\\n   * @param user Address of the user\\n   * @param userBalance The current balance of the user\\n   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\\n   * @return The unclaimed rewards that were added to the total accrued\\n   **/\\n  function _updateCurrentUnclaimedRewards(\\n    address user,\\n    uint256 userBalance,\\n    bool updateStorage\\n  ) internal returns (uint256) {\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(user, address(this), userBalance, totalSupply());\\n    uint256 unclaimedRewards = stakerRewardsToClaim[user].add(accruedRewards);\\n\\n    if (accruedRewards != 0) {\\n      if (updateStorage) {\\n        stakerRewardsToClaim[user] = unclaimedRewards;\\n      }\\n      emit RewardsAccrued(user, accruedRewards);\\n    }\\n\\n    return unclaimedRewards;\\n  }\\n\\n  /**\\n   * @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\\n   *  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient\\n   *  - Weighted average of from/to cooldown timestamps if:\\n   *    # The sender doesn't have the cooldown activated (timestamp 0).\\n   *    # The sender timestamp is expired\\n   *    # The sender has a \\\"worse\\\" timestamp\\n   *  - If the receiver's cooldown timestamp expired (too old), the next is 0\\n   * @param fromCooldownTimestamp Cooldown timestamp of the sender\\n   * @param amountToReceive Amount\\n   * @param toAddress Address of the recipient\\n   * @param toBalance Current balance of the receiver\\n   * @return The new cooldown timestamp\\n   **/\\n  function getNextCooldownTimestamp(\\n    uint256 fromCooldownTimestamp,\\n    uint256 amountToReceive,\\n    address toAddress,\\n    uint256 toBalance\\n  ) public view returns (uint256) {\\n    uint256 toCooldownTimestamp = stakersCooldowns[toAddress];\\n    if (toCooldownTimestamp == 0) {\\n      return 0;\\n    }\\n\\n    uint256 minimalValidCooldownTimestamp =\\n      block.timestamp.sub(COOLDOWN_SECONDS).sub(UNSTAKE_WINDOW);\\n\\n    if (minimalValidCooldownTimestamp > toCooldownTimestamp) {\\n      toCooldownTimestamp = 0;\\n    } else {\\n      uint256 fromCooldownTimestamp =\\n        (minimalValidCooldownTimestamp > fromCooldownTimestamp)\\n          ? block.timestamp\\n          : fromCooldownTimestamp;\\n\\n      if (fromCooldownTimestamp < toCooldownTimestamp) {\\n        return toCooldownTimestamp;\\n      } else {\\n        toCooldownTimestamp = (\\n          amountToReceive.mul(fromCooldownTimestamp).add(toBalance.mul(toCooldownTimestamp))\\n        )\\n          .div(amountToReceive.add(toBalance));\\n      }\\n    }\\n    return toCooldownTimestamp;\\n  }\\n\\n  /**\\n   * @dev Return the total rewards pending to claim by an staker\\n   * @param staker The staker address\\n   * @return The rewards\\n   */\\n  function getTotalRewardsBalance(address staker) external view returns (uint256) {\\n    DistributionTypes.UserStakeInput[] memory userStakeInputs =\\n      new DistributionTypes.UserStakeInput[](1);\\n    userStakeInputs[0] = DistributionTypes.UserStakeInput({\\n      underlyingAsset: address(this),\\n      stakedByUser: balanceOf(staker),\\n      totalStaked: totalSupply()\\n    });\\n    return stakerRewardsToClaim[staker].add(_getUnclaimedRewards(staker, userStakeInputs));\\n  }\\n\\n  /**\\n   * @dev returns the revision of the implementation contract\\n   * @return The revision\\n   */\\n  function getRevision() internal pure override returns (uint256) {\\n    return REVISION;\\n  }\\n}\\n\",\"keccak256\":\"0x14d8b0b9054ef0250237d42fa5551a406c41c92bd39bae3d6a3b3a5114ba1333\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1916,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1922,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1924,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1926,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1928,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1930,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":2445,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_snapshots","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)2439_storage))"},{"astId":2449,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_countsSnapshots","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2452,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"_aaveGovernance","offset":0,"slot":"8","type":"t_contract(ITransferHook)1786"},{"astId":5701,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"lastInitializedRevision","offset":0,"slot":"9","type":"t_uint256"},{"astId":5732,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"______gap","offset":0,"slot":"10","type":"t_array(t_uint256)50_storage"},{"astId":3095,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"assets","offset":0,"slot":"60","type":"t_mapping(t_address,t_struct(AssetData)3084_storage)"},{"astId":3751,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"stakerRewardsToClaim","offset":0,"slot":"61","type":"t_mapping(t_address,t_uint256)"},{"astId":3755,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"stakersCooldowns","offset":0,"slot":"62","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_contract(ITransferHook)1786":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)2439_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct ERC20WithSnapshot.Snapshot))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Snapshot)2439_storage)"},"t_mapping(t_address,t_struct(AssetData)3084_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AaveDistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)3084_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Snapshot)2439_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot)","numberOfBytes":"32","value":"t_struct(Snapshot)2439_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetData)3084_storage":{"encoding":"inplace","label":"struct AaveDistributionManager.AssetData","members":[{"astId":3075,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint128"},{"astId":3077,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"lastUpdateTimestamp","offset":16,"slot":"0","type":"t_uint128"},{"astId":3079,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"index","offset":0,"slot":"1","type":"t_uint256"},{"astId":3083,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"users","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"96"},"t_struct(Snapshot)2439_storage":{"encoding":"inplace","label":"struct ERC20WithSnapshot.Snapshot","members":[{"astId":2436,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"blockNumber","offset":0,"slot":"0","type":"t_uint128"},{"astId":2438,"contract":"@aave/safety-module/contracts/stake/StakedAave.sol:StakedAave","label":"value","offset":16,"slot":"0","type":"t_uint128"}],"numberOfBytes":"32"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"REWARDS_VAULT()":{"notice":"Address to pull from the rewards, needs to have approved this contract"},"UNSTAKE_WINDOW()":{"notice":"Seconds available to redeem once the cooldown period is fullfilled"}},"notice":"StakedToken with AAVE token as staked token","version":1}}},"@aave/safety-module/contracts/stake/StakedAaveV2.sol":{"StakedAaveV2":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"stakedToken","type":"address"},{"internalType":"contract IERC20","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"cooldownSeconds","type":"uint256"},{"internalType":"uint256","name":"unstakeWindow","type":"uint256"},{"internalType":"address","name":"rewardsVault","type":"address"},{"internalType":"address","name":"emissionManager","type":"address"},{"internalType":"uint128","name":"distributionDuration","type":"uint128"},{"internalType":"address","name":"governance","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"emission","type":"uint256"}],"name":"AssetConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"AssetIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"Cooldown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegatedPowerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsAccrued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"UserIndexUpdated","type":"event"},{"inputs":[],"name":"COOLDOWN_SECONDS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELEGATE_BY_TYPE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELEGATE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISTRIBUTION_END","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIP712_REVISION","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMISSION_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARDS_VAULT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARD_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKED_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UNSTAKE_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_aaveGovernance","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_votingSnapshots","outputs":[{"internalType":"uint128","name":"blockNumber","type":"uint128"},{"internalType":"uint128","name":"value","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_votingSnapshotsCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"assets","outputs":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint128","name":"lastUpdateTimestamp","type":"uint128"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"address","name":"underlyingAsset","type":"address"}],"internalType":"struct DistributionTypes.AssetConfigInput[]","name":"assetsConfigInput","type":"tuple[]"}],"name":"configureAssets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"delegateByType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateByTypeBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegator","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getDelegateeByType","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fromCooldownTimestamp","type":"uint256"},{"internalType":"uint256","name":"amountToReceive","type":"uint256"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"toBalance","type":"uint256"}],"name":"getNextCooldownTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getTotalRewardsBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getUserAssetData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakerRewardsToClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakersCooldowns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"claimRewards(address,uint256)":{"details":"Claims an `amount` of `REWARD_TOKEN` to the address `to`","params":{"amount":"Amount to stake*","to":"Address to stake for"}},"configureAssets((uint128,uint256,address)[])":{"details":"Configures the distribution of rewards for a list of assets","params":{"assetsConfigInput":"The list of configurations to apply*"}},"cooldown()":{"details":"Activates the cooldown period to unstake - It can't be called if the user is not staking*"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{"details":"delegates all the powers to a specific user","params":{"delegatee":"the user to which the power will be delegated*"}},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Delegates power from signatory to `delegatee`","params":{"delegatee":"The address to delegate votes to","expiry":"The time at which to expire the signature","nonce":"The contract state required to match the signature","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"delegateByType(address,uint8)":{"details":"delegates one specific power to a delegatee","params":{"delegatee":"the user which delegated power has changed","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"}},"delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Delegates power from signatory to `delegatee`","params":{"delegatee":"The address to delegate votes to","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)","expiry":"The time at which to expire the signature","nonce":"The contract state required to match the signature","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"getDelegateeByType(address,uint8)":{"details":"returns the delegatee of an user","params":{"delegator":"the address of the delegator*"}},"getNextCooldownTimestamp(uint256,uint256,address,uint256)":{"details":"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \"worse\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0","params":{"amountToReceive":"Amount","fromCooldownTimestamp":"Cooldown timestamp of the sender","toAddress":"Address of the recipient","toBalance":"Current balance of the receiver"},"returns":{"_0":"The new cooldown timestamp*"}},"getPowerAtBlock(address,uint256,uint8)":{"details":"returns the delegated power of a user at a certain block","params":{"user":"the user*"}},"getPowerCurrent(address,uint8)":{"details":"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot","params":{"user":"the user*"}},"getTotalRewardsBalance(address)":{"details":"Return the total rewards pending to claim by an staker","params":{"staker":"The staker address"},"returns":{"_0":"The rewards"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"initialize()":{"details":"Called by the proxy contract*"},"name()":{"details":"Returns the name of the token."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md","params":{"deadline":"the deadline timestamp, type(uint256).max for no deadline","owner":"the owner of the funds","r":"signature param","s":"signature param","spender":"the spender","v":"signature param","value":"the amount"}},"redeem(address,uint256)":{"details":"Redeems staked tokens, and stop earning rewards","params":{"amount":"Amount to redeem*","to":"Address to redeem to"}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"totalSupplyAt(uint256)":{"details":"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*"},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"title":"StakedAaveV2","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1303:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"244:919:28","statements":[{"body":{"nodeType":"YulBlock","src":"291:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"300:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"308:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:28"},"nodeType":"YulFunctionCall","src":"293:22:28"},"nodeType":"YulExpressionStatement","src":"293:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"265:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"274:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"261:3:28"},"nodeType":"YulFunctionCall","src":"261:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"286:3:28","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"257:3:28"},"nodeType":"YulFunctionCall","src":"257:33:28"},"nodeType":"YulIf","src":"254:2:28"},{"nodeType":"YulVariableDeclaration","src":"326:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"345:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"339:5:28"},"nodeType":"YulFunctionCall","src":"339:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"330:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"391:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"364:26:28"},"nodeType":"YulFunctionCall","src":"364:33:28"},"nodeType":"YulExpressionStatement","src":"364:33:28"},{"nodeType":"YulAssignment","src":"406:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"416:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"406:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"430:40:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"455:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"466:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"451:3:28"},"nodeType":"YulFunctionCall","src":"451:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"445:5:28"},"nodeType":"YulFunctionCall","src":"445:25:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"434:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"506:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"479:26:28"},"nodeType":"YulFunctionCall","src":"479:35:28"},"nodeType":"YulExpressionStatement","src":"479:35:28"},{"nodeType":"YulAssignment","src":"523:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"533:7:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"523:6:28"}]},{"nodeType":"YulAssignment","src":"549:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"569:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"580:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"565:3:28"},"nodeType":"YulFunctionCall","src":"565:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"559:5:28"},"nodeType":"YulFunctionCall","src":"559:25:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"549:6:28"}]},{"nodeType":"YulAssignment","src":"593:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"613:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"624:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:28"},"nodeType":"YulFunctionCall","src":"609:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"603:5:28"},"nodeType":"YulFunctionCall","src":"603:25:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"593:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"637:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"662:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"673:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"658:3:28"},"nodeType":"YulFunctionCall","src":"658:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"652:5:28"},"nodeType":"YulFunctionCall","src":"652:26:28"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"641:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"714:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"687:26:28"},"nodeType":"YulFunctionCall","src":"687:35:28"},"nodeType":"YulExpressionStatement","src":"687:35:28"},{"nodeType":"YulAssignment","src":"731:17:28","value":{"name":"value_2","nodeType":"YulIdentifier","src":"741:7:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"731:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"757:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"793:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:28"},"nodeType":"YulFunctionCall","src":"778:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"772:5:28"},"nodeType":"YulFunctionCall","src":"772:26:28"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"761:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"834:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"807:26:28"},"nodeType":"YulFunctionCall","src":"807:35:28"},"nodeType":"YulExpressionStatement","src":"807:35:28"},{"nodeType":"YulAssignment","src":"851:17:28","value":{"name":"value_3","nodeType":"YulIdentifier","src":"861:7:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"851:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"877:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"902:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"913:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"898:3:28"},"nodeType":"YulFunctionCall","src":"898:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"892:5:28"},"nodeType":"YulFunctionCall","src":"892:26:28"},"variables":[{"name":"value_4","nodeType":"YulTypedName","src":"881:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"985:26:28","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"994:6:28"},{"name":"value6","nodeType":"YulIdentifier","src":"1002:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"987:6:28"},"nodeType":"YulFunctionCall","src":"987:22:28"},"nodeType":"YulExpressionStatement","src":"987:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_4","nodeType":"YulIdentifier","src":"940:7:28"},{"arguments":[{"name":"value_4","nodeType":"YulIdentifier","src":"953:7:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:3:28","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"975:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"966:3:28"},"nodeType":"YulFunctionCall","src":"966:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"979:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"962:3:28"},"nodeType":"YulFunctionCall","src":"962:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"949:3:28"},"nodeType":"YulFunctionCall","src":"949:33:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"937:2:28"},"nodeType":"YulFunctionCall","src":"937:46:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"930:6:28"},"nodeType":"YulFunctionCall","src":"930:54:28"},"nodeType":"YulIf","src":"927:2:28"},{"nodeType":"YulAssignment","src":"1020:17:28","value":{"name":"value_4","nodeType":"YulIdentifier","src":"1030:7:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1020:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1046:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1071:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1082:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1067:3:28"},"nodeType":"YulFunctionCall","src":"1067:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1061:5:28"},"nodeType":"YulFunctionCall","src":"1061:26:28"},"variables":[{"name":"value_5","nodeType":"YulTypedName","src":"1050:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_5","nodeType":"YulIdentifier","src":"1123:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1096:26:28"},"nodeType":"YulFunctionCall","src":"1096:35:28"},"nodeType":"YulExpressionStatement","src":"1096:35:28"},{"nodeType":"YulAssignment","src":"1140:17:28","value":{"name":"value_5","nodeType":"YulIdentifier","src":"1150:7:28"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"1140:6:28"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"154:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"165:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"177:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"185:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"193:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"201:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"209:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"217:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"225:6:28","type":""},{"name":"value7","nodeType":"YulTypedName","src":"233:6:28","type":""}],"src":"14:1149:28"},{"body":{"nodeType":"YulBlock","src":"1215:86:28","statements":[{"body":{"nodeType":"YulBlock","src":"1279:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1288:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1291:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1281:6:28"},"nodeType":"YulFunctionCall","src":"1281:12:28"},"nodeType":"YulExpressionStatement","src":"1281:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1238:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1249:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1264:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1269:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1260:3:28"},"nodeType":"YulFunctionCall","src":"1260:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1273:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1256:3:28"},"nodeType":"YulFunctionCall","src":"1256:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1245:3:28"},"nodeType":"YulFunctionCall","src":"1245:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1235:2:28"},"nodeType":"YulFunctionCall","src":"1235:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1228:6:28"},"nodeType":"YulFunctionCall","src":"1228:50:28"},"nodeType":"YulIf","src":"1225:2:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1204:5:28","type":""}],"src":"1168:133:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(value4, value4) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        let value_2 := mload(add(headStart, 128))\n        validator_revert_t_address(value_2)\n        value4 := value_2\n        let value_3 := mload(add(headStart, 160))\n        validator_revert_t_address(value_3)\n        value5 := value_3\n        let value_4 := mload(add(headStart, 192))\n        if iszero(eq(value_4, and(value_4, sub(shl(128, 1), 1)))) { revert(value6, value6) }\n        value6 := value_4\n        let value_5 := mload(add(headStart, 224))\n        validator_revert_t_address(value_5)\n        value7 := value_5\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405260006009553480156200001757600080fd5b5060405162004a1e38038062004a1e8339810160408190526200003a9162000299565b878787878787876040518060400160405280600b81526020016a5374616b6564204161766560a81b8152506040518060400160405280600781526020016673746b4141564560c81b81525060128a85856001600160801b031685858160039080519060200190620000ad929190620001ed565b508051620000c3906004906020840190620001ed565b505060058054601260ff1990911617905550620000ed428262000175602090811b62001e8717901c565b60805250606090811b6001600160601b031990811660a0528c821b811660c0528b821b811660e0526101008b90526101208a90529088901b1661014052600880546001600160a01b0319166001600160a01b0383161790556200015c82620001d7602090811b62001efb17901c565b5050505050505050505050505050505050505062000365565b600082820183811015620001d0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000225576000855562000270565b82601f106200024057805160ff191683800117855562000270565b8280016001018555821562000270579182015b828111156200027057825182559160200191906001019062000253565b506200027e92915062000282565b5090565b5b808211156200027e576000815560010162000283565b600080600080600080600080610100898b031215620002b6578384fd5b8851620002c3816200034c565b60208a0151909850620002d6816200034c565b8097505060408901519550606089015194506080890151620002f8816200034c565b60a08a01519094506200030b816200034c565b60c08a01519093506001600160801b038116811462000328578283fd5b60e08a01519092506200033b816200034c565b809150509295985092959890939650565b6001600160a01b03811681146200036257600080fd5b50565b60805160a05160601c60c05160601c60e05160601c61010051610120516101405160601c6146186200040660003980610f4f52806110ff5250806108115280610ad15280611bbe5250806107b352806108395280610c2a5280611be3525080610ffc52806110c852508061090c5280610a67528061138a52508061142752806118b4525080610f2b528061389252806138d7528061390452506146186000f3fe608060405234801561001057600080fd5b50600436106103365760003560e01c8063919cd40f116101b2578063b2f4201d116100f9578063d505accf116100a2578063dde43cba1161007c578063dde43cba14610623578063f11b81881461062b578063f1cc432a1461064d578063f713d8a81461066057610336565b8063d505accf146105ea578063dc937e1c146105fd578063dd62ed3e1461061057610336565b8063c3863ada116100d3578063c3863ada146105c7578063c3cda520146105cf578063cbcbb507146105e257610336565b8063b2f4201d1461058e578063b9844d8d146105a1578063c2ffbb91146105b457610336565b8063a457c2d71161015b578063aaf5eb6811610135578063aaf5eb6814610560578063adc9772e14610568578063b2a5dbfa1461057b57610336565b8063a457c2d714610532578063a9059cbb14610545578063aa9fbe021461055857610336565b8063981b24d01161018c578063981b24d01461050457806399248ea7146105175780639a99b4f01461051f57610336565b8063919cd40f146104ec578063946776cd146104f457806395d89b41146104fc57610336565b8063395093511161028157806372b49d631161022a5780637bb73c97116102045780637bb73c97146104ab5780637e90d7ef146104be5780638129fc1c146104d15780638dbefee2146104d957610336565b806372b49d6314610493578063781603761461049b578063787a08a6146104a357610336565b80635c19a95c1161025b5780635c19a95c1461045a5780636f50458d1461046d57806370a082311461048057610336565b8063395093511461041e57806341cbf54a146104315780635b3cc0cf1461043957610336565b806330adf81f116102e35780633373ee4c116102bd5780633373ee4c146103fb578063359c4a961461040e5780633644e5151461041657610336565b806330adf81f146103c9578063312f6b83146103d1578063313ce567146103e657610336565b806318160ddd1161031457806318160ddd146103995780631e9a6950146103a157806323b872dd146103b657610336565b806306fdde031461033b578063091030c314610359578063095ea7b314610379575b600080fd5b610343610673565b60405161035091906141a8565b60405180910390f35b61036c610367366004613c82565b610727565b604051610350919061409d565b61038c610387366004613dcc565b610739565b6040516103509190614092565b61036c610757565b6103b46103af366004613dcc565b61075d565b005b61038c6103c4366004613cce565b61099f565b61036c610a41565b6103d9610a65565b604051610350919061401a565b6103ee610a89565b6040516103509190614417565b61036c610409366004613c9c565b610a92565b61036c610acf565b61036c610af3565b61038c61042c366004613dcc565b610af9565b61036c610b54565b61044c610447366004613dcc565b610b78565b6040516103509291906143c7565b6103b4610468366004613c82565b610bbf565b6103d961047b366004613d72565b610bda565b61036c61048e366004613c82565b610bfc565b61036c610c28565b610343610c4c565b6103b4610c85565b61036c6104b9366004613c82565b610cfe565b61036c6104cc366004613c82565b610d10565b6103b4610d22565b61036c6104e7366004613c82565b610e60565b61036c610f29565b6103d9610f4d565b610343610f71565b61036c610512366004613f27565b610ff0565b6103d9610ffa565b6103b461052d366004613dcc565b61101e565b61038c610540366004613dcc565b611190565b61038c610553366004613dcc565b611205565b61036c611219565b6103ee61123d565b6103b4610576366004613dcc565b611242565b6103b4610589366004613e87565b61140f565b61036c61059c366004613d72565b611631565b61036c6105af366004613c82565b611659565b61036c6105c2366004613df5565b61166b565b6103d9611694565b6103b46105dd366004613e30565b6116b0565b6103d96118b2565b6103b46105f8366004613d09565b6118d6565b6103b461060b366004613d72565b611af2565b61036c61061e366004613c9c565b611b01565b61036c611b39565b61063e610639366004613c82565b611b3e565b604051610350939291906143ea565b61036c61065b366004613f3f565b611b82565b6103b461066e366004613d9b565b611c84565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061074d610746611f2f565b8484611f33565b5060015b92915050565b60025490565b8061079d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b60405180910390fd5b336000908152603e60205260409020546107d7817f0000000000000000000000000000000000000000000000000000000000000000611e87565b421161080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614229565b7f000000000000000000000000000000000000000000000000000000000000000061086461085d837f0000000000000000000000000000000000000000000000000000000000000000611e87565b429061207a565b111561089c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061433c565b60006108a733610bfc565b905060008184116108b857836108ba565b815b90506108c8338360016120bc565b506108d3338261217a565b6108dd828261207a565b6108f257336000908152603e60205260408120555b61093373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836122c4565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d983604051610990919061409d565b60405180910390a35050505050565b60006109ac848484612351565b610a36846109b8611f2f565b610a31856040518060600160405280602881526020016144d46028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610a03611f2f565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919061245e565b611f33565b5060015b9392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60435481565b600061074d610b06611f2f565b84610a318560016000610b17611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490611e87565b7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b610bcb3382600061250f565b610bd73382600161250f565b50565b600080610be683612692565b92505050610bf484826126cc565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b610c8e33610bfc565b610cc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614373565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b60076020526000908152604090205481565b603d6020526000908152604090205481565b6000610d2c612704565b90506009548111610d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806144fc602e913960400191505060405180910390fd5b6009819055467f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610db7610673565b8051602091820120604080518082018252600181527f31000000000000000000000000000000000000000000000000000000000000009084015251610e2393927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101614151565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206043555050565b60408051600180825281830190925260009160609190816020015b610e83613bf0565b815260200190600190039081610e7b57905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610ec885610bfc565b8152602001610ed5610757565b81525081600081518110610ee557fe5b6020026020010181905250610a3a610efd8483612709565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d602052604090205490611e87565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b6000610751610757565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006110343361102d33610bfc565b60006120bc565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83146110655782611067565b815b90506110b3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e540000000000000000000000000000000000008152508461245e9092919063ffffffff16565b336000908152603d60205260409020556111257f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051611182919061409d565b60405180910390a350505050565b600061074d61119d611f2f565b84610a31856040518060600160405280602581526020016145be60259139600160006111c7611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919061245e565b600061074d611212611f2f565b8484612351565b7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b601281565b80611279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b600061128483610bfc565b9050600061129b843084611296610757565b6128cc565b90508015611333577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7684826040516112d492919061406c565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d602052604090205461130c9082611e87565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b6113406000848685611b82565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e602052604090205561137084846129a5565b6113b273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051611182919061409d565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461147e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906142ce565b60005b8181101561162c576000603c600085858581811061149b57fe5b90506060020160400160208101906114b39190613c82565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506115328484848181106114fe57fe5b90506060020160400160208101906115169190613c82565b8286868681811061152357fe5b90506060020160200135612ad6565b5083838381811061153f57fe5b6115559260206060909202019081019150613ef7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061159d57fe5b90506060020160400160208101906115b59190613c82565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106115f857fe5b61160e9260206060909202019081019150613ef7565b60405161161b91906143aa565b60405180910390a250600101611481565b505050565b600080600061163f84612692565b509150915061165082828743612bd5565b95945050505050565b60446020526000908152604090205481565b600080600061167984612692565b509150915061168a82828888612bd5565b9695505050505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60007f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d8787876040516020016116e994939291906140e7565b604051602081830303815290604052805190602001209050600060435482604051602001611718929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611755949392919061418a565b6020604051602081039080840390855afa158015611777573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166117ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b8642111561188f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b61189b818a600061250f565b6118a7818a600161250f565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff8716611923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614305565b8342111561195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b73ffffffffffffffffffffffffffffffffffffffff871660009081526044602090815260408083205460435491519093926119c4917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918d918d918d9189918e91016140a6565b604051602081830303815290604052805190602001206040516020016119eb929190613fe4565b60405160208183030381529060405280519060200120905060018186868660405160008152602001604052604051611a26949392919061418a565b6020604051602081039080840390855afa158015611a48573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b611ac1826001611e87565b73ffffffffffffffffffffffffffffffffffffffff8a166000908152604460205260409020556118a7898989611f33565b611afd33838361250f565b5050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600281565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e602052604081205480611bb7576000915050610bf4565b6000611c0d7f0000000000000000000000000000000000000000000000000000000000000000611c07427f000000000000000000000000000000000000000000000000000000000000000061207a565b9061207a565b905081811115611c205760009150611c7a565b6000878211611c2f5787611c31565b425b905082811015611c4657829350505050610bf4565b611c76611c538887611e87565b611c70611c608887612f22565b611c6a8b86612f22565b90611e87565b90612f95565b9250505b5095945050505050565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611cb457fe5b8888604051602001611cca959493929190614118565b604051602081830303815290604052805190602001209050600060435482604051602001611cf9929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611d36949392919061418a565b6020604051602081039080840390855afa158015611d58573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b86421115611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b611e7b818b8b61250f565b50505050505050505050565b600082820183811015610a3a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806145706024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661200b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061446b6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000610a3a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061245e565b6000806120cd853086611296610757565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d6020526040812054919250906121019083611e87565b905081156116505783156121385773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76868360405161216992919061406c565b60405180910390a195945050505050565b73ffffffffffffffffffffffffffffffffffffffff82166121e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061452a6021913960400191505060405180910390fd5b6121f282600083612fd7565b61223c816040518060600160405280602281526020016144496022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205560025461226f908261207a565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261162c90849061315b565b600061235c84610bfc565b905061236a848260016120bc565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461244d5760006123a984610bfc565b90506123b7848260016120bc565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e60205260409020546123ea81858785611b82565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e6020526040902055828414801561241e57508015155b1561244a5773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b612458848484613399565b50505050565b60008184841115612507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124cc5781810151838201526020016124b4565b50505050905090810190601f1680156124f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b73ffffffffffffffffffffffffffffffffffffffff821661259157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f44454c454741544545000000000000000000000000000000604482015290519081900360640190fd5b600061259c82612692565b9250505060006125ab85610bfc565b905060006125b986846126cc565b73ffffffffffffffffffffffffffffffffffffffff878116600090815260208690526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918816919091179055905061261a81868487613569565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd866040518082600181111561267a57fe5b815260200191505060405180910390a3505050505050565b60008080808460018111156126a357fe5b14156126b957506006915060079050603f6126c5565b50604091506041905060425b9193909250565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526020839052604081205490911680610a3a5783915050610751565b600290565b600080805b835181101561282f576000603c600086848151811061272957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160009081206001810154815488519294506127b4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a90889081106127a357fe5b602002602001015160400151613861565b905061282361281c8785815181106127c857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613975565b8590611e87565b9350505060010161270e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261245890859061315b565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280612914888588612ad6565b90508083146129995786156129315761292e878285613975565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b9061299090859061409d565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216612a2757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612a3360008383612fd7565b600254612a409082611e87565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054612a739082611e87565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415612b1757509050610a3a565b8454600090612b3b9084906fffffffffffffffffffffffffffffffff168488613861565b9050828114612b9c578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051612b93919061409d565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b600043821115612c4657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e56414c49445f424c4f434b5f4e554d424552000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020859052604090205480612c8257612c7a84610bfc565b915050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850184529091529020546fffffffffffffffffffffffffffffffff168310612d6a5773ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909401835292905220546fffffffffffffffffffffffffffffffff700100000000000000000000000000000000909104169050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083208380529091529020546fffffffffffffffffffffffffffffffff16831015612dbc576000915050610bf4565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b81811115612ec1576002828203048103612dfa613c27565b5073ffffffffffffffffffffffffffffffffffffffff8716600090815260208a815260408083208484528252918290208251808401909352546fffffffffffffffffffffffffffffffff8082168085527001000000000000000000000000000000009092041691830191909152871415612e9057602001516fffffffffffffffffffffffffffffffff169450610bf49350505050565b80516fffffffffffffffffffffffffffffffff16871115612eb357819350612eba565b6001820392505b5050612de2565b5073ffffffffffffffffffffffffffffffffffffffff851660009081526020888152604080832093835292905220546fffffffffffffffffffffffffffffffff70010000000000000000000000000000000090910416915050949350505050565b600082612f3157506000610751565b82820282848281612f3e57fe5b0414610a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144b36021913960400191505060405180910390fd5b6000610a3a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613997565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603f6020526040808220548584168352912054908216911681613015578491505b73ffffffffffffffffffffffffffffffffffffffff81166130335750825b6130408282856000613569565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526042602052604080822054878416835291205490821691168161307e578691505b73ffffffffffffffffffffffffffffffffffffffff811661309c5750845b6130a98282876001613569565b60085473ffffffffffffffffffffffffffffffffffffffff168015613151576040517f4a39314900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690634a3931499061311e908b908b908b9060040161403b565b600060405180830381600087803b15801561313857600080fd5b505af115801561314c573d6000803e3d6000fd5b505050505b5050505050505050565b61317a8273ffffffffffffffffffffffffffffffffffffffff16613a16565b6131e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061324e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613211565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146132b0576040519150601f19603f3d011682016040523d82523d6000602084013e6132b5565b606091505b50915091508161332657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156124585780806020019051602081101561334257600080fd5b5051612458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614594602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316613405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061454b6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216613471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806144266023913960400191505060405180910390fd5b61347c838383612fd7565b6134c68160405180606001604052806026815260200161448d6026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546135029082611e87565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156135a257612458565b6000806135ae83612692565b50909250905073ffffffffffffffffffffffffffffffffffffffff8616156137095773ffffffffffffffffffffffffffffffffffffffff8616600090815260208290526040812054801561367a5773ffffffffffffffffffffffffffffffffffffffff88166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169150613686565b61368388610bfc565b91505b61369c84848a85613697818c61207a565b613a4f565b73ffffffffffffffffffffffffffffffffffffffff88167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f6136de848961207a565b87604051808381526020018260018111156136f557fe5b81526020019250505060405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8516156138595773ffffffffffffffffffffffffffffffffffffffff851660009081526020829052604081205480156137cf5773ffffffffffffffffffffffffffffffffffffffff87166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1691506137db565b6137d887610bfc565b91505b6137ec84848985613697818c611e87565b73ffffffffffffffffffffffffffffffffffffffff87167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f61382e8489611e87565b876040518083815260200182600181111561384557fe5b81526020019250505060405180910390a250505b505050505050565b600083158061386e575081155b8061388a575042836fffffffffffffffffffffffffffffffff16145b806138c757507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156138d3575083610bf4565b60007f000000000000000000000000000000000000000000000000000000000000000042116139025742613924565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000613944826fffffffffffffffffffffffffffffffff871661207a565b905061396a87611c6a86611c70670de0b6b3a76400006139648c88612f22565b90612f22565b979650505050505050565b6000610bf4670de0b6b3a7640000611c70613990868661207a565b8790612f22565b60008183613a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156124cc5781810151838201526020016124b4565b506000838581613a0c57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610bf4575050151592915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020858152604080832054918890529091204391908115801590613ad457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82016000908152602082905260409020546fffffffffffffffffffffffffffffffff8481169116145b15613b3d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201600090815260208290526040902080546fffffffffffffffffffffffffffffffff808716700100000000000000000000000000000000029116179055613151565b6040805180820182526fffffffffffffffffffffffffffffffff8086168252868116602080840191825260008781528682528581209451855493518516700100000000000000000000000000000000029085167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909416939093179093169190911790925573ffffffffffffffffffffffffffffffffffffffff8916815290899052206001830190555050505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c2357600080fd5b803560028110610c2357600080fd5b803560ff81168114610c2357600080fd5b600060208284031215613c93578081fd5b610a3a82613c3e565b60008060408385031215613cae578081fd5b613cb783613c3e565b9150613cc560208401613c3e565b90509250929050565b600080600060608486031215613ce2578081fd5b613ceb84613c3e565b9250613cf960208501613c3e565b9150604084013590509250925092565b600080600080600080600060e0888a031215613d23578283fd5b613d2c88613c3e565b9650613d3a60208901613c3e565b95506040880135945060608801359350613d5660808901613c71565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215613d84578182fd5b613d8d83613c3e565b9150613cc560208401613c62565b600080600080600080600060e0888a031215613db5578283fd5b613dbe88613c3e565b9650613d3a60208901613c62565b60008060408385031215613dde578182fd5b613de783613c3e565b946020939093013593505050565b600080600060608486031215613e09578283fd5b613e1284613c3e565b925060208401359150613e2760408501613c62565b90509250925092565b60008060008060008060c08789031215613e48578182fd5b613e5187613c3e565b95506020870135945060408701359350613e6d60608801613c71565b92506080870135915060a087013590509295509295509295565b60008060208385031215613e99578182fd5b823567ffffffffffffffff80821115613eb0578384fd5b818501915085601f830112613ec3578384fd5b813581811115613ed1578485fd5b866020606083028501011115613ee5578485fd5b60209290920196919550909350505050565b600060208284031215613f08578081fd5b81356fffffffffffffffffffffffffffffffff81168114610a3a578182fd5b600060208284031215613f38578081fd5b5035919050565b60008060008060808587031215613f54578182fd5b8435935060208501359250613f6b60408601613c3e565b9396929550929360600135925050565b60008151808452815b81811015613fa057602081850181015186830182015201613f84565b81811115613fb15782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b90815260200190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845273ffffffffffffffffffffffffffffffffffffffff9290921660208401526040830152606082015260800190565b94855273ffffffffffffffffffffffffffffffffffffffff93909316602085015260408401919091526060830152608082015260a00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252610a3a6020830184613f7b565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f45585049524154494f4e0000000000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4e4f4e434500000000000000000000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4f574e455200000000000000000000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220429852e7a0def53a34ad922b7e3d08d6dddc39a9398aa3132648753531de835764736f6c63430007050033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4A1E CODESIZE SUB DUP1 PUSH3 0x4A1E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x299 JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x5374616B65642041617665 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x73746B41415645 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH1 0x12 DUP11 DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAD SWAP3 SWAP2 SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xC3 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1ED JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x12 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH3 0xED TIMESTAMP DUP3 PUSH3 0x175 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x1E87 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0xA0 MSTORE DUP13 DUP3 SHL DUP2 AND PUSH1 0xC0 MSTORE DUP12 DUP3 SHL DUP2 AND PUSH1 0xE0 MSTORE PUSH2 0x100 DUP12 SWAP1 MSTORE PUSH2 0x120 DUP11 SWAP1 MSTORE SWAP1 DUP9 SWAP1 SHL AND PUSH2 0x140 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x15C DUP3 PUSH3 0x1D7 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x1EFB OR SWAP1 SHR JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x365 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x1D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x225 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x270 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x240 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x270 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x270 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x270 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x253 JUMP JUMPDEST POP PUSH3 0x27E SWAP3 SWAP2 POP PUSH3 0x282 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x27E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x283 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x2B6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x2C3 DUP2 PUSH3 0x34C JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MLOAD SWAP1 SWAP9 POP PUSH3 0x2D6 DUP2 PUSH3 0x34C JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x40 DUP10 ADD MLOAD SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD PUSH3 0x2F8 DUP2 PUSH3 0x34C JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x30B DUP2 PUSH3 0x34C JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x328 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0xE0 DUP11 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x33B DUP2 PUSH3 0x34C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x4618 PUSH3 0x406 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xF4F MSTORE DUP1 PUSH2 0x10FF MSTORE POP DUP1 PUSH2 0x811 MSTORE DUP1 PUSH2 0xAD1 MSTORE DUP1 PUSH2 0x1BBE MSTORE POP DUP1 PUSH2 0x7B3 MSTORE DUP1 PUSH2 0x839 MSTORE DUP1 PUSH2 0xC2A MSTORE DUP1 PUSH2 0x1BE3 MSTORE POP DUP1 PUSH2 0xFFC MSTORE DUP1 PUSH2 0x10C8 MSTORE POP DUP1 PUSH2 0x90C MSTORE DUP1 PUSH2 0xA67 MSTORE DUP1 PUSH2 0x138A MSTORE POP DUP1 PUSH2 0x1427 MSTORE DUP1 PUSH2 0x18B4 MSTORE POP DUP1 PUSH2 0xF2B MSTORE DUP1 PUSH2 0x3892 MSTORE DUP1 PUSH2 0x38D7 MSTORE DUP1 PUSH2 0x3904 MSTORE POP PUSH2 0x4618 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x336 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919CD40F GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB2F4201D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDDE43CBA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xF713D8A8 EQ PUSH2 0x660 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xDC937E1C EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x610 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xC3863ADA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x5E2 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xB2F4201D EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0xB9844D8D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xC2FFBB91 EQ PUSH2 0x5B4 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x57B JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xAA9FBE02 EQ PUSH2 0x558 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x981B24D0 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x51F JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x919CD40F EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4FC JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x281 JUMPI DUP1 PUSH4 0x72B49D63 GT PUSH2 0x22A JUMPI DUP1 PUSH4 0x7BB73C97 GT PUSH2 0x204 JUMPI DUP1 PUSH4 0x7BB73C97 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x4D9 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x78160376 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x4A3 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x5C19A95C GT PUSH2 0x25B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x6F50458D EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x480 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x41CBF54A EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x5B3CC0CF EQ PUSH2 0x439 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x3373EE4C GT PUSH2 0x2BD JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x416 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x314 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x343 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH2 0x38C PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x757 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CCE JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH2 0x36C PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x401A JUMP JUMPDEST PUSH2 0x3EE PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4417 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xACF JUMP JUMPDEST PUSH2 0x36C PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x36C PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x343 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x343 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F27 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH2 0x38C PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x123D JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E87 JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST PUSH2 0x36C PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF5 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3E30 JUMP JUMPDEST PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x63E PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43EA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x65B CALLDATASIZE PUSH1 0x4 PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x700 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x746 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D7 DUP2 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4229 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x864 PUSH2 0x85D DUP4 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x207A JUMP JUMPDEST GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A7 CALLER PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x8B8 JUMPI DUP4 PUSH2 0x8BA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x8C8 CALLER DUP4 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH2 0x8D3 CALLER DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH2 0x8DD DUP3 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x8F2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x933 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x22C4 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH2 0xA36 DUP5 PUSH2 0x9B8 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44D4 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA03 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0xB06 PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xB17 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH2 0xBCB CALLER DUP3 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0xBD7 CALLER DUP3 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE6 DUP4 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBF4 DUP5 DUP3 PUSH2 0x26CC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xC8E CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4373 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2C PUSH2 0x2704 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44FC PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE CHAINID PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0xDB7 PUSH2 0x673 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP5 ADD MSTORE MLOAD PUSH2 0xE23 SWAP4 SWAP3 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 DUP7 SWAP2 ADDRESS SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x43 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE83 PUSH2 0x3BF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE7B JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC8 DUP6 PUSH2 0xBFC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED5 PUSH2 0x757 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEE5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0xA3A PUSH2 0xEFD DUP5 DUP4 PUSH2 0x2709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x751 PUSH2 0x757 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 CALLER PUSH2 0x102D CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0x1065 JUMPI DUP3 PUSH2 0x1067 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x10B3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x245E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1125 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x119D PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45BE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x11C7 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x1212 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1284 DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x129B DUP5 ADDRESS DUP5 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x28CC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12D4 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x130C SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1340 PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1370 DUP5 DUP5 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x13B2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x42CE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x149B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1532 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x14FE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1516 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1523 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2AD6 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x153F JUMPI INVALID JUMPDEST PUSH2 0x1555 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x159D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x15F8 JUMPI INVALID JUMPDEST PUSH2 0x160E SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x43AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x1481 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x163F DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1650 DUP3 DUP3 DUP8 NUMBER PUSH2 0x2BD5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1679 DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x168A DUP3 DUP3 DUP9 DUP9 PUSH2 0x2BD5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1718 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1755 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x189B DUP2 DUP11 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x18A7 DUP2 DUP11 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4305 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x43 SLOAD SWAP2 MLOAD SWAP1 SWAP4 SWAP3 PUSH2 0x19C4 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP10 SWAP2 DUP15 SWAP2 ADD PUSH2 0x40A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19EB SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH2 0x1AC1 DUP3 PUSH1 0x1 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18A7 DUP10 DUP10 DUP10 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x1AFD CALLER DUP4 DUP4 PUSH2 0x250F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1BB7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D PUSH32 0x0 PUSH2 0x1C07 TIMESTAMP PUSH32 0x0 PUSH2 0x207A JUMP JUMPDEST SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x1C2F JUMPI DUP8 PUSH2 0x1C31 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1C46 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x1C53 DUP9 DUP8 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1C70 PUSH2 0x1C60 DUP9 DUP8 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x1C6A DUP12 DUP7 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 PUSH2 0x2F95 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP9 DUP9 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CB4 JUMPI INVALID JUMPDEST DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CCA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D36 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1DD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1E36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x1E7B DUP2 DUP12 DUP12 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4570 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x200B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x446B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20CD DUP6 ADDRESS DUP7 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x2101 SWAP1 DUP4 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1650 JUMPI DUP4 ISZERO PUSH2 0x2138 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2169 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x21E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x452A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21F2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4449 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x226F SWAP1 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x162C SWAP1 DUP5 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x236A DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x244D JUMPI PUSH1 0x0 PUSH2 0x23A9 DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x23B7 DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23EA DUP2 DUP6 DUP8 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x241E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x244A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x2458 DUP5 DUP5 DUP5 PUSH2 0x3399 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2591 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F44454C454741544545000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x259C DUP3 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 PUSH2 0x25AB DUP6 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25B9 DUP7 DUP5 PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x261A DUP2 DUP7 DUP5 DUP8 PUSH2 0x3569 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D51C8E11BD570DB1734C8EC775785330E77007FEED45C43B608EF33FF914BD DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x267A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x26B9 JUMPI POP PUSH1 0x6 SWAP2 POP PUSH1 0x7 SWAP1 POP PUSH1 0x3F PUSH2 0x26C5 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH1 0x41 SWAP1 POP PUSH1 0x42 JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0xA3A JUMPI DUP4 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x282F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2729 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x27B4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x27A3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 PUSH2 0x281C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x27C8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3975 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x270E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2458 SWAP1 DUP6 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x2914 DUP9 DUP6 DUP9 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x2999 JUMPI DUP7 ISZERO PUSH2 0x2931 JUMPI PUSH2 0x292E DUP8 DUP3 DUP6 PUSH2 0x3975 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x2990 SWAP1 DUP6 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2A27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2A33 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A40 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A73 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x2B17 JUMPI POP SWAP1 POP PUSH2 0xA3A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B3B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x2B9C JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B93 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 GT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F424C4F434B5F4E554D424552000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x2C82 JUMPI PUSH2 0x2C7A DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT PUSH2 0x2D6A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP1 POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x2DBC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB DIV DUP2 SUB PUSH2 0x2DFA PUSH2 0x3C27 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP6 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 EQ ISZERO PUSH2 0x2E90 JUMPI PUSH1 0x20 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP PUSH2 0xBF4 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x2EB3 JUMPI DUP2 SWAP4 POP PUSH2 0x2EBA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x2DE2 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F31 JUMPI POP PUSH1 0x0 PUSH2 0x751 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2F3E JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44B3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x3997 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3F PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x3015 JUMPI DUP5 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3033 JUMPI POP DUP3 JUMPDEST PUSH2 0x3040 DUP3 DUP3 DUP6 PUSH1 0x0 PUSH2 0x3569 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP8 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x307E JUMPI DUP7 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x309C JUMPI POP DUP5 JUMPDEST PUSH2 0x30A9 DUP3 DUP3 DUP8 PUSH1 0x1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x3151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4A39314900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x4A393149 SWAP1 PUSH2 0x311E SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x403B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x317A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A16 JUMP JUMPDEST PUSH2 0x31E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x324E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3211 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3326 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2458 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4594 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x3405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x454B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x3471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4426 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347C DUP4 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x34C6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x448D PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3502 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35A2 JUMPI PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35AE DUP4 PUSH2 0x2692 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO PUSH2 0x3709 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x367A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x3683 DUP9 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x369C DUP5 DUP5 DUP11 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x3A4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x36DE DUP5 DUP10 PUSH2 0x207A JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x36F5 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x3859 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x37CF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x37D8 DUP8 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x37EC DUP5 DUP5 DUP10 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x382E DUP5 DUP10 PUSH2 0x1E87 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3845 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x386E JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x388A JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x38C7 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x38D3 JUMPI POP DUP4 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x3902 JUMPI TIMESTAMP PUSH2 0x3924 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3944 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x207A JUMP JUMPDEST SWAP1 POP PUSH2 0x396A DUP8 PUSH2 0x1C6A DUP7 PUSH2 0x1C70 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3964 DUP13 DUP9 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x2F22 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C70 PUSH2 0x3990 DUP7 DUP7 PUSH2 0x207A JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3A00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x3A0C JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xBF4 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP9 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3AD4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x3B3D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR SWAP1 SSTORE PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP7 DUP3 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD SWAP4 MLOAD DUP6 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP2 MSTORE SWAP1 DUP10 SWAP1 MSTORE KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C93 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA3A DUP3 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CAE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CB7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CE2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CEB DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH2 0x3CF9 PUSH1 0x20 DUP6 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D23 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3D2C DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3D56 PUSH1 0x80 DUP10 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D84 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3D8D DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3DB5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3DBE DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DDE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3DE7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E09 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3E12 DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3E27 PUSH1 0x40 DUP6 ADD PUSH2 0x3C62 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3E48 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3E51 DUP8 PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3E6D PUSH1 0x60 DUP9 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E99 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3EB0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3EC3 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3ED1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x3EE5 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA3A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F38 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F54 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x3F6B PUSH1 0x40 DUP7 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FA0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3F84 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3FB1 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F7B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F45585049524154494F4E0000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4E4F4E434500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F574E455200000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 TIMESTAMP SWAP9 MSTORE 0xE7 LOG0 0xDE CREATE2 GASPRICE CALLVALUE 0xAD SWAP3 0x2B PUSH31 0x3D08D6DDDC39A9398AA3132648753531DE835764736F6C6343000705003300 ","sourceMap":"301:668:22:-:0;;;924:1:25;881:44;;482:485:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;751:11;770;789:15;812:13;833:12;853:15;876:20;904:4;;;;;;;;;;;;;-1:-1:-1;;;904:4:22;;;916:6;;;;;;;;;;;;;-1:-1:-1;;;916:6:22;;;475:2;946:10;3282:15:24;3299:20;-1:-1:-1;;;;;1068:185:20;3244:4:24;3250:6;2080:4:4;2072:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2094:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2120:9:4;:14;;2132:2;-1:-1:-1;;2120:14:4;;;;;;-1:-1:-1;1167:41:20;:15;1187:20;1167:19;;;;;;;:41;;:::i;:::-;1148:60;;-1:-1:-1;1214:34:20;;;;-1:-1:-1;;;;;;1214:34:20;;;;;3327:26:24;;;;;::::2;::::0;3359;;;;;::::2;::::0;3391:34:::2;::::0;;;3431:30:::2;::::0;;;3467:28;;;;;::::2;::::0;3501:15:::2;:43:::0;;-1:-1:-1;;;;;;3501:43:24::2;-1:-1:-1::0;;;;;3501:43:24;::::2;;::::0;;3550:30:::2;3571:8:::0;3550:20:::2;;::::0;;::::2;;;:30:::0;::::2;:::i;:::-;2928:657:::0;;;;;;;;;;;482:485:22;;;;;;;;301:668;;913:162:19;971:7;998:5;;;1017:6;;;;1009:46;;;;;-1:-1:-1;;;1009:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;10009:88:4:-;10069:9;:21;;-1:-1:-1;;10069:21:4;;;;;;;;;;;;10009:88::o;301:668:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;301:668:22;;;-1:-1:-1;301:668:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1149:28;;;;;;;;;286:3;274:9;265:7;261:23;257:33;254:2;;;308:6;300;293:22;254:2;345:9;339:16;364:33;391:5;364:33;:::i;:::-;466:2;451:18;;445:25;416:5;;-1:-1:-1;479:35:28;445:25;479:35;:::i;:::-;533:7;523:17;;;580:2;569:9;565:18;559:25;549:35;;624:2;613:9;609:18;603:25;593:35;;673:3;662:9;658:19;652:26;687:35;714:7;687:35;:::i;:::-;793:3;778:19;;772:26;741:7;;-1:-1:-1;807:35:28;772:26;807:35;:::i;:::-;913:3;898:19;;892:26;861:7;;-1:-1:-1;;;;;;949:33:28;;937:46;;927:2;;1002:6;994;987:22;927:2;1082:3;1067:19;;1061:26;1030:7;;-1:-1:-1;1096:35:28;1061:26;1096:35;:::i;:::-;1150:7;1140:17;;;244:919;;;;;;;;;;;:::o;1168:133::-;-1:-1:-1;;;;;1245:31:28;;1235:42;;1225:2;;1291:1;1288;1281:12;1225:2;1215:86;:::o;:::-;301:668:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15994:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:28","statements":[{"nodeType":"YulAssignment","src":"75:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:28"},"nodeType":"YulFunctionCall","src":"84:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:28"}]},{"body":{"nodeType":"YulBlock","src":"190:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:28"},"nodeType":"YulFunctionCall","src":"192:12:28"},"nodeType":"YulExpressionStatement","src":"192:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:28"},"nodeType":"YulFunctionCall","src":"133:54:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:28"},"nodeType":"YulFunctionCall","src":"123:65:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:28"},"nodeType":"YulFunctionCall","src":"116:73:28"},"nodeType":"YulIf","src":"113:2:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:28","type":""}],"src":"14:198:28"},{"body":{"nodeType":"YulBlock","src":"281:94:28","statements":[{"nodeType":"YulAssignment","src":"291:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"313:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"300:12:28"},"nodeType":"YulFunctionCall","src":"300:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"291:5:28"}]},{"body":{"nodeType":"YulBlock","src":"353:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"362:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"365:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"355:6:28"},"nodeType":"YulFunctionCall","src":"355:12:28"},"nodeType":"YulExpressionStatement","src":"355:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"342:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"349:1:28","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"339:2:28"},"nodeType":"YulFunctionCall","src":"339:12:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"332:6:28"},"nodeType":"YulFunctionCall","src":"332:20:28"},"nodeType":"YulIf","src":"329:2:28"}]},"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"260:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"271:5:28","type":""}],"src":"217:158:28"},{"body":{"nodeType":"YulBlock","src":"429:109:28","statements":[{"nodeType":"YulAssignment","src":"439:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"461:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"448:12:28"},"nodeType":"YulFunctionCall","src":"448:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"439:5:28"}]},{"body":{"nodeType":"YulBlock","src":"516:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:28"},"nodeType":"YulFunctionCall","src":"518:12:28"},"nodeType":"YulExpressionStatement","src":"518:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"490:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"501:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"508:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"497:3:28"},"nodeType":"YulFunctionCall","src":"497:16:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"487:2:28"},"nodeType":"YulFunctionCall","src":"487:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"480:6:28"},"nodeType":"YulFunctionCall","src":"480:35:28"},"nodeType":"YulIf","src":"477:2:28"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"419:5:28","type":""}],"src":"380:158:28"},{"body":{"nodeType":"YulBlock","src":"613:128:28","statements":[{"body":{"nodeType":"YulBlock","src":"659:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"668:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"676:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"661:6:28"},"nodeType":"YulFunctionCall","src":"661:22:28"},"nodeType":"YulExpressionStatement","src":"661:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"634:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"630:3:28"},"nodeType":"YulFunctionCall","src":"630:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"655:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"626:3:28"},"nodeType":"YulFunctionCall","src":"626:32:28"},"nodeType":"YulIf","src":"623:2:28"},{"nodeType":"YulAssignment","src":"694:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"725:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"704:20:28"},"nodeType":"YulFunctionCall","src":"704:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"694:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"579:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"590:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"602:6:28","type":""}],"src":"543:198:28"},{"body":{"nodeType":"YulBlock","src":"833:187:28","statements":[{"body":{"nodeType":"YulBlock","src":"879:26:28","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"888:6:28"},{"name":"value1","nodeType":"YulIdentifier","src":"896:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"881:6:28"},"nodeType":"YulFunctionCall","src":"881:22:28"},"nodeType":"YulExpressionStatement","src":"881:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"854:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"850:3:28"},"nodeType":"YulFunctionCall","src":"850:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"875:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"846:3:28"},"nodeType":"YulFunctionCall","src":"846:32:28"},"nodeType":"YulIf","src":"843:2:28"},{"nodeType":"YulAssignment","src":"914:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"945:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"924:20:28"},"nodeType":"YulFunctionCall","src":"924:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"914:6:28"}]},{"nodeType":"YulAssignment","src":"964:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"999:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1010:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"995:3:28"},"nodeType":"YulFunctionCall","src":"995:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"974:20:28"},"nodeType":"YulFunctionCall","src":"974:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"964:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"791:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"802:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"814:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"822:6:28","type":""}],"src":"746:274:28"},{"body":{"nodeType":"YulBlock","src":"1129:238:28","statements":[{"body":{"nodeType":"YulBlock","src":"1175:26:28","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1184:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"1192:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1177:6:28"},"nodeType":"YulFunctionCall","src":"1177:22:28"},"nodeType":"YulExpressionStatement","src":"1177:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1150:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1146:3:28"},"nodeType":"YulFunctionCall","src":"1146:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1171:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1142:3:28"},"nodeType":"YulFunctionCall","src":"1142:32:28"},"nodeType":"YulIf","src":"1139:2:28"},{"nodeType":"YulAssignment","src":"1210:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1220:20:28"},"nodeType":"YulFunctionCall","src":"1220:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:28"}]},{"nodeType":"YulAssignment","src":"1260:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1295:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1306:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1291:3:28"},"nodeType":"YulFunctionCall","src":"1291:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1270:20:28"},"nodeType":"YulFunctionCall","src":"1270:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1260:6:28"}]},{"nodeType":"YulAssignment","src":"1319:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1346:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1357:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1342:3:28"},"nodeType":"YulFunctionCall","src":"1342:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1329:12:28"},"nodeType":"YulFunctionCall","src":"1329:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1319:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1079:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1090:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1102:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1110:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1118:6:28","type":""}],"src":"1025:342:28"},{"body":{"nodeType":"YulBlock","src":"1542:452:28","statements":[{"body":{"nodeType":"YulBlock","src":"1589:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1598:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"1606:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1591:6:28"},"nodeType":"YulFunctionCall","src":"1591:22:28"},"nodeType":"YulExpressionStatement","src":"1591:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1563:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1572:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1559:3:28"},"nodeType":"YulFunctionCall","src":"1559:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1584:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1555:3:28"},"nodeType":"YulFunctionCall","src":"1555:33:28"},"nodeType":"YulIf","src":"1552:2:28"},{"nodeType":"YulAssignment","src":"1624:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1655:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1634:20:28"},"nodeType":"YulFunctionCall","src":"1634:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1624:6:28"}]},{"nodeType":"YulAssignment","src":"1674:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1709:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1720:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:28"},"nodeType":"YulFunctionCall","src":"1705:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1684:20:28"},"nodeType":"YulFunctionCall","src":"1684:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1674:6:28"}]},{"nodeType":"YulAssignment","src":"1733:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1760:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1771:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1756:3:28"},"nodeType":"YulFunctionCall","src":"1756:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1743:12:28"},"nodeType":"YulFunctionCall","src":"1743:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1733:6:28"}]},{"nodeType":"YulAssignment","src":"1784:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1811:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1822:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1807:3:28"},"nodeType":"YulFunctionCall","src":"1807:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1794:12:28"},"nodeType":"YulFunctionCall","src":"1794:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1784:6:28"}]},{"nodeType":"YulAssignment","src":"1835:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1868:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1879:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:28"},"nodeType":"YulFunctionCall","src":"1864:19:28"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"1845:18:28"},"nodeType":"YulFunctionCall","src":"1845:39:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1835:6:28"}]},{"nodeType":"YulAssignment","src":"1893:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1920:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1931:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1916:3:28"},"nodeType":"YulFunctionCall","src":"1916:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1903:12:28"},"nodeType":"YulFunctionCall","src":"1903:33:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1893:6:28"}]},{"nodeType":"YulAssignment","src":"1945:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1972:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1983:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1968:3:28"},"nodeType":"YulFunctionCall","src":"1968:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1955:12:28"},"nodeType":"YulFunctionCall","src":"1955:33:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1945:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1460:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1471:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1483:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1491:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1499:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1507:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1515:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1523:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1531:6:28","type":""}],"src":"1372:622:28"},{"body":{"nodeType":"YulBlock","src":"2103:200:28","statements":[{"body":{"nodeType":"YulBlock","src":"2149:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2158:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2166:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2151:6:28"},"nodeType":"YulFunctionCall","src":"2151:22:28"},"nodeType":"YulExpressionStatement","src":"2151:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2124:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2133:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2120:3:28"},"nodeType":"YulFunctionCall","src":"2120:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2145:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2116:3:28"},"nodeType":"YulFunctionCall","src":"2116:32:28"},"nodeType":"YulIf","src":"2113:2:28"},{"nodeType":"YulAssignment","src":"2184:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2215:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2194:20:28"},"nodeType":"YulFunctionCall","src":"2194:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2184:6:28"}]},{"nodeType":"YulAssignment","src":"2234:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2293:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:28"},"nodeType":"YulFunctionCall","src":"2278:18:28"}],"functionName":{"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulIdentifier","src":"2244:33:28"},"nodeType":"YulFunctionCall","src":"2244:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2234:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_enum$_DelegationType_$82","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2061:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2072:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2084:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2092:6:28","type":""}],"src":"1999:304:28"},{"body":{"nodeType":"YulBlock","src":"2495:465:28","statements":[{"body":{"nodeType":"YulBlock","src":"2542:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2551:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"2559:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2544:6:28"},"nodeType":"YulFunctionCall","src":"2544:22:28"},"nodeType":"YulExpressionStatement","src":"2544:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2516:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2525:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2512:3:28"},"nodeType":"YulFunctionCall","src":"2512:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2537:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2508:3:28"},"nodeType":"YulFunctionCall","src":"2508:33:28"},"nodeType":"YulIf","src":"2505:2:28"},{"nodeType":"YulAssignment","src":"2577:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2608:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2587:20:28"},"nodeType":"YulFunctionCall","src":"2587:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2577:6:28"}]},{"nodeType":"YulAssignment","src":"2627:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2686:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:28"},"nodeType":"YulFunctionCall","src":"2671:18:28"}],"functionName":{"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulIdentifier","src":"2637:33:28"},"nodeType":"YulFunctionCall","src":"2637:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2627:6:28"}]},{"nodeType":"YulAssignment","src":"2699:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2726:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2737:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2722:3:28"},"nodeType":"YulFunctionCall","src":"2722:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2709:12:28"},"nodeType":"YulFunctionCall","src":"2709:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2699:6:28"}]},{"nodeType":"YulAssignment","src":"2750:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2777:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2773:3:28"},"nodeType":"YulFunctionCall","src":"2773:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2760:12:28"},"nodeType":"YulFunctionCall","src":"2760:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2750:6:28"}]},{"nodeType":"YulAssignment","src":"2801:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2845:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:28"},"nodeType":"YulFunctionCall","src":"2830:19:28"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"2811:18:28"},"nodeType":"YulFunctionCall","src":"2811:39:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2801:6:28"}]},{"nodeType":"YulAssignment","src":"2859:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2886:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2897:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2882:3:28"},"nodeType":"YulFunctionCall","src":"2882:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2869:12:28"},"nodeType":"YulFunctionCall","src":"2869:33:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2859:6:28"}]},{"nodeType":"YulAssignment","src":"2911:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2938:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2949:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2934:3:28"},"nodeType":"YulFunctionCall","src":"2934:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2921:12:28"},"nodeType":"YulFunctionCall","src":"2921:33:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2911:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_enum$_DelegationType_$82t_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2413:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2424:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2436:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2444:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2452:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2460:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2468:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2476:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2484:6:28","type":""}],"src":"2308:652:28"},{"body":{"nodeType":"YulBlock","src":"3052:179:28","statements":[{"body":{"nodeType":"YulBlock","src":"3098:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3107:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3115:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3100:6:28"},"nodeType":"YulFunctionCall","src":"3100:22:28"},"nodeType":"YulExpressionStatement","src":"3100:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3073:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3082:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3069:3:28"},"nodeType":"YulFunctionCall","src":"3069:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3094:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3065:3:28"},"nodeType":"YulFunctionCall","src":"3065:32:28"},"nodeType":"YulIf","src":"3062:2:28"},{"nodeType":"YulAssignment","src":"3133:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3164:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3143:20:28"},"nodeType":"YulFunctionCall","src":"3143:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3133:6:28"}]},{"nodeType":"YulAssignment","src":"3183:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3210:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3221:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3206:3:28"},"nodeType":"YulFunctionCall","src":"3206:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3193:12:28"},"nodeType":"YulFunctionCall","src":"3193:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3183:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3010:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3021:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3033:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3041:6:28","type":""}],"src":"2965:266:28"},{"body":{"nodeType":"YulBlock","src":"3357:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"3403:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3412:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3420:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3405:6:28"},"nodeType":"YulFunctionCall","src":"3405:22:28"},"nodeType":"YulExpressionStatement","src":"3405:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3378:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3387:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3374:3:28"},"nodeType":"YulFunctionCall","src":"3374:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3399:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3370:3:28"},"nodeType":"YulFunctionCall","src":"3370:32:28"},"nodeType":"YulIf","src":"3367:2:28"},{"nodeType":"YulAssignment","src":"3438:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3469:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3448:20:28"},"nodeType":"YulFunctionCall","src":"3448:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3438:6:28"}]},{"nodeType":"YulAssignment","src":"3488:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3515:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3526:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3511:3:28"},"nodeType":"YulFunctionCall","src":"3511:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3498:12:28"},"nodeType":"YulFunctionCall","src":"3498:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3488:6:28"}]},{"nodeType":"YulAssignment","src":"3539:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3598:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:28"},"nodeType":"YulFunctionCall","src":"3583:18:28"}],"functionName":{"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulIdentifier","src":"3549:33:28"},"nodeType":"YulFunctionCall","src":"3549:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3539:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$82","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3307:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3318:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3330:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3338:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3346:6:28","type":""}],"src":"3236:372:28"},{"body":{"nodeType":"YulBlock","src":"3766:392:28","statements":[{"body":{"nodeType":"YulBlock","src":"3813:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3822:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"3830:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3815:6:28"},"nodeType":"YulFunctionCall","src":"3815:22:28"},"nodeType":"YulExpressionStatement","src":"3815:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3787:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3783:3:28"},"nodeType":"YulFunctionCall","src":"3783:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3808:3:28","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3779:3:28"},"nodeType":"YulFunctionCall","src":"3779:33:28"},"nodeType":"YulIf","src":"3776:2:28"},{"nodeType":"YulAssignment","src":"3848:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3879:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3858:20:28"},"nodeType":"YulFunctionCall","src":"3858:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3848:6:28"}]},{"nodeType":"YulAssignment","src":"3898:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3925:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3936:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3921:3:28"},"nodeType":"YulFunctionCall","src":"3921:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3908:12:28"},"nodeType":"YulFunctionCall","src":"3908:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3898:6:28"}]},{"nodeType":"YulAssignment","src":"3949:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3987:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3972:3:28"},"nodeType":"YulFunctionCall","src":"3972:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3959:12:28"},"nodeType":"YulFunctionCall","src":"3959:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3949:6:28"}]},{"nodeType":"YulAssignment","src":"4000:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4033:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4044:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4029:3:28"},"nodeType":"YulFunctionCall","src":"4029:18:28"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"4010:18:28"},"nodeType":"YulFunctionCall","src":"4010:38:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4000:6:28"}]},{"nodeType":"YulAssignment","src":"4057:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4095:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4080:3:28"},"nodeType":"YulFunctionCall","src":"4080:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4067:12:28"},"nodeType":"YulFunctionCall","src":"4067:33:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4057:6:28"}]},{"nodeType":"YulAssignment","src":"4109:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4136:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4147:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4132:3:28"},"nodeType":"YulFunctionCall","src":"4132:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4119:12:28"},"nodeType":"YulFunctionCall","src":"4119:33:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4109:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3692:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3703:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3715:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3723:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3731:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3739:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3747:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3755:6:28","type":""}],"src":"3613:545:28"},{"body":{"nodeType":"YulBlock","src":"4304:563:28","statements":[{"body":{"nodeType":"YulBlock","src":"4350:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4359:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4367:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4352:6:28"},"nodeType":"YulFunctionCall","src":"4352:22:28"},"nodeType":"YulExpressionStatement","src":"4352:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4325:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4321:3:28"},"nodeType":"YulFunctionCall","src":"4321:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4317:3:28"},"nodeType":"YulFunctionCall","src":"4317:32:28"},"nodeType":"YulIf","src":"4314:2:28"},{"nodeType":"YulVariableDeclaration","src":"4385:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4412:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4399:12:28"},"nodeType":"YulFunctionCall","src":"4399:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4389:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4431:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4441:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4435:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4486:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4495:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4503:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4488:6:28"},"nodeType":"YulFunctionCall","src":"4488:22:28"},"nodeType":"YulExpressionStatement","src":"4488:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4474:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4482:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4471:2:28"},"nodeType":"YulFunctionCall","src":"4471:14:28"},"nodeType":"YulIf","src":"4468:2:28"},{"nodeType":"YulVariableDeclaration","src":"4521:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4535:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4546:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4531:3:28"},"nodeType":"YulFunctionCall","src":"4531:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4525:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4601:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4610:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4618:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4603:6:28"},"nodeType":"YulFunctionCall","src":"4603:22:28"},"nodeType":"YulExpressionStatement","src":"4603:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4580:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4584:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4576:3:28"},"nodeType":"YulFunctionCall","src":"4576:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4591:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4572:3:28"},"nodeType":"YulFunctionCall","src":"4572:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4565:6:28"},"nodeType":"YulFunctionCall","src":"4565:35:28"},"nodeType":"YulIf","src":"4562:2:28"},{"nodeType":"YulVariableDeclaration","src":"4636:30:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4663:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4650:12:28"},"nodeType":"YulFunctionCall","src":"4650:16:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4640:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4693:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4702:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4710:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4695:6:28"},"nodeType":"YulFunctionCall","src":"4695:22:28"},"nodeType":"YulExpressionStatement","src":"4695:22:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4681:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4689:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4678:2:28"},"nodeType":"YulFunctionCall","src":"4678:14:28"},"nodeType":"YulIf","src":"4675:2:28"},{"body":{"nodeType":"YulBlock","src":"4780:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4789:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4797:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4782:6:28"},"nodeType":"YulFunctionCall","src":"4782:22:28"},"nodeType":"YulExpressionStatement","src":"4782:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4742:2:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:28","type":"","value":"0x60"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4746:3:28"},"nodeType":"YulFunctionCall","src":"4746:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:28"},"nodeType":"YulFunctionCall","src":"4738:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"4766:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4734:3:28"},"nodeType":"YulFunctionCall","src":"4734:35:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4771:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4731:2:28"},"nodeType":"YulFunctionCall","src":"4731:48:28"},"nodeType":"YulIf","src":"4728:2:28"},{"nodeType":"YulAssignment","src":"4815:21:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4829:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4825:3:28"},"nodeType":"YulFunctionCall","src":"4825:11:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4815:6:28"}]},{"nodeType":"YulAssignment","src":"4845:16:28","value":{"name":"length","nodeType":"YulIdentifier","src":"4855:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4845:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4262:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4273:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4285:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4293:6:28","type":""}],"src":"4163:704:28"},{"body":{"nodeType":"YulBlock","src":"4942:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"4988:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4997:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5005:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4990:6:28"},"nodeType":"YulFunctionCall","src":"4990:22:28"},"nodeType":"YulExpressionStatement","src":"4990:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4963:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4959:3:28"},"nodeType":"YulFunctionCall","src":"4959:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4955:3:28"},"nodeType":"YulFunctionCall","src":"4955:32:28"},"nodeType":"YulIf","src":"4952:2:28"},{"nodeType":"YulVariableDeclaration","src":"5023:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5049:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5036:12:28"},"nodeType":"YulFunctionCall","src":"5036:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5027:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5137:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5146:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5154:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5139:6:28"},"nodeType":"YulFunctionCall","src":"5139:22:28"},"nodeType":"YulExpressionStatement","src":"5139:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5081:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5092:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5099:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5088:3:28"},"nodeType":"YulFunctionCall","src":"5088:46:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5078:2:28"},"nodeType":"YulFunctionCall","src":"5078:57:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5071:6:28"},"nodeType":"YulFunctionCall","src":"5071:65:28"},"nodeType":"YulIf","src":"5068:2:28"},{"nodeType":"YulAssignment","src":"5172:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"5182:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5172:6:28"}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4908:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4919:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4931:6:28","type":""}],"src":"4872:321:28"},{"body":{"nodeType":"YulBlock","src":"5268:120:28","statements":[{"body":{"nodeType":"YulBlock","src":"5314:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5323:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5331:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5316:6:28"},"nodeType":"YulFunctionCall","src":"5316:22:28"},"nodeType":"YulExpressionStatement","src":"5316:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5289:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5298:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5285:3:28"},"nodeType":"YulFunctionCall","src":"5285:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5310:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5281:3:28"},"nodeType":"YulFunctionCall","src":"5281:32:28"},"nodeType":"YulIf","src":"5278:2:28"},{"nodeType":"YulAssignment","src":"5349:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5359:12:28"},"nodeType":"YulFunctionCall","src":"5359:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5349:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5234:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5245:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5257:6:28","type":""}],"src":"5198:190:28"},{"body":{"nodeType":"YulBlock","src":"5514:282:28","statements":[{"body":{"nodeType":"YulBlock","src":"5561:26:28","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5570:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"5578:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5563:6:28"},"nodeType":"YulFunctionCall","src":"5563:22:28"},"nodeType":"YulExpressionStatement","src":"5563:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5535:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5544:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5531:3:28"},"nodeType":"YulFunctionCall","src":"5531:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5556:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5527:3:28"},"nodeType":"YulFunctionCall","src":"5527:33:28"},"nodeType":"YulIf","src":"5524:2:28"},{"nodeType":"YulAssignment","src":"5596:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5619:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5606:12:28"},"nodeType":"YulFunctionCall","src":"5606:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5596:6:28"}]},{"nodeType":"YulAssignment","src":"5638:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5676:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:28"},"nodeType":"YulFunctionCall","src":"5661:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5648:12:28"},"nodeType":"YulFunctionCall","src":"5648:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5638:6:28"}]},{"nodeType":"YulAssignment","src":"5689:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5724:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5735:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5720:3:28"},"nodeType":"YulFunctionCall","src":"5720:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5699:20:28"},"nodeType":"YulFunctionCall","src":"5699:40:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5689:6:28"}]},{"nodeType":"YulAssignment","src":"5748:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5775:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5786:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5771:3:28"},"nodeType":"YulFunctionCall","src":"5771:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5758:12:28"},"nodeType":"YulFunctionCall","src":"5758:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5748:6:28"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5456:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5467:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5479:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5487:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5495:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5503:6:28","type":""}],"src":"5393:403:28"},{"body":{"nodeType":"YulBlock","src":"5852:485:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5862:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5882:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5876:5:28"},"nodeType":"YulFunctionCall","src":"5876:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5866:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5904:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"5909:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5897:6:28"},"nodeType":"YulFunctionCall","src":"5897:19:28"},"nodeType":"YulExpressionStatement","src":"5897:19:28"},{"nodeType":"YulVariableDeclaration","src":"5925:12:28","value":{"name":"end","nodeType":"YulIdentifier","src":"5934:3:28"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5929:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5998:110:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6012:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6022:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6016:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6054:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"6059:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6050:3:28"},"nodeType":"YulFunctionCall","src":"6050:11:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6063:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:28"},"nodeType":"YulFunctionCall","src":"6046:20:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6082:5:28"},{"name":"i","nodeType":"YulIdentifier","src":"6089:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:28"},"nodeType":"YulFunctionCall","src":"6078:13:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6093:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6074:3:28"},"nodeType":"YulFunctionCall","src":"6074:22:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6068:5:28"},"nodeType":"YulFunctionCall","src":"6068:29:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6039:6:28"},"nodeType":"YulFunctionCall","src":"6039:59:28"},"nodeType":"YulExpressionStatement","src":"6039:59:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5957:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"5960:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5954:2:28"},"nodeType":"YulFunctionCall","src":"5954:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5968:21:28","statements":[{"nodeType":"YulAssignment","src":"5970:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5979:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5982:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5975:3:28"},"nodeType":"YulFunctionCall","src":"5975:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5970:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5950:3:28","statements":[]},"src":"5946:162:28"},{"body":{"nodeType":"YulBlock","src":"6142:64:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6171:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6176:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6167:3:28"},"nodeType":"YulFunctionCall","src":"6167:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"6185:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6163:3:28"},"nodeType":"YulFunctionCall","src":"6163:27:28"},{"name":"end","nodeType":"YulIdentifier","src":"6192:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6156:6:28"},"nodeType":"YulFunctionCall","src":"6156:40:28"},"nodeType":"YulExpressionStatement","src":"6156:40:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6123:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"6126:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6120:2:28"},"nodeType":"YulFunctionCall","src":"6120:13:28"},"nodeType":"YulIf","src":"6117:2:28"},{"nodeType":"YulAssignment","src":"6215:116:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6230:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6243:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6251:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6239:3:28"},"nodeType":"YulFunctionCall","src":"6239:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"6256:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6235:3:28"},"nodeType":"YulFunctionCall","src":"6235:88:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6226:3:28"},"nodeType":"YulFunctionCall","src":"6226:98:28"},{"kind":"number","nodeType":"YulLiteral","src":"6326:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6222:3:28"},"nodeType":"YulFunctionCall","src":"6222:109:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6215:3:28"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5829:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5836:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5844:3:28","type":""}],"src":"5801:536:28"},{"body":{"nodeType":"YulBlock","src":"6590:196:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6607:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6612:66:28","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6600:6:28"},"nodeType":"YulFunctionCall","src":"6600:79:28"},"nodeType":"YulExpressionStatement","src":"6600:79:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6699:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6704:1:28","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6695:3:28"},"nodeType":"YulFunctionCall","src":"6695:11:28"},{"name":"value0","nodeType":"YulIdentifier","src":"6708:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:28"},"nodeType":"YulFunctionCall","src":"6688:27:28"},"nodeType":"YulExpressionStatement","src":"6688:27:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6735:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6740:2:28","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:28"},"nodeType":"YulFunctionCall","src":"6731:12:28"},{"name":"value1","nodeType":"YulIdentifier","src":"6745:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6724:6:28"},"nodeType":"YulFunctionCall","src":"6724:28:28"},"nodeType":"YulExpressionStatement","src":"6724:28:28"},{"nodeType":"YulAssignment","src":"6761:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6772:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6777:2:28","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6768:3:28"},"nodeType":"YulFunctionCall","src":"6768:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6761:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6558:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6563:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6571:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6582:3:28","type":""}],"src":"6342:444:28"},{"body":{"nodeType":"YulBlock","src":"6892:125:28","statements":[{"nodeType":"YulAssignment","src":"6902:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6914:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6925:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6910:3:28"},"nodeType":"YulFunctionCall","src":"6910:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6902:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6944:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6959:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6967:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6955:3:28"},"nodeType":"YulFunctionCall","src":"6955:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6937:6:28"},"nodeType":"YulFunctionCall","src":"6937:74:28"},"nodeType":"YulExpressionStatement","src":"6937:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6861:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6872:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6883:4:28","type":""}],"src":"6791:226:28"},{"body":{"nodeType":"YulBlock","src":"7179:241:28","statements":[{"nodeType":"YulAssignment","src":"7189:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7201:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7212:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7197:3:28"},"nodeType":"YulFunctionCall","src":"7197:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7189:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"7224:52:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7234:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7228:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7292:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7307:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7315:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7303:3:28"},"nodeType":"YulFunctionCall","src":"7303:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7285:6:28"},"nodeType":"YulFunctionCall","src":"7285:34:28"},"nodeType":"YulExpressionStatement","src":"7285:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7339:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7350:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7335:3:28"},"nodeType":"YulFunctionCall","src":"7335:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7359:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7367:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7355:3:28"},"nodeType":"YulFunctionCall","src":"7355:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7328:6:28"},"nodeType":"YulFunctionCall","src":"7328:43:28"},"nodeType":"YulExpressionStatement","src":"7328:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7391:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7402:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:28"},"nodeType":"YulFunctionCall","src":"7387:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"7407:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7380:6:28"},"nodeType":"YulFunctionCall","src":"7380:34:28"},"nodeType":"YulExpressionStatement","src":"7380:34:28"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7132:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7143:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7151:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7159:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7170:4:28","type":""}],"src":"7022:398:28"},{"body":{"nodeType":"YulBlock","src":"7554:168:28","statements":[{"nodeType":"YulAssignment","src":"7564:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7576:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7587:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:28"},"nodeType":"YulFunctionCall","src":"7572:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7564:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7606:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7621:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7629:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7617:3:28"},"nodeType":"YulFunctionCall","src":"7617:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7599:6:28"},"nodeType":"YulFunctionCall","src":"7599:74:28"},"nodeType":"YulExpressionStatement","src":"7599:74:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7704:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7689:3:28"},"nodeType":"YulFunctionCall","src":"7689:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"7709:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7682:6:28"},"nodeType":"YulFunctionCall","src":"7682:34:28"},"nodeType":"YulExpressionStatement","src":"7682:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7515:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7526:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7534:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7545:4:28","type":""}],"src":"7425:297:28"},{"body":{"nodeType":"YulBlock","src":"7822:92:28","statements":[{"nodeType":"YulAssignment","src":"7832:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7844:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7855:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7840:3:28"},"nodeType":"YulFunctionCall","src":"7840:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7832:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7874:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7899:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7892:6:28"},"nodeType":"YulFunctionCall","src":"7892:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7885:6:28"},"nodeType":"YulFunctionCall","src":"7885:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7867:6:28"},"nodeType":"YulFunctionCall","src":"7867:41:28"},"nodeType":"YulExpressionStatement","src":"7867:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7791:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7802:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7813:4:28","type":""}],"src":"7727:187:28"},{"body":{"nodeType":"YulBlock","src":"8020:76:28","statements":[{"nodeType":"YulAssignment","src":"8030:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8042:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8053:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8038:3:28"},"nodeType":"YulFunctionCall","src":"8038:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8030:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8072:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"8083:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8065:6:28"},"nodeType":"YulFunctionCall","src":"8065:25:28"},"nodeType":"YulExpressionStatement","src":"8065:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7989:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8000:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8011:4:28","type":""}],"src":"7919:177:28"},{"body":{"nodeType":"YulBlock","src":"8342:373:28","statements":[{"nodeType":"YulAssignment","src":"8352:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8375:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8360:3:28"},"nodeType":"YulFunctionCall","src":"8360:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8352:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8395:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"8406:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8388:6:28"},"nodeType":"YulFunctionCall","src":"8388:25:28"},"nodeType":"YulExpressionStatement","src":"8388:25:28"},{"nodeType":"YulVariableDeclaration","src":"8422:52:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8432:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8426:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8494:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8505:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:28"},"nodeType":"YulFunctionCall","src":"8490:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8514:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8522:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8510:3:28"},"nodeType":"YulFunctionCall","src":"8510:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8483:6:28"},"nodeType":"YulFunctionCall","src":"8483:43:28"},"nodeType":"YulExpressionStatement","src":"8483:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:28"},"nodeType":"YulFunctionCall","src":"8542:18:28"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8566:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8574:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8562:3:28"},"nodeType":"YulFunctionCall","src":"8562:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8535:6:28"},"nodeType":"YulFunctionCall","src":"8535:43:28"},"nodeType":"YulExpressionStatement","src":"8535:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8598:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8609:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8594:3:28"},"nodeType":"YulFunctionCall","src":"8594:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"8614:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8587:6:28"},"nodeType":"YulFunctionCall","src":"8587:34:28"},"nodeType":"YulExpressionStatement","src":"8587:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8652:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:28"},"nodeType":"YulFunctionCall","src":"8637:19:28"},{"name":"value4","nodeType":"YulIdentifier","src":"8658:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8630:6:28"},"nodeType":"YulFunctionCall","src":"8630:35:28"},"nodeType":"YulExpressionStatement","src":"8630:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8685:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8696:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8681:3:28"},"nodeType":"YulFunctionCall","src":"8681:19:28"},{"name":"value5","nodeType":"YulIdentifier","src":"8702:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8674:6:28"},"nodeType":"YulFunctionCall","src":"8674:35:28"},"nodeType":"YulExpressionStatement","src":"8674:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8271:9:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8282:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8290:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8298:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8306:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8314:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8322:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8333:4:28","type":""}],"src":"8101:614:28"},{"body":{"nodeType":"YulBlock","src":"8905:255:28","statements":[{"nodeType":"YulAssignment","src":"8915:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8927:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8938:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8923:3:28"},"nodeType":"YulFunctionCall","src":"8923:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8915:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8958:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"8969:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8951:6:28"},"nodeType":"YulFunctionCall","src":"8951:25:28"},"nodeType":"YulExpressionStatement","src":"8951:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8996:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9007:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8992:3:28"},"nodeType":"YulFunctionCall","src":"8992:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9016:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9024:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9012:3:28"},"nodeType":"YulFunctionCall","src":"9012:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8985:6:28"},"nodeType":"YulFunctionCall","src":"8985:83:28"},"nodeType":"YulExpressionStatement","src":"8985:83:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9088:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9099:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9084:3:28"},"nodeType":"YulFunctionCall","src":"9084:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9104:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9077:6:28"},"nodeType":"YulFunctionCall","src":"9077:34:28"},"nodeType":"YulExpressionStatement","src":"9077:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9131:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9142:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9127:3:28"},"nodeType":"YulFunctionCall","src":"9127:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"9147:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9120:6:28"},"nodeType":"YulFunctionCall","src":"9120:34:28"},"nodeType":"YulExpressionStatement","src":"9120:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8850:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8861:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8869:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8877:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8885:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8896:4:28","type":""}],"src":"8720:440:28"},{"body":{"nodeType":"YulBlock","src":"9378:299:28","statements":[{"nodeType":"YulAssignment","src":"9388:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9400:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9411:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:28"},"nodeType":"YulFunctionCall","src":"9396:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9388:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9431:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"9442:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9424:6:28"},"nodeType":"YulFunctionCall","src":"9424:25:28"},"nodeType":"YulExpressionStatement","src":"9424:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9469:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9480:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9465:3:28"},"nodeType":"YulFunctionCall","src":"9465:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9489:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9497:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9485:3:28"},"nodeType":"YulFunctionCall","src":"9485:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9458:6:28"},"nodeType":"YulFunctionCall","src":"9458:83:28"},"nodeType":"YulExpressionStatement","src":"9458:83:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9561:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9572:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9557:3:28"},"nodeType":"YulFunctionCall","src":"9557:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9577:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9550:6:28"},"nodeType":"YulFunctionCall","src":"9550:34:28"},"nodeType":"YulExpressionStatement","src":"9550:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9604:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9615:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9600:3:28"},"nodeType":"YulFunctionCall","src":"9600:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"9620:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9593:6:28"},"nodeType":"YulFunctionCall","src":"9593:34:28"},"nodeType":"YulExpressionStatement","src":"9593:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9647:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9658:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9643:3:28"},"nodeType":"YulFunctionCall","src":"9643:19:28"},{"name":"value4","nodeType":"YulIdentifier","src":"9664:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9636:6:28"},"nodeType":"YulFunctionCall","src":"9636:35:28"},"nodeType":"YulExpressionStatement","src":"9636:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9315:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9326:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9334:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9342:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9350:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9358:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9369:4:28","type":""}],"src":"9165:512:28"},{"body":{"nodeType":"YulBlock","src":"9895:299:28","statements":[{"nodeType":"YulAssignment","src":"9905:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9917:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9928:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9913:3:28"},"nodeType":"YulFunctionCall","src":"9913:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9905:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9948:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"9959:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9941:6:28"},"nodeType":"YulFunctionCall","src":"9941:25:28"},"nodeType":"YulExpressionStatement","src":"9941:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9986:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9997:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9982:3:28"},"nodeType":"YulFunctionCall","src":"9982:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"10002:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9975:6:28"},"nodeType":"YulFunctionCall","src":"9975:34:28"},"nodeType":"YulExpressionStatement","src":"9975:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10040:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10025:3:28"},"nodeType":"YulFunctionCall","src":"10025:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"10045:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10018:6:28"},"nodeType":"YulFunctionCall","src":"10018:34:28"},"nodeType":"YulExpressionStatement","src":"10018:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10072:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10083:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10068:3:28"},"nodeType":"YulFunctionCall","src":"10068:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"10088:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:28"},"nodeType":"YulFunctionCall","src":"10061:34:28"},"nodeType":"YulExpressionStatement","src":"10061:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10115:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10126:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10111:3:28"},"nodeType":"YulFunctionCall","src":"10111:19:28"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10136:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10144:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10132:3:28"},"nodeType":"YulFunctionCall","src":"10132:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10104:6:28"},"nodeType":"YulFunctionCall","src":"10104:84:28"},"nodeType":"YulExpressionStatement","src":"10104:84:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9832:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9843:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9851:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9859:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9867:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9875:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9886:4:28","type":""}],"src":"9682:512:28"},{"body":{"nodeType":"YulBlock","src":"10380:217:28","statements":[{"nodeType":"YulAssignment","src":"10390:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10402:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10413:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10398:3:28"},"nodeType":"YulFunctionCall","src":"10398:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10390:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10433:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"10444:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10426:6:28"},"nodeType":"YulFunctionCall","src":"10426:25:28"},"nodeType":"YulExpressionStatement","src":"10426:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10482:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10467:3:28"},"nodeType":"YulFunctionCall","src":"10467:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10491:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10499:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10487:3:28"},"nodeType":"YulFunctionCall","src":"10487:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10460:6:28"},"nodeType":"YulFunctionCall","src":"10460:45:28"},"nodeType":"YulExpressionStatement","src":"10460:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10525:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10536:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10521:3:28"},"nodeType":"YulFunctionCall","src":"10521:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"10541:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10514:6:28"},"nodeType":"YulFunctionCall","src":"10514:34:28"},"nodeType":"YulExpressionStatement","src":"10514:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10568:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:28"},"nodeType":"YulFunctionCall","src":"10564:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"10584:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10557:6:28"},"nodeType":"YulFunctionCall","src":"10557:34:28"},"nodeType":"YulExpressionStatement","src":"10557:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10325:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10336:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10344:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10352:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10360:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10371:4:28","type":""}],"src":"10199:398:28"},{"body":{"nodeType":"YulBlock","src":"10721:100:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10738:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10749:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10731:6:28"},"nodeType":"YulFunctionCall","src":"10731:21:28"},"nodeType":"YulExpressionStatement","src":"10731:21:28"},{"nodeType":"YulAssignment","src":"10761:54:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10788:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10800:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10811:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10796:3:28"},"nodeType":"YulFunctionCall","src":"10796:18:28"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"10769:18:28"},"nodeType":"YulFunctionCall","src":"10769:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10761:4:28"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10690:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10701:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10712:4:28","type":""}],"src":"10602:219:28"},{"body":{"nodeType":"YulBlock","src":"10942:125:28","statements":[{"nodeType":"YulAssignment","src":"10952:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10964:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10975:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10960:3:28"},"nodeType":"YulFunctionCall","src":"10960:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10952:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10994:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11009:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11017:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11005:3:28"},"nodeType":"YulFunctionCall","src":"11005:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10987:6:28"},"nodeType":"YulFunctionCall","src":"10987:74:28"},"nodeType":"YulExpressionStatement","src":"10987:74:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10911:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10922:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10933:4:28","type":""}],"src":"10826:241:28"},{"body":{"nodeType":"YulBlock","src":"11195:125:28","statements":[{"nodeType":"YulAssignment","src":"11205:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11217:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11228:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11213:3:28"},"nodeType":"YulFunctionCall","src":"11213:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11205:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11247:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11262:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11270:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11258:3:28"},"nodeType":"YulFunctionCall","src":"11258:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11240:6:28"},"nodeType":"YulFunctionCall","src":"11240:74:28"},"nodeType":"YulExpressionStatement","src":"11240:74:28"}]},"name":"abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11164:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11175:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11186:4:28","type":""}],"src":"11072:248:28"},{"body":{"nodeType":"YulBlock","src":"11446:100:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11463:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11474:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11456:6:28"},"nodeType":"YulFunctionCall","src":"11456:21:28"},"nodeType":"YulExpressionStatement","src":"11456:21:28"},{"nodeType":"YulAssignment","src":"11486:54:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11513:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11525:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11536:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11521:3:28"},"nodeType":"YulFunctionCall","src":"11521:18:28"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"11494:18:28"},"nodeType":"YulFunctionCall","src":"11494:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11486:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11415:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11426:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11437:4:28","type":""}],"src":"11325:221:28"},{"body":{"nodeType":"YulBlock","src":"11725:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11742:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11753:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11735:6:28"},"nodeType":"YulFunctionCall","src":"11735:21:28"},"nodeType":"YulExpressionStatement","src":"11735:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11787:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11772:3:28"},"nodeType":"YulFunctionCall","src":"11772:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11792:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11765:6:28"},"nodeType":"YulFunctionCall","src":"11765:30:28"},"nodeType":"YulExpressionStatement","src":"11765:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11815:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11826:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11811:3:28"},"nodeType":"YulFunctionCall","src":"11811:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"11831:21:28","type":"","value":"INVALID_ZERO_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11804:6:28"},"nodeType":"YulFunctionCall","src":"11804:49:28"},"nodeType":"YulExpressionStatement","src":"11804:49:28"},{"nodeType":"YulAssignment","src":"11862:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11874:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11885:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11870:3:28"},"nodeType":"YulFunctionCall","src":"11870:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11862:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11702:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11716:4:28","type":""}],"src":"11551:343:28"},{"body":{"nodeType":"YulBlock","src":"12073:167:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12090:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12101:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12083:6:28"},"nodeType":"YulFunctionCall","src":"12083:21:28"},"nodeType":"YulExpressionStatement","src":"12083:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:28"},"nodeType":"YulFunctionCall","src":"12120:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12140:2:28","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12113:6:28"},"nodeType":"YulFunctionCall","src":"12113:30:28"},"nodeType":"YulExpressionStatement","src":"12113:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12163:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12159:3:28"},"nodeType":"YulFunctionCall","src":"12159:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"12179:19:28","type":"","value":"INVALID_SIGNATURE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12152:6:28"},"nodeType":"YulFunctionCall","src":"12152:47:28"},"nodeType":"YulExpressionStatement","src":"12152:47:28"},{"nodeType":"YulAssignment","src":"12208:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12220:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12231:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:28"},"nodeType":"YulFunctionCall","src":"12216:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12208:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12050:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12064:4:28","type":""}],"src":"11899:341:28"},{"body":{"nodeType":"YulBlock","src":"12419:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12436:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12447:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12429:6:28"},"nodeType":"YulFunctionCall","src":"12429:21:28"},"nodeType":"YulExpressionStatement","src":"12429:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12470:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12481:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12466:3:28"},"nodeType":"YulFunctionCall","src":"12466:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12486:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12459:6:28"},"nodeType":"YulFunctionCall","src":"12459:30:28"},"nodeType":"YulExpressionStatement","src":"12459:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12509:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12520:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12505:3:28"},"nodeType":"YulFunctionCall","src":"12505:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"12525:23:28","type":"","value":"INSUFFICIENT_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12498:6:28"},"nodeType":"YulFunctionCall","src":"12498:51:28"},"nodeType":"YulExpressionStatement","src":"12498:51:28"},{"nodeType":"YulAssignment","src":"12558:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12570:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12581:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12566:3:28"},"nodeType":"YulFunctionCall","src":"12566:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12558:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12396:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12410:4:28","type":""}],"src":"12245:345:28"},{"body":{"nodeType":"YulBlock","src":"12769:168:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12786:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12797:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12779:6:28"},"nodeType":"YulFunctionCall","src":"12779:21:28"},"nodeType":"YulExpressionStatement","src":"12779:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12820:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12831:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12816:3:28"},"nodeType":"YulFunctionCall","src":"12816:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12836:2:28","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12809:6:28"},"nodeType":"YulFunctionCall","src":"12809:30:28"},"nodeType":"YulExpressionStatement","src":"12809:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12859:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12870:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12855:3:28"},"nodeType":"YulFunctionCall","src":"12855:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"12875:20:28","type":"","value":"INVALID_EXPIRATION"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12848:6:28"},"nodeType":"YulFunctionCall","src":"12848:48:28"},"nodeType":"YulExpressionStatement","src":"12848:48:28"},{"nodeType":"YulAssignment","src":"12905:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12917:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12928:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12913:3:28"},"nodeType":"YulFunctionCall","src":"12913:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12905:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12746:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12760:4:28","type":""}],"src":"12595:342:28"},{"body":{"nodeType":"YulBlock","src":"13116:163:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13133:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13144:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13126:6:28"},"nodeType":"YulFunctionCall","src":"13126:21:28"},"nodeType":"YulExpressionStatement","src":"13126:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13167:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13178:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13163:3:28"},"nodeType":"YulFunctionCall","src":"13163:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13183:2:28","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13156:6:28"},"nodeType":"YulFunctionCall","src":"13156:30:28"},"nodeType":"YulExpressionStatement","src":"13156:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13206:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13217:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13202:3:28"},"nodeType":"YulFunctionCall","src":"13202:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"13222:15:28","type":"","value":"INVALID_NONCE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13195:6:28"},"nodeType":"YulFunctionCall","src":"13195:43:28"},"nodeType":"YulExpressionStatement","src":"13195:43:28"},{"nodeType":"YulAssignment","src":"13247:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13259:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13270:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13255:3:28"},"nodeType":"YulFunctionCall","src":"13255:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13247:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13093:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13107:4:28","type":""}],"src":"12942:337:28"},{"body":{"nodeType":"YulBlock","src":"13458:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13475:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13486:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13468:6:28"},"nodeType":"YulFunctionCall","src":"13468:21:28"},"nodeType":"YulExpressionStatement","src":"13468:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13509:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13520:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13505:3:28"},"nodeType":"YulFunctionCall","src":"13505:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13525:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13498:6:28"},"nodeType":"YulFunctionCall","src":"13498:30:28"},"nodeType":"YulExpressionStatement","src":"13498:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13548:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13559:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13544:3:28"},"nodeType":"YulFunctionCall","src":"13544:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"13564:23:28","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13537:6:28"},"nodeType":"YulFunctionCall","src":"13537:51:28"},"nodeType":"YulExpressionStatement","src":"13537:51:28"},{"nodeType":"YulAssignment","src":"13597:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13609:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13620:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13605:3:28"},"nodeType":"YulFunctionCall","src":"13605:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13597:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13435:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13449:4:28","type":""}],"src":"13284:345:28"},{"body":{"nodeType":"YulBlock","src":"13808:163:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13825:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13836:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13818:6:28"},"nodeType":"YulFunctionCall","src":"13818:21:28"},"nodeType":"YulExpressionStatement","src":"13818:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13859:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13870:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13855:3:28"},"nodeType":"YulFunctionCall","src":"13855:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13875:2:28","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13848:6:28"},"nodeType":"YulFunctionCall","src":"13848:30:28"},"nodeType":"YulExpressionStatement","src":"13848:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13898:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13909:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13894:3:28"},"nodeType":"YulFunctionCall","src":"13894:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"13914:15:28","type":"","value":"INVALID_OWNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13887:6:28"},"nodeType":"YulFunctionCall","src":"13887:43:28"},"nodeType":"YulExpressionStatement","src":"13887:43:28"},{"nodeType":"YulAssignment","src":"13939:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13951:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13962:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13947:3:28"},"nodeType":"YulFunctionCall","src":"13947:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13939:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13785:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13799:4:28","type":""}],"src":"13634:337:28"},{"body":{"nodeType":"YulBlock","src":"14150:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14167:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14178:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14160:6:28"},"nodeType":"YulFunctionCall","src":"14160:21:28"},"nodeType":"YulExpressionStatement","src":"14160:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14201:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14212:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14197:3:28"},"nodeType":"YulFunctionCall","src":"14197:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14217:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14190:6:28"},"nodeType":"YulFunctionCall","src":"14190:30:28"},"nodeType":"YulExpressionStatement","src":"14190:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14240:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14251:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14236:3:28"},"nodeType":"YulFunctionCall","src":"14236:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"14256:25:28","type":"","value":"UNSTAKE_WINDOW_FINISHED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14229:6:28"},"nodeType":"YulFunctionCall","src":"14229:53:28"},"nodeType":"YulExpressionStatement","src":"14229:53:28"},{"nodeType":"YulAssignment","src":"14291:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14303:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14314:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14299:3:28"},"nodeType":"YulFunctionCall","src":"14299:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14291:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14127:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14141:4:28","type":""}],"src":"13976:347:28"},{"body":{"nodeType":"YulBlock","src":"14502:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14519:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14530:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14512:6:28"},"nodeType":"YulFunctionCall","src":"14512:21:28"},"nodeType":"YulExpressionStatement","src":"14512:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14553:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14564:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14549:3:28"},"nodeType":"YulFunctionCall","src":"14549:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14569:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14542:6:28"},"nodeType":"YulFunctionCall","src":"14542:30:28"},"nodeType":"YulExpressionStatement","src":"14542:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14592:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14603:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14588:3:28"},"nodeType":"YulFunctionCall","src":"14588:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"14608:29:28","type":"","value":"INVALID_BALANCE_ON_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14581:6:28"},"nodeType":"YulFunctionCall","src":"14581:57:28"},"nodeType":"YulExpressionStatement","src":"14581:57:28"},{"nodeType":"YulAssignment","src":"14647:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14659:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14670:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14655:3:28"},"nodeType":"YulFunctionCall","src":"14655:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14647:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14479:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14493:4:28","type":""}],"src":"14328:351:28"},{"body":{"nodeType":"YulBlock","src":"14785:117:28","statements":[{"nodeType":"YulAssignment","src":"14795:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:28"},"nodeType":"YulFunctionCall","src":"14803:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14795:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14837:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14852:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"14860:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14848:3:28"},"nodeType":"YulFunctionCall","src":"14848:47:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14830:6:28"},"nodeType":"YulFunctionCall","src":"14830:66:28"},"nodeType":"YulExpressionStatement","src":"14830:66:28"}]},"name":"abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14754:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14765:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14776:4:28","type":""}],"src":"14684:218:28"},{"body":{"nodeType":"YulBlock","src":"15036:190:28","statements":[{"nodeType":"YulAssignment","src":"15046:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15058:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15069:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15054:3:28"},"nodeType":"YulFunctionCall","src":"15054:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15046:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"15081:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15091:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15085:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15141:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15156:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15164:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15152:3:28"},"nodeType":"YulFunctionCall","src":"15152:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15134:6:28"},"nodeType":"YulFunctionCall","src":"15134:34:28"},"nodeType":"YulExpressionStatement","src":"15134:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15188:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15199:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15184:3:28"},"nodeType":"YulFunctionCall","src":"15184:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15208:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15216:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15204:3:28"},"nodeType":"YulFunctionCall","src":"15204:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15177:6:28"},"nodeType":"YulFunctionCall","src":"15177:43:28"},"nodeType":"YulExpressionStatement","src":"15177:43:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14997:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15008:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15016:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15027:4:28","type":""}],"src":"14907:319:28"},{"body":{"nodeType":"YulBlock","src":"15388:233:28","statements":[{"nodeType":"YulAssignment","src":"15398:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15410:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15421:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15406:3:28"},"nodeType":"YulFunctionCall","src":"15406:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15398:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"15433:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15443:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15437:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15493:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15508:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15516:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15504:3:28"},"nodeType":"YulFunctionCall","src":"15504:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15486:6:28"},"nodeType":"YulFunctionCall","src":"15486:34:28"},"nodeType":"YulExpressionStatement","src":"15486:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15540:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15551:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15536:3:28"},"nodeType":"YulFunctionCall","src":"15536:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15560:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15568:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15556:3:28"},"nodeType":"YulFunctionCall","src":"15556:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15529:6:28"},"nodeType":"YulFunctionCall","src":"15529:43:28"},"nodeType":"YulExpressionStatement","src":"15529:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15592:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15603:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15588:3:28"},"nodeType":"YulFunctionCall","src":"15588:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"15608:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15581:6:28"},"nodeType":"YulFunctionCall","src":"15581:34:28"},"nodeType":"YulExpressionStatement","src":"15581:34:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15341:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15352:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15360:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15368:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15379:4:28","type":""}],"src":"15231:390:28"},{"body":{"nodeType":"YulBlock","src":"15727:76:28","statements":[{"nodeType":"YulAssignment","src":"15737:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15749:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15760:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15745:3:28"},"nodeType":"YulFunctionCall","src":"15745:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15737:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15779:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"15790:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15772:6:28"},"nodeType":"YulFunctionCall","src":"15772:25:28"},"nodeType":"YulExpressionStatement","src":"15772:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15696:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15707:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15718:4:28","type":""}],"src":"15626:177:28"},{"body":{"nodeType":"YulBlock","src":"15905:87:28","statements":[{"nodeType":"YulAssignment","src":"15915:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15927:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15938:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15923:3:28"},"nodeType":"YulFunctionCall","src":"15923:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15915:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15957:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15972:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"15980:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15968:3:28"},"nodeType":"YulFunctionCall","src":"15968:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15950:6:28"},"nodeType":"YulFunctionCall","src":"15950:36:28"},"nodeType":"YulExpressionStatement","src":"15950:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15874:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15885:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15896:4:28","type":""}],"src":"15808:184:28"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_enum$_DelegationType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_enum$_DelegationType_$82(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_enum$_DelegationType(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_enum$_DelegationType_$82t_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_enum$_DelegationType(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$82(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_enum$_DelegationType(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_t_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 0x60)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"INVALID_ZERO_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_SIGNATURE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"INSUFFICIENT_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"INVALID_EXPIRATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"INVALID_NONCE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"INVALID_OWNER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UNSTAKE_WINDOW_FINISHED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"INVALID_BALANCE_ON_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3086":[{"length":32,"start":3883},{"length":32,"start":14482},{"length":32,"start":14551},{"length":32,"start":14596}],"3088":[{"length":32,"start":5159},{"length":32,"start":6324}],"4494":[{"length":32,"start":2316},{"length":32,"start":2663},{"length":32,"start":5002}],"4496":[{"length":32,"start":4092},{"length":32,"start":4296}],"4498":[{"length":32,"start":1971},{"length":32,"start":2105},{"length":32,"start":3114},{"length":32,"start":7139}],"4501":[{"length":32,"start":2065},{"length":32,"start":2769},{"length":32,"start":7102}],"4504":[{"length":32,"start":3919},{"length":32,"start":4351}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106103365760003560e01c8063919cd40f116101b2578063b2f4201d116100f9578063d505accf116100a2578063dde43cba1161007c578063dde43cba14610623578063f11b81881461062b578063f1cc432a1461064d578063f713d8a81461066057610336565b8063d505accf146105ea578063dc937e1c146105fd578063dd62ed3e1461061057610336565b8063c3863ada116100d3578063c3863ada146105c7578063c3cda520146105cf578063cbcbb507146105e257610336565b8063b2f4201d1461058e578063b9844d8d146105a1578063c2ffbb91146105b457610336565b8063a457c2d71161015b578063aaf5eb6811610135578063aaf5eb6814610560578063adc9772e14610568578063b2a5dbfa1461057b57610336565b8063a457c2d714610532578063a9059cbb14610545578063aa9fbe021461055857610336565b8063981b24d01161018c578063981b24d01461050457806399248ea7146105175780639a99b4f01461051f57610336565b8063919cd40f146104ec578063946776cd146104f457806395d89b41146104fc57610336565b8063395093511161028157806372b49d631161022a5780637bb73c97116102045780637bb73c97146104ab5780637e90d7ef146104be5780638129fc1c146104d15780638dbefee2146104d957610336565b806372b49d6314610493578063781603761461049b578063787a08a6146104a357610336565b80635c19a95c1161025b5780635c19a95c1461045a5780636f50458d1461046d57806370a082311461048057610336565b8063395093511461041e57806341cbf54a146104315780635b3cc0cf1461043957610336565b806330adf81f116102e35780633373ee4c116102bd5780633373ee4c146103fb578063359c4a961461040e5780633644e5151461041657610336565b806330adf81f146103c9578063312f6b83146103d1578063313ce567146103e657610336565b806318160ddd1161031457806318160ddd146103995780631e9a6950146103a157806323b872dd146103b657610336565b806306fdde031461033b578063091030c314610359578063095ea7b314610379575b600080fd5b610343610673565b60405161035091906141a8565b60405180910390f35b61036c610367366004613c82565b610727565b604051610350919061409d565b61038c610387366004613dcc565b610739565b6040516103509190614092565b61036c610757565b6103b46103af366004613dcc565b61075d565b005b61038c6103c4366004613cce565b61099f565b61036c610a41565b6103d9610a65565b604051610350919061401a565b6103ee610a89565b6040516103509190614417565b61036c610409366004613c9c565b610a92565b61036c610acf565b61036c610af3565b61038c61042c366004613dcc565b610af9565b61036c610b54565b61044c610447366004613dcc565b610b78565b6040516103509291906143c7565b6103b4610468366004613c82565b610bbf565b6103d961047b366004613d72565b610bda565b61036c61048e366004613c82565b610bfc565b61036c610c28565b610343610c4c565b6103b4610c85565b61036c6104b9366004613c82565b610cfe565b61036c6104cc366004613c82565b610d10565b6103b4610d22565b61036c6104e7366004613c82565b610e60565b61036c610f29565b6103d9610f4d565b610343610f71565b61036c610512366004613f27565b610ff0565b6103d9610ffa565b6103b461052d366004613dcc565b61101e565b61038c610540366004613dcc565b611190565b61038c610553366004613dcc565b611205565b61036c611219565b6103ee61123d565b6103b4610576366004613dcc565b611242565b6103b4610589366004613e87565b61140f565b61036c61059c366004613d72565b611631565b61036c6105af366004613c82565b611659565b61036c6105c2366004613df5565b61166b565b6103d9611694565b6103b46105dd366004613e30565b6116b0565b6103d96118b2565b6103b46105f8366004613d09565b6118d6565b6103b461060b366004613d72565b611af2565b61036c61061e366004613c9c565b611b01565b61036c611b39565b61063e610639366004613c82565b611b3e565b604051610350939291906143ea565b61036c61065b366004613f3f565b611b82565b6103b461066e366004613d9b565b611c84565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061074d610746611f2f565b8484611f33565b5060015b92915050565b60025490565b8061079d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b60405180910390fd5b336000908152603e60205260409020546107d7817f0000000000000000000000000000000000000000000000000000000000000000611e87565b421161080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614229565b7f000000000000000000000000000000000000000000000000000000000000000061086461085d837f0000000000000000000000000000000000000000000000000000000000000000611e87565b429061207a565b111561089c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061433c565b60006108a733610bfc565b905060008184116108b857836108ba565b815b90506108c8338360016120bc565b506108d3338261217a565b6108dd828261207a565b6108f257336000908152603e60205260408120555b61093373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836122c4565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d983604051610990919061409d565b60405180910390a35050505050565b60006109ac848484612351565b610a36846109b8611f2f565b610a31856040518060600160405280602881526020016144d46028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610a03611f2f565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919061245e565b611f33565b5060015b9392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60435481565b600061074d610b06611f2f565b84610a318560016000610b17611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490611e87565b7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b610bcb3382600061250f565b610bd73382600161250f565b50565b600080610be683612692565b92505050610bf484826126cc565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b610c8e33610bfc565b610cc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614373565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b60076020526000908152604090205481565b603d6020526000908152604090205481565b6000610d2c612704565b90506009548111610d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806144fc602e913960400191505060405180910390fd5b6009819055467f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610db7610673565b8051602091820120604080518082018252600181527f31000000000000000000000000000000000000000000000000000000000000009084015251610e2393927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101614151565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206043555050565b60408051600180825281830190925260009160609190816020015b610e83613bf0565b815260200190600190039081610e7b57905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610ec885610bfc565b8152602001610ed5610757565b81525081600081518110610ee557fe5b6020026020010181905250610a3a610efd8483612709565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d602052604090205490611e87565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b6000610751610757565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006110343361102d33610bfc565b60006120bc565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83146110655782611067565b815b90506110b3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e540000000000000000000000000000000000008152508461245e9092919063ffffffff16565b336000908152603d60205260409020556111257f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051611182919061409d565b60405180910390a350505050565b600061074d61119d611f2f565b84610a31856040518060600160405280602581526020016145be60259139600160006111c7611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919061245e565b600061074d611212611f2f565b8484612351565b7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b601281565b80611279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b600061128483610bfc565b9050600061129b843084611296610757565b6128cc565b90508015611333577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7684826040516112d492919061406c565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d602052604090205461130c9082611e87565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b6113406000848685611b82565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e602052604090205561137084846129a5565b6113b273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051611182919061409d565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461147e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906142ce565b60005b8181101561162c576000603c600085858581811061149b57fe5b90506060020160400160208101906114b39190613c82565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506115328484848181106114fe57fe5b90506060020160400160208101906115169190613c82565b8286868681811061152357fe5b90506060020160200135612ad6565b5083838381811061153f57fe5b6115559260206060909202019081019150613ef7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061159d57fe5b90506060020160400160208101906115b59190613c82565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106115f857fe5b61160e9260206060909202019081019150613ef7565b60405161161b91906143aa565b60405180910390a250600101611481565b505050565b600080600061163f84612692565b509150915061165082828743612bd5565b95945050505050565b60446020526000908152604090205481565b600080600061167984612692565b509150915061168a82828888612bd5565b9695505050505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60007f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d8787876040516020016116e994939291906140e7565b604051602081830303815290604052805190602001209050600060435482604051602001611718929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611755949392919061418a565b6020604051602081039080840390855afa158015611777573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166117ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b8642111561188f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b61189b818a600061250f565b6118a7818a600161250f565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff8716611923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614305565b8342111561195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b73ffffffffffffffffffffffffffffffffffffffff871660009081526044602090815260408083205460435491519093926119c4917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918d918d918d9189918e91016140a6565b604051602081830303815290604052805190602001206040516020016119eb929190613fe4565b60405160208183030381529060405280519060200120905060018186868660405160008152602001604052604051611a26949392919061418a565b6020604051602081039080840390855afa158015611a48573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b611ac1826001611e87565b73ffffffffffffffffffffffffffffffffffffffff8a166000908152604460205260409020556118a7898989611f33565b611afd33838361250f565b5050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600281565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e602052604081205480611bb7576000915050610bf4565b6000611c0d7f0000000000000000000000000000000000000000000000000000000000000000611c07427f000000000000000000000000000000000000000000000000000000000000000061207a565b9061207a565b905081811115611c205760009150611c7a565b6000878211611c2f5787611c31565b425b905082811015611c4657829350505050610bf4565b611c76611c538887611e87565b611c70611c608887612f22565b611c6a8b86612f22565b90611e87565b90612f95565b9250505b5095945050505050565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611cb457fe5b8888604051602001611cca959493929190614118565b604051602081830303815290604052805190602001209050600060435482604051602001611cf9929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611d36949392919061418a565b6020604051602081039080840390855afa158015611d58573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b86421115611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b611e7b818b8b61250f565b50505050505050505050565b600082820183811015610a3a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806145706024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661200b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061446b6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000610a3a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061245e565b6000806120cd853086611296610757565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d6020526040812054919250906121019083611e87565b905081156116505783156121385773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76868360405161216992919061406c565b60405180910390a195945050505050565b73ffffffffffffffffffffffffffffffffffffffff82166121e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061452a6021913960400191505060405180910390fd5b6121f282600083612fd7565b61223c816040518060600160405280602281526020016144496022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205560025461226f908261207a565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261162c90849061315b565b600061235c84610bfc565b905061236a848260016120bc565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461244d5760006123a984610bfc565b90506123b7848260016120bc565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e60205260409020546123ea81858785611b82565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e6020526040902055828414801561241e57508015155b1561244a5773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b612458848484613399565b50505050565b60008184841115612507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124cc5781810151838201526020016124b4565b50505050905090810190601f1680156124f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b73ffffffffffffffffffffffffffffffffffffffff821661259157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f44454c454741544545000000000000000000000000000000604482015290519081900360640190fd5b600061259c82612692565b9250505060006125ab85610bfc565b905060006125b986846126cc565b73ffffffffffffffffffffffffffffffffffffffff878116600090815260208690526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918816919091179055905061261a81868487613569565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd866040518082600181111561267a57fe5b815260200191505060405180910390a3505050505050565b60008080808460018111156126a357fe5b14156126b957506006915060079050603f6126c5565b50604091506041905060425b9193909250565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526020839052604081205490911680610a3a5783915050610751565b600290565b600080805b835181101561282f576000603c600086848151811061272957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160009081206001810154815488519294506127b4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a90889081106127a357fe5b602002602001015160400151613861565b905061282361281c8785815181106127c857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613975565b8590611e87565b9350505060010161270e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261245890859061315b565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280612914888588612ad6565b90508083146129995786156129315761292e878285613975565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b9061299090859061409d565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216612a2757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612a3360008383612fd7565b600254612a409082611e87565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054612a739082611e87565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415612b1757509050610a3a565b8454600090612b3b9084906fffffffffffffffffffffffffffffffff168488613861565b9050828114612b9c578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051612b93919061409d565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b600043821115612c4657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e56414c49445f424c4f434b5f4e554d424552000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020859052604090205480612c8257612c7a84610bfc565b915050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850184529091529020546fffffffffffffffffffffffffffffffff168310612d6a5773ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909401835292905220546fffffffffffffffffffffffffffffffff700100000000000000000000000000000000909104169050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083208380529091529020546fffffffffffffffffffffffffffffffff16831015612dbc576000915050610bf4565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b81811115612ec1576002828203048103612dfa613c27565b5073ffffffffffffffffffffffffffffffffffffffff8716600090815260208a815260408083208484528252918290208251808401909352546fffffffffffffffffffffffffffffffff8082168085527001000000000000000000000000000000009092041691830191909152871415612e9057602001516fffffffffffffffffffffffffffffffff169450610bf49350505050565b80516fffffffffffffffffffffffffffffffff16871115612eb357819350612eba565b6001820392505b5050612de2565b5073ffffffffffffffffffffffffffffffffffffffff851660009081526020888152604080832093835292905220546fffffffffffffffffffffffffffffffff70010000000000000000000000000000000090910416915050949350505050565b600082612f3157506000610751565b82820282848281612f3e57fe5b0414610a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144b36021913960400191505060405180910390fd5b6000610a3a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613997565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603f6020526040808220548584168352912054908216911681613015578491505b73ffffffffffffffffffffffffffffffffffffffff81166130335750825b6130408282856000613569565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526042602052604080822054878416835291205490821691168161307e578691505b73ffffffffffffffffffffffffffffffffffffffff811661309c5750845b6130a98282876001613569565b60085473ffffffffffffffffffffffffffffffffffffffff168015613151576040517f4a39314900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690634a3931499061311e908b908b908b9060040161403b565b600060405180830381600087803b15801561313857600080fd5b505af115801561314c573d6000803e3d6000fd5b505050505b5050505050505050565b61317a8273ffffffffffffffffffffffffffffffffffffffff16613a16565b6131e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061324e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613211565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146132b0576040519150601f19603f3d011682016040523d82523d6000602084013e6132b5565b606091505b50915091508161332657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156124585780806020019051602081101561334257600080fd5b5051612458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614594602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316613405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061454b6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216613471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806144266023913960400191505060405180910390fd5b61347c838383612fd7565b6134c68160405180606001604052806026815260200161448d6026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546135029082611e87565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156135a257612458565b6000806135ae83612692565b50909250905073ffffffffffffffffffffffffffffffffffffffff8616156137095773ffffffffffffffffffffffffffffffffffffffff8616600090815260208290526040812054801561367a5773ffffffffffffffffffffffffffffffffffffffff88166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169150613686565b61368388610bfc565b91505b61369c84848a85613697818c61207a565b613a4f565b73ffffffffffffffffffffffffffffffffffffffff88167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f6136de848961207a565b87604051808381526020018260018111156136f557fe5b81526020019250505060405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8516156138595773ffffffffffffffffffffffffffffffffffffffff851660009081526020829052604081205480156137cf5773ffffffffffffffffffffffffffffffffffffffff87166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1691506137db565b6137d887610bfc565b91505b6137ec84848985613697818c611e87565b73ffffffffffffffffffffffffffffffffffffffff87167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f61382e8489611e87565b876040518083815260200182600181111561384557fe5b81526020019250505060405180910390a250505b505050505050565b600083158061386e575081155b8061388a575042836fffffffffffffffffffffffffffffffff16145b806138c757507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156138d3575083610bf4565b60007f000000000000000000000000000000000000000000000000000000000000000042116139025742613924565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000613944826fffffffffffffffffffffffffffffffff871661207a565b905061396a87611c6a86611c70670de0b6b3a76400006139648c88612f22565b90612f22565b979650505050505050565b6000610bf4670de0b6b3a7640000611c70613990868661207a565b8790612f22565b60008183613a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156124cc5781810151838201526020016124b4565b506000838581613a0c57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610bf4575050151592915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020858152604080832054918890529091204391908115801590613ad457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82016000908152602082905260409020546fffffffffffffffffffffffffffffffff8481169116145b15613b3d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201600090815260208290526040902080546fffffffffffffffffffffffffffffffff808716700100000000000000000000000000000000029116179055613151565b6040805180820182526fffffffffffffffffffffffffffffffff8086168252868116602080840191825260008781528682528581209451855493518516700100000000000000000000000000000000029085167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909416939093179093169190911790925573ffffffffffffffffffffffffffffffffffffffff8916815290899052206001830190555050505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c2357600080fd5b803560028110610c2357600080fd5b803560ff81168114610c2357600080fd5b600060208284031215613c93578081fd5b610a3a82613c3e565b60008060408385031215613cae578081fd5b613cb783613c3e565b9150613cc560208401613c3e565b90509250929050565b600080600060608486031215613ce2578081fd5b613ceb84613c3e565b9250613cf960208501613c3e565b9150604084013590509250925092565b600080600080600080600060e0888a031215613d23578283fd5b613d2c88613c3e565b9650613d3a60208901613c3e565b95506040880135945060608801359350613d5660808901613c71565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215613d84578182fd5b613d8d83613c3e565b9150613cc560208401613c62565b600080600080600080600060e0888a031215613db5578283fd5b613dbe88613c3e565b9650613d3a60208901613c62565b60008060408385031215613dde578182fd5b613de783613c3e565b946020939093013593505050565b600080600060608486031215613e09578283fd5b613e1284613c3e565b925060208401359150613e2760408501613c62565b90509250925092565b60008060008060008060c08789031215613e48578182fd5b613e5187613c3e565b95506020870135945060408701359350613e6d60608801613c71565b92506080870135915060a087013590509295509295509295565b60008060208385031215613e99578182fd5b823567ffffffffffffffff80821115613eb0578384fd5b818501915085601f830112613ec3578384fd5b813581811115613ed1578485fd5b866020606083028501011115613ee5578485fd5b60209290920196919550909350505050565b600060208284031215613f08578081fd5b81356fffffffffffffffffffffffffffffffff81168114610a3a578182fd5b600060208284031215613f38578081fd5b5035919050565b60008060008060808587031215613f54578182fd5b8435935060208501359250613f6b60408601613c3e565b9396929550929360600135925050565b60008151808452815b81811015613fa057602081850181015186830182015201613f84565b81811115613fb15782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b90815260200190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845273ffffffffffffffffffffffffffffffffffffffff9290921660208401526040830152606082015260800190565b94855273ffffffffffffffffffffffffffffffffffffffff93909316602085015260408401919091526060830152608082015260a00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252610a3a6020830184613f7b565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f45585049524154494f4e0000000000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4e4f4e434500000000000000000000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4f574e455200000000000000000000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220429852e7a0def53a34ad922b7e3d08d6dddc39a9398aa3132648753531de835764736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x336 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919CD40F GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB2F4201D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDDE43CBA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xF713D8A8 EQ PUSH2 0x660 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xDC937E1C EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x610 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xC3863ADA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x5E2 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xB2F4201D EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0xB9844D8D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xC2FFBB91 EQ PUSH2 0x5B4 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x57B JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xAA9FBE02 EQ PUSH2 0x558 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x981B24D0 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x51F JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x919CD40F EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4FC JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x281 JUMPI DUP1 PUSH4 0x72B49D63 GT PUSH2 0x22A JUMPI DUP1 PUSH4 0x7BB73C97 GT PUSH2 0x204 JUMPI DUP1 PUSH4 0x7BB73C97 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x4D9 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x78160376 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x4A3 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x5C19A95C GT PUSH2 0x25B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x6F50458D EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x480 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x41CBF54A EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x5B3CC0CF EQ PUSH2 0x439 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x3373EE4C GT PUSH2 0x2BD JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x416 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x314 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x343 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH2 0x38C PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x757 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CCE JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH2 0x36C PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x401A JUMP JUMPDEST PUSH2 0x3EE PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4417 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xACF JUMP JUMPDEST PUSH2 0x36C PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x36C PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x343 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x343 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F27 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH2 0x38C PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x123D JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E87 JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST PUSH2 0x36C PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF5 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3E30 JUMP JUMPDEST PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x63E PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43EA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x65B CALLDATASIZE PUSH1 0x4 PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x700 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x746 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D7 DUP2 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4229 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x864 PUSH2 0x85D DUP4 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x207A JUMP JUMPDEST GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A7 CALLER PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x8B8 JUMPI DUP4 PUSH2 0x8BA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x8C8 CALLER DUP4 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH2 0x8D3 CALLER DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH2 0x8DD DUP3 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x8F2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x933 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x22C4 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH2 0xA36 DUP5 PUSH2 0x9B8 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44D4 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA03 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0xB06 PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xB17 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH2 0xBCB CALLER DUP3 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0xBD7 CALLER DUP3 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE6 DUP4 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBF4 DUP5 DUP3 PUSH2 0x26CC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xC8E CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4373 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2C PUSH2 0x2704 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44FC PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE CHAINID PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0xDB7 PUSH2 0x673 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP5 ADD MSTORE MLOAD PUSH2 0xE23 SWAP4 SWAP3 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 DUP7 SWAP2 ADDRESS SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x43 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE83 PUSH2 0x3BF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE7B JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC8 DUP6 PUSH2 0xBFC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED5 PUSH2 0x757 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEE5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0xA3A PUSH2 0xEFD DUP5 DUP4 PUSH2 0x2709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x751 PUSH2 0x757 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 CALLER PUSH2 0x102D CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0x1065 JUMPI DUP3 PUSH2 0x1067 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x10B3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x245E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1125 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x119D PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45BE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x11C7 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x1212 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1284 DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x129B DUP5 ADDRESS DUP5 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x28CC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12D4 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x130C SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1340 PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1370 DUP5 DUP5 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x13B2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x42CE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x149B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1532 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x14FE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1516 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1523 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2AD6 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x153F JUMPI INVALID JUMPDEST PUSH2 0x1555 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x159D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x15F8 JUMPI INVALID JUMPDEST PUSH2 0x160E SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x43AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x1481 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x163F DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1650 DUP3 DUP3 DUP8 NUMBER PUSH2 0x2BD5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1679 DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x168A DUP3 DUP3 DUP9 DUP9 PUSH2 0x2BD5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1718 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1755 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x189B DUP2 DUP11 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x18A7 DUP2 DUP11 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4305 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x43 SLOAD SWAP2 MLOAD SWAP1 SWAP4 SWAP3 PUSH2 0x19C4 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP10 SWAP2 DUP15 SWAP2 ADD PUSH2 0x40A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19EB SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH2 0x1AC1 DUP3 PUSH1 0x1 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18A7 DUP10 DUP10 DUP10 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x1AFD CALLER DUP4 DUP4 PUSH2 0x250F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1BB7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D PUSH32 0x0 PUSH2 0x1C07 TIMESTAMP PUSH32 0x0 PUSH2 0x207A JUMP JUMPDEST SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x1C2F JUMPI DUP8 PUSH2 0x1C31 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1C46 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x1C53 DUP9 DUP8 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1C70 PUSH2 0x1C60 DUP9 DUP8 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x1C6A DUP12 DUP7 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 PUSH2 0x2F95 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP9 DUP9 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CB4 JUMPI INVALID JUMPDEST DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CCA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D36 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1DD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1E36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x1E7B DUP2 DUP12 DUP12 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4570 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x200B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x446B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20CD DUP6 ADDRESS DUP7 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x2101 SWAP1 DUP4 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1650 JUMPI DUP4 ISZERO PUSH2 0x2138 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2169 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x21E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x452A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21F2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4449 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x226F SWAP1 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x162C SWAP1 DUP5 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x236A DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x244D JUMPI PUSH1 0x0 PUSH2 0x23A9 DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x23B7 DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23EA DUP2 DUP6 DUP8 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x241E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x244A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x2458 DUP5 DUP5 DUP5 PUSH2 0x3399 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2591 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F44454C454741544545000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x259C DUP3 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 PUSH2 0x25AB DUP6 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25B9 DUP7 DUP5 PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x261A DUP2 DUP7 DUP5 DUP8 PUSH2 0x3569 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D51C8E11BD570DB1734C8EC775785330E77007FEED45C43B608EF33FF914BD DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x267A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x26B9 JUMPI POP PUSH1 0x6 SWAP2 POP PUSH1 0x7 SWAP1 POP PUSH1 0x3F PUSH2 0x26C5 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH1 0x41 SWAP1 POP PUSH1 0x42 JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0xA3A JUMPI DUP4 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x282F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2729 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x27B4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x27A3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 PUSH2 0x281C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x27C8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3975 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x270E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2458 SWAP1 DUP6 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x2914 DUP9 DUP6 DUP9 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x2999 JUMPI DUP7 ISZERO PUSH2 0x2931 JUMPI PUSH2 0x292E DUP8 DUP3 DUP6 PUSH2 0x3975 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x2990 SWAP1 DUP6 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2A27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2A33 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A40 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A73 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x2B17 JUMPI POP SWAP1 POP PUSH2 0xA3A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B3B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x2B9C JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B93 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 GT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F424C4F434B5F4E554D424552000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x2C82 JUMPI PUSH2 0x2C7A DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT PUSH2 0x2D6A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP1 POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x2DBC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB DIV DUP2 SUB PUSH2 0x2DFA PUSH2 0x3C27 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP6 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 EQ ISZERO PUSH2 0x2E90 JUMPI PUSH1 0x20 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP PUSH2 0xBF4 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x2EB3 JUMPI DUP2 SWAP4 POP PUSH2 0x2EBA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x2DE2 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F31 JUMPI POP PUSH1 0x0 PUSH2 0x751 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2F3E JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44B3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x3997 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3F PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x3015 JUMPI DUP5 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3033 JUMPI POP DUP3 JUMPDEST PUSH2 0x3040 DUP3 DUP3 DUP6 PUSH1 0x0 PUSH2 0x3569 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP8 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x307E JUMPI DUP7 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x309C JUMPI POP DUP5 JUMPDEST PUSH2 0x30A9 DUP3 DUP3 DUP8 PUSH1 0x1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x3151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4A39314900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x4A393149 SWAP1 PUSH2 0x311E SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x403B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x317A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A16 JUMP JUMPDEST PUSH2 0x31E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x324E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3211 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3326 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2458 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4594 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x3405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x454B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x3471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4426 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347C DUP4 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x34C6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x448D PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3502 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35A2 JUMPI PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35AE DUP4 PUSH2 0x2692 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO PUSH2 0x3709 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x367A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x3683 DUP9 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x369C DUP5 DUP5 DUP11 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x3A4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x36DE DUP5 DUP10 PUSH2 0x207A JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x36F5 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x3859 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x37CF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x37D8 DUP8 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x37EC DUP5 DUP5 DUP10 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x382E DUP5 DUP10 PUSH2 0x1E87 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3845 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x386E JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x388A JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x38C7 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x38D3 JUMPI POP DUP4 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x3902 JUMPI TIMESTAMP PUSH2 0x3924 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3944 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x207A JUMP JUMPDEST SWAP1 POP PUSH2 0x396A DUP8 PUSH2 0x1C6A DUP7 PUSH2 0x1C70 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3964 DUP13 DUP9 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x2F22 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C70 PUSH2 0x3990 DUP7 DUP7 PUSH2 0x207A JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3A00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x3A0C JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xBF4 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP9 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3AD4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x3B3D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR SWAP1 SSTORE PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP7 DUP3 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD SWAP4 MLOAD DUP6 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP2 MSTORE SWAP1 DUP10 SWAP1 MSTORE KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C93 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA3A DUP3 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CAE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CB7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CE2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CEB DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH2 0x3CF9 PUSH1 0x20 DUP6 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D23 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3D2C DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3D56 PUSH1 0x80 DUP10 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D84 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3D8D DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3DB5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3DBE DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DDE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3DE7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E09 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3E12 DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3E27 PUSH1 0x40 DUP6 ADD PUSH2 0x3C62 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3E48 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3E51 DUP8 PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3E6D PUSH1 0x60 DUP9 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E99 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3EB0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3EC3 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3ED1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x3EE5 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA3A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F38 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F54 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x3F6B PUSH1 0x40 DUP7 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FA0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3F84 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3FB1 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F7B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F45585049524154494F4E0000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4E4F4E434500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F574E455200000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 TIMESTAMP SWAP9 MSTORE 0xE7 LOG0 0xDE CREATE2 GASPRICE CALLVALUE 0xAD SWAP3 0x2B PUSH31 0x3D08D6DDDC39A9398AA3132648753531DE835764736F6C6343000705003300 ","sourceMap":"301:668:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1631:51:24;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4242:166:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3249:98::-;;;:::i;4881:971:24:-;;;;;;:::i;:::-;;:::i;:::-;;4868:317:4;;;;;;:::i;:::-;;:::i;2339:141:24:-;;;:::i;1193:36::-;;;:::i;:::-;;;;;;;:::i;3108:81:4:-;;;:::i;:::-;;;;;;;:::i;7914:128:20:-;;;;;;:::i;:::-;;:::i;1400:39:24:-;;;:::i;2105:31::-;;;:::i;5580:215:4:-;;;;;;:::i;:::-;;:::i;717:121:6:-;;;:::i;809:72:17:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1491:211:6:-;;;;;;:::i;:::-;;:::i;1813:291::-;;;;;;:::i;:::-;;:::i;3405:117:4:-;;;;;;:::i;:::-;;:::i;1273:41:24:-;;;:::i;2140:50::-;;;:::i;5973:230::-;;;:::i;885:57:17:-;;;;;;:::i;:::-;;:::i;1572:55:24:-;;;;;;:::i;:::-;;:::i;3641:349::-;;;:::i;10715:468::-;;;;;;:::i;:::-;;:::i;666:41:20:-;;;:::i;1529:38:24:-;;;:::i;2400:85:4:-;;;:::i;3605:122:6:-;;;;;;:::i;:::-;;:::i;1233:36:24:-;;;:::i;6358:490::-;;;;;;:::i;:::-;;:::i;6282:266:4:-;;;;;;:::i;:::-;;:::i;3725:172::-;;;;;;:::i;:::-;;:::i;564:148:6:-;;;:::i;758:36:20:-;;;:::i;3994:740:24:-;;;;;;:::i;:::-;;:::i;1406:709:20:-;;;;;;:::i;:::-;;:::i;2283:406:6:-;;;;;;:::i;:::-;;:::i;2546:42:24:-;;;;;;:::i;:::-;;:::i;2799:424:6:-;;;;;;:::i;:::-;;:::i;1228:36:17:-;;;:::i;16336:712:24:-;;;;;;:::i;:::-;;:::i;712:41:20:-;;;:::i;11809:742:24:-;;;;;;:::i;:::-;;:::i;1195:157:6:-;;;;;;:::i;:::-;;:::i;3955:149:4:-;;;;;;:::i;:::-;;:::i;1152:36:24:-;;;:::i;799:43:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;9546:1025:24:-;;;;;;:::i;:::-;;:::i;15218:718::-;;;;;;:::i;:::-;;:::i;2206:81:4:-;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2243:13;;2268:12;;2275:5;;2268:12;;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81;:::o;1631:51:24:-;;;;;;;;;;;;;:::o;4242:166:4:-;4325:4;4341:39;4350:12;:10;:12::i;:::-;4364:7;4373:6;4341:8;:39::i;:::-;-1:-1:-1;4397:4:4;4242:166;;;;;:::o;3249:98::-;3328:12;;3249:98;:::o;4881:971:24:-;4957:11;4949:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;5079:10;5029:30;5062:28;;;:16;:28;;;;;;5129:44;5062:28;5156:16;5129:26;:44::i;:::-;5111:15;:62;5096:114;;;;;;;;;;;;:::i;:::-;5300:14;5231:65;5251:44;:22;5278:16;5251:26;:44::i;:::-;5231:15;;:19;:65::i;:::-;:83;;5216:137;;;;;;;;;;;;:::i;:::-;5359:30;5392:21;5402:10;5392:9;:21::i;:::-;5359:54;;5420:22;5455;5446:6;:31;5445:67;;5506:6;5445:67;;;5481:22;5445:67;5420:92;;5519:72;5550:10;5562:22;5586:4;5519:30;:72::i;:::-;;5598:33;5604:10;5616:14;5598:5;:33::i;:::-;5642:42;:22;5669:14;5642:26;:42::i;:::-;5638:100;;5716:10;5730:1;5699:28;;;:16;:28;;;;;:32;5638:100;5744:53;:33;5751:12;5744:33;5778:2;5782:14;5744:33;:53::i;:::-;5828:2;5809:38;;5816:10;5809:38;;;5832:14;5809:38;;;;;;:::i;:::-;;;;;;;;4881:971;;;;;:::o;4868:317:4:-;4974:4;4990:36;5000:6;5008:9;5019:6;4990:9;:36::i;:::-;5036:121;5045:6;5053:12;:10;:12::i;:::-;5067:89;5105:6;5067:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5087:12;:10;:12::i;:::-;5067:33;;;;;;;;;;;;;-1:-1:-1;5067:33:4;;;:89;:37;:89::i;:::-;5036:8;:121::i;:::-;-1:-1:-1;5174:4:4;4868:317;;;;;;:::o;2339:141:24:-;2385:95;2339:141;:::o;1193:36::-;;;:::o;3108:81:4:-;3173:9;;;;3108:81;:::o;7914:128:20:-;8012:13;;;;7990:7;8012:13;;;:6;:13;;;;;;;;:25;;;;;:19;;;;:25;;;;7914:128;;;;:::o;1400:39:24:-;;;:::o;2105:31::-;;;;:::o;5580:215:4:-;5668:4;5684:83;5693:12;:10;:12::i;:::-;5707:7;5716:50;5755:10;5716:11;:25;5728:12;:10;:12::i;:::-;5716:25;;;;;;;;;;;;;;;;;;-1:-1:-1;5716:25:4;;;:34;;;;;;;;;;;:38;:50::i;717:121:6:-;761:77;717:121;:::o;809:72:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1491:211:6:-;1552:67;1568:10;1580:9;1591:27;1552:15;:67::i;:::-;1625:72;1641:10;1653:9;1664:32;1625:15;:72::i;:::-;1491:211;:::o;1813:291::-;1939:7;1961:45;2010:40;2035:14;2010:24;:40::i;:::-;1956:94;;;;2064:35;2078:9;2089;2064:13;:35::i;:::-;2057:42;1813:291;-1:-1:-1;;;;1813:291:6:o;3405:117:4:-;3497:18;;;3471:7;3497:18;;;;;;;;;;;3405:117;;;;:::o;1273:41:24:-;;;:::o;2140:50::-;2180:10;;;;;;;;;;;;;;;;;2140:50;:::o;5973:230::-;6025:21;6035:10;6025:9;:21::i;:::-;6017:66;;;;;;;;;;;;:::i;:::-;6137:10;6120:28;;;;:16;:28;;;;;;6151:15;6120:46;;6178:20;;;6120:28;6178:20;5973:230::o;885:57:17:-;;;;;;;;;;;;;:::o;1572:55:24:-;;;;;;;;;;;;;:::o;3641:349::-;1040:16:25;1059:13;:11;:13::i;:::-;1040:32;;1097:23;;1086:8;:34;1078:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:23;:34;;;3771:9:24::1;2240:95;3887:6;:4;:6::i;:::-;3871:24:::0;;::::1;::::0;;::::1;::::0;2180:10:::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;3828:151;::::1;::::0;;3905:26;;3941:7;;3966:4:::1;::::0;3828:151:::1;;:::i;:::-;;::::0;;;;;::::1;::::0;;;;;;3811:174;;3828:151:::1;3811:174:::0;;::::1;::::0;3792:16:::1;:193:::0;-1:-1:-1;;3641:349:24:o;10715:468::-;10867:41;;;10906:1;10867:41;;;;;;;;;10786:7;;10801:57;;10867:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10801:107;;10935:151;;;;;;;;11001:4;10935:151;;;;;;11028:17;11038:6;11028:9;:17::i;:::-;10935:151;;;;11066:13;:11;:13::i;:::-;10935:151;;;10914:15;10930:1;10914:18;;;;;;;;;;;;;:172;;;;11099:79;11132:45;11153:6;11161:15;11132:20;:45::i;:::-;11099:28;;;;;;;:20;:28;;;;;;;:32;:79::i;666:41:20:-;;;:::o;1529:38:24:-;;;:::o;2400:85:4:-;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:13;;2464:14;;2471:7;;2464:14;;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;3605:122:6;3681:7;3703:19;:17;:19::i;1233:36:24:-;;;:::o;6358:490::-;6432:23;6464:72;6495:10;6507:21;6517:10;6507:9;:21::i;:::-;6530:5;6464:30;:72::i;:::-;6432:104;;6542:21;6577:17;6567:6;:27;6566:56;;6616:6;6566:56;;;6598:15;6566:56;6542:80;;6664:52;6684:13;6664:52;;;;;;;;;;;;;;;;;:15;:19;;:52;;;;;:::i;:::-;6650:10;6629:32;;;;:20;:32;;;;;:87;6723:63;:12;6629:32;6723:29;6753:13;6768:2;6772:13;6723:29;:63::i;:::-;6825:2;6798:45;;6813:10;6798:45;;;6829:13;6798:45;;;;;;:::i;:::-;;;;;;;;6358:490;;;;:::o;6282:266:4:-;6375:4;6391:129;6400:12;:10;:12::i;:::-;6414:7;6423:96;6462:15;6423:96;;;;;;;;;;;;;;;;;:11;:25;6435:12;:10;:12::i;:::-;6423:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3725:172::-;3811:4;3827:42;3837:12;:10;:12::i;:::-;3851:9;3862:6;3827:9;:42::i;564:148:6:-;616:96;564:148;:::o;758:36:20:-;792:2;758:36;:::o;3994:740:24:-;4077:11;4069:43;;;;;;;;;;;;:::i;:::-;4118:21;4142;4152:10;4142:9;:21::i;:::-;4118:45;;4170:22;4201:81;4226:10;4246:4;4253:13;4268;:11;:13::i;:::-;4201:24;:81::i;:::-;4170:112;-1:-1:-1;4292:19:24;;4288:182;;4326:42;4341:10;4353:14;4326:42;;;;;;;:::i;:::-;;;;;;;;4411:32;;;;;;;:20;:32;;;;;;:52;;4448:14;4411:36;:52::i;:::-;4376:32;;;;;;;:20;:32;;;;;:87;4288:182;4507:62;4532:1;4535:6;4543:10;4555:13;4507:24;:62::i;:::-;4476:28;;;;;;;:16;:28;;;;;:93;4576:25;4493:10;4594:6;4576:5;:25::i;:::-;4607:72;:37;4614:12;4607:37;4645:10;4665:4;4672:6;4607:37;:72::i;:::-;4710:10;4691:38;;4698:10;4691:38;;;4722:6;4691:38;;;;;;:::i;1406:709:20:-;1538:10;:30;1552:16;1538:30;;1530:64;;;;;;;;;;;;:::i;:::-;1606:9;1601:510;1621:28;;;1601:510;;;1664:29;1696:6;:44;1703:17;;1721:1;1703:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1696:44;;;;;;;;;;;;;;;1664:76;;1749:142;1784:17;;1802:1;1784:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1830:11;1851:17;;1869:1;1851:20;;;;;;;;;;;;:32;;;1749:25;:142::i;:::-;;1932:17;;1950:1;1932:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;1932:38:20;:::i;:::-;1900:70;;;;;;;;;;;;2012:17;;2030:1;2012:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1984:120;;;2058:17;;2076:1;2058:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;2058:38:20;:::i;:::-;1984:120;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1651:3:20;;1601:510;;;;1406:709;;:::o;2283:406:6:-;2401:7;2426:66;2500:51;2562:40;2587:14;2562:24;:40::i;:::-;2418:184;;;;;2616:68;2637:9;2648:15;2665:4;2671:12;2616:20;:68::i;:::-;2609:75;2283:406;-1:-1:-1;;;;;2283:406:6:o;2546:42:24:-;;;;;;;;;;;;;:::o;2799:424:6:-;2938:7;2961:66;3035:51;3097:40;3122:14;3097:24;:40::i;:::-;2953:184;;;;;3151:67;3172:9;3183:15;3200:4;3206:11;3151:20;:67::i;:::-;3144:74;2799:424;-1:-1:-1;;;;;;2799:424:6:o;1228:36:17:-;;;;;;:::o;16336:712:24:-;16481:18;761:77:6;16542:9:24;16553:5;16560:6;16512:55;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16502:66;;;;;;16481:87;;16574:14;16630:16;;16648:10;16601:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16591:69;;;;;;16574:86;;16666:17;16686:26;16696:6;16704:1;16707;16710;16686:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16686:26:24;;;;;;-1:-1:-1;;16726:23:24;;;16718:53;;;;;;;;;;;;:::i;:::-;16794:18;;;;;;;:7;:18;;;;;:20;;;;;;;;16785:29;;16777:55;;;;;;;;;;;;:::i;:::-;16865:6;16846:15;:25;;16838:56;;;;;;;;;;;;:::i;:::-;16900:66;16916:9;16927;16938:27;16900:15;:66::i;:::-;16972:71;16988:9;16999;17010:32;16972:15;:71::i;:::-;16336:712;;;;;;;;;:::o;712:41:20:-;;;:::o;11809:742:24:-;11976:19;;;11968:45;;;;;;;;;;;;:::i;:::-;12077:8;12058:15;:27;;12050:58;;;;;;;;;;;;:::i;:::-;12142:14;;;12114:25;12142:14;;;:7;:14;;;;;;;;;12254:16;;12292:79;;12142:14;;12114:25;12292:79;;2385:95;;12150:5;;12327:7;;12336:5;;12142:14;;12362:8;;12292:79;;:::i;:::-;;;;;;;;;;;;;12282:90;;;;;;12204:178;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12185:205;;;;;;12162:228;;12414:26;12424:6;12432:1;12435;12438;12414:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12405:35;;:5;:35;;;12397:65;;;;;;;;;;;;:::i;:::-;12485:24;:17;12507:1;12485:21;:24::i;:::-;12468:14;;;;;;;:7;:14;;;;;:41;12515:31;12476:5;12531:7;12540:5;12515:8;:31::i;1195:157:6:-;1293:54;1309:10;1321:9;1332:14;1293:15;:54::i;:::-;1195:157;;:::o;3955:149:4:-;4070:18;;;;4044:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3955:149::o;1152:36:24:-;1187:1;1152:36;:::o;799:43:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9546:1025:24:-;9760:27;;;9715:7;9760:27;;;:16;:27;;;;;;9797:24;9793:53;;9838:1;9831:8;;;;;9793:53;9852:37;9898:57;9940:14;9898:37;:15;9918:16;9898:19;:37::i;:::-;:41;;:57::i;:::-;9852:103;;9998:19;9966:29;:51;9962:573;;;10049:1;10027:23;;9962:573;;;10071:29;10144:21;10112:29;:53;10111:117;;10207:21;10111:117;;;10179:15;10111:117;10071:157;;10265:19;10241:21;:43;10237:292;;;10303:19;10296:26;;;;;;;10237:292;10369:151;10489:30;:15;10509:9;10489:19;:30::i;:::-;10381:82;10428:34;:9;10442:19;10428:13;:34::i;:::-;10381:42;:15;10401:21;10381:19;:42::i;:::-;:46;;:82::i;:::-;10369:119;;:151::i;:::-;10347:173;;9962:573;;-1:-1:-1;10547:19:24;9546:1025;-1:-1:-1;;;;;9546:1025:24:o;15218:718::-;15404:18;616:96:6;15488:9:24;15507:14;15499:23;;;;;;;;15524:5;15531:6;15450:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15431:115;;;;;;15404:142;;15552:14;15608:16;;15626:10;15579:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15569:69;;;;;;15552:86;;15644:17;15664:26;15674:6;15682:1;15685;15688;15664:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15664:26:24;;;;;;-1:-1:-1;;15704:23:24;;;15696:53;;;;;;;;;;;;:::i;:::-;15772:18;;;;;;;:7;:18;;;;;:20;;;;;;;;15763:29;;15755:55;;;;;;;;;;;;:::i;:::-;15843:6;15824:15;:25;;15816:56;;;;;;;;;;;;:::i;:::-;15878:53;15894:9;15905;15916:14;15878:15;:53::i;:::-;15218:718;;;;;;;;;;:::o;913:162:19:-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10009:88:4;10069:9;:21;;;;;;;;;;;;;;;10009:88::o;590:104:3:-;677:10;590:104;:::o;9346:340:4:-;9447:19;;;9439:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9525:21;;;9517:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9596:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9647:32;;;;;;;;;;;;;;;;;9346:340;;;:::o;1319:128:19:-;1377:7;1399:43;1403:1;1406;1399:43;;;;;;;;;;;;;;;;;:3;:43::i;8217:539:24:-;8346:7;8361:22;8392:73;8417:4;8431;8438:11;8451:13;:11;:13::i;8392:73::-;8498:26;;;8471:24;8498:26;;;:20;:26;;;;;;8361:104;;-1:-1:-1;8471:24:24;8498:46;;8361:104;8498:30;:46::i;:::-;8471:73;-1:-1:-1;8555:19:24;;8551:171;;8588:13;8584:83;;;8613:26;;;;;;;:20;:26;;;;;:45;;;8584:83;8679:36;8694:4;8700:14;8679:36;;;;;;;:::i;:::-;;;;;;;;8735:16;8217:539;-1:-1:-1;;;;;8217:539:24:o;8511:410:4:-;8594:21;;;8586:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8664:49;8685:7;8702:1;8706:6;8664:20;:49::i;:::-;8745:68;8768:6;8745:68;;;;;;;;;;;;;;;;;:18;;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;8724:18;;;:9;:18;;;;;;;;;;:89;8838:12;;:24;;8855:6;8838:16;:24::i;:::-;8823:12;:39;8877:37;;;;;;;;8903:1;;8877:37;;;;;;;;;;;;;8511:410;;:::o;790:184:18:-;910:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:23;910:58;;;884:85;;903:5;;884:18;:85::i;7049:822:24:-;7150:21;7174:15;7184:4;7174:9;:15::i;:::-;7150:39;;7209:57;7240:4;7246:13;7261:4;7209:30;:57::i;:::-;;7302:2;7294:10;;:4;:10;;;7290:537;;7314:19;7336:13;7346:2;7336:9;:13::i;:::-;7314:35;;7357:53;7388:2;7392:11;7405:4;7357:30;:53::i;:::-;-1:-1:-1;7452:22:24;;;7419:30;7452:22;;;:16;:22;;;;;;7505:113;7452:22;7571:6;7587:2;7599:11;7505:24;:113::i;:::-;7482:20;;;;;;;:16;:20;;;;;:136;7720:23;;;:54;;;;-1:-1:-1;7747:27:24;;;7720:54;7716:105;;;7786:22;;;7811:1;7786:22;;;:16;:22;;;;;:26;7716:105;7290:537;;;7833:33;7849:4;7855:2;7859:6;7833:15;:33::i;:::-;7049:822;;;;:::o;1692:187:5:-;1778:7;1813:12;1805:6;;;;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:5;;;1692:187::o;3947:602:6:-;4080:23;;;4072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4137:45;4186:40;4211:14;4186:24;:40::i;:::-;4132:94;;;;4233:24;4260:20;4270:9;4260;:20::i;:::-;4233:47;;4287:25;4315:35;4329:9;4340;4315:13;:35::i;:::-;4357:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;4287:63;-1:-1:-1;4396:84:6;4287:63;4357:32;4447:16;4465:14;4396:20;:84::i;:::-;4518:9;4491:53;;4507:9;4491:53;;;4529:14;4491:53;;;;;;;;;;;;;;;;;;;;;;;;;;3947:602;;;;;;:::o;14122:612:24:-;14242:56;;;;14451:14;:45;;;;;;;;;14447:283;;;-1:-1:-1;14514:16:24;;-1:-1:-1;14532:22:24;;-1:-1:-1;14556:16:24;14506:67;;14447:283;-1:-1:-1;14611:26:24;;-1:-1:-1;14647:32:24;;-1:-1:-1;14689:26:24;14447:283;14122:612;;;;;:::o;9994:299:6:-;10163:20;;;;10118:7;10163:20;;;;;;;;;;;10118:7;;10163:20;10194:31;10190:68;;10242:9;10235:16;;;;;11287:90:24;1187:1;11287:90;:::o;5299:675:20:-;5428:7;;;5478:465;5502:6;:13;5498:1;:17;5478:465;;;5530:29;5562:6;:33;5569:6;5576:1;5569:9;;;;;;;;;;;;;;;;;;;:25;5562:33;;;;;;;;;;;;5569:25;5562:33;;;5658:17;;;;5687:29;;5771:9;;5562:33;;-1:-1:-1;5632:170:20;;5687:29;;;;;5728:31;;;;;5771:6;;5778:1;;5771:9;;;;;;;;;;;;:21;;;5632:14;:170::i;:::-;5603:199;;5828:108;5856:72;5868:6;5875:1;5868:9;;;;;;;;;;;;;;:22;;;5892:10;5904:11;:17;;:23;5922:4;5904:23;;;;;;;;;;;;;;;;5856:11;:72::i;:::-;5828:14;;:18;:108::i;:::-;5811:125;-1:-1:-1;;;5517:3:20;;5478:465;;;-1:-1:-1;5955:14:20;5299:675;-1:-1:-1;;;5299:675:20:o;978:216:18:-;1120:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:27;1120:68;;;1094:95;;1113:5;;1094:18;:95::i;3620:641:20:-;3809:13;;;;3764:7;3809:13;;;:6;:13;;;;;;;;3848:21;;;;;:15;;;:21;;;;;;3764:7;;3809:13;3764:7;;3927:56;3816:5;3809:13;3971:11;3927:25;:56::i;:::-;3908:75;;4007:8;3994:9;:21;3990:239;;4029:17;;4025:105;;4075:46;4087:12;4101:8;4111:9;4075:11;:46::i;:::-;4058:63;;4025:105;4138:21;;;;;;;;:15;;;:21;;;;;;;:32;;;4183:39;;;;;;;;;4162:8;;4183:39;:::i;:::-;;;;;;;;3990:239;-1:-1:-1;4242:14:20;3620:641;-1:-1:-1;;;;;;;3620:641:20:o;7822:370:4:-;7905:21;;;7897:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;8103:18;;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;8082:18;;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7822:370;;:::o;2526:689:20:-;2706:17;;;;2759:31;;2672:7;;2706:17;2759:31;;;;;2801:15;:38;;2797:74;;;-1:-1:-1;2856:8:20;-1:-1:-1;2849:15:20;;2797:74;2927:29;;2877:16;;2902:89;;2917:8;;2927:29;;2958:19;2979:11;2902:14;:89::i;:::-;2877:114;;3014:8;3002;:20;2998:126;;3052:8;3032:11;:17;;:28;;;;3091:15;3073:44;;;3108:8;3073:44;;;;;;:::i;:::-;;;;;;;;2998:126;3130:58;;;3172:15;3130:58;;;;;;;;;3202:8;-1:-1:-1;;;2526:689:20;;;;;:::o;6585:1211:6:-;6814:7;6852:12;6837:11;:27;;6829:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6921:21;;;6896:22;6921:21;;;;;;;;;;;6953:19;6949:62;;6989:15;6999:4;6989:9;:15::i;:::-;6982:22;;;;;6949:62;7060:15;;;;;;;;;;;;;;;7076:18;;;7060:35;;;;;;;:47;;;:62;-1:-1:-1;7056:131:6;;7139:15;;;;;;;;;;;;;;;7155:18;;;;7139:35;;;;;;:41;;;;;;;;-1:-1:-1;7132:48:6;;7056:131;7237:15;;;;;;;;;;;;;;;:18;;;;;;;;:30;;;:44;-1:-1:-1;7233:73:6;;;7298:1;7291:8;;;;;7233:73;7312:13;7351:18;;;7375:376;7390:5;7382;:13;7375:376;;;7448:1;7431:13;;;7430:19;7422:27;;7484:24;;:::i;:::-;-1:-1:-1;7511:15:6;;;;;;;;;;;;;;;:23;;;;;;;;;7484:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;7546:35;;7542:203;;;7600:14;;;7593:21;;;-1:-1:-1;7593:21:6;;-1:-1:-1;;;;7593:21:6;7542:203;7633:20;;:34;;;-1:-1:-1;7629:116:6;;;7687:6;7679:14;;7629:116;;;7735:1;7726:6;:10;7718:18;;7629:116;7375:376;;;;;-1:-1:-1;7763:15:6;;;;;;;;;;;;;;;:22;;;;;;;:28;;;;;;;;-1:-1:-1;;6585:1211:6;;;;;;:::o;2120:419:19:-;2178:7;2403:6;2399:35;;-1:-1:-1;2426:1:19;2419:8;;2399:35;2452:5;;;2456:1;2452;:5;:1;2471:5;;;;;:10;2463:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:124;3028:7;3050:39;3054:1;3057;3050:39;;;;;;;;;;;;;;;;;:3;:39::i;12906:1212:24:-;13048:22;;;;13018:27;13048:22;;;:16;:22;;;;;;;13104:20;;;;;;;;13048:22;;;;13104:20;13135:33;13131:80;;13200:4;13178:26;;13131:80;13220:31;;;13216:74;;-1:-1:-1;13281:2:24;13216:74;13296:127;13324:19;13351:17;13376:6;13390:27;13296:20;:127::i;:::-;13463:32;;;;13430:30;13463:32;;;:26;:32;;;;;;;13532:30;;;;;;;;13463:32;;;;13532:30;13573:36;13569:86;;13644:4;13619:29;;13569:86;13664:34;;;13660:80;;-1:-1:-1;13731:2:24;13660:80;13746:138;13774:22;13804:20;13832:6;13846:32;13746:20;:138::i;:::-;13995:15;;;;14020:34;;14016:98;;14064:43;;;;;:25;;;;;;:43;;14090:4;;14096:2;;14100:6;;14064:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14016:98;12906:1212;;;;;;;;:::o;1547:555:18:-;1630:27;1638:5;1630:25;;;:27::i;:::-;1622:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:12;1770:23;1805:5;1797:19;;1817:4;1797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:67;;;;1836:7;1828:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:17;;:21;1887:211;;2025:10;2014:30;;;;;;;;;;;;;;;-1:-1:-1;2014:30:18;2006:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7022:530:4;7127:20;;;7119:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7207:23;;;7199:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7281:47;7302:6;7310:9;7321:6;7281:20;:47::i;:::-;7359:71;7381:6;7359:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7339:17;;;;:9;:17;;;;;;;;;;;:91;;;;7463:20;;;;;;;:32;;7488:6;7463:24;:32::i;:::-;7440:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7510:35;;;;;;;7440:20;;7510:35;;;;;;;;;;;;;7022:530;;;:::o;4892:1390:6:-;5042:2;5034:10;;:4;:10;;;5030:37;;;5054:7;;5030:37;5081:66;5155:51;5217:40;5242:14;5217:24;:40::i;:::-;-1:-1:-1;5073:184:6;;-1:-1:-1;5073:184:6;-1:-1:-1;5268:18:6;;;;5264:514;;5353:21;;;5296:16;5353:21;;;;;;;;;;;5387:23;;5383:155;;5433:15;;;;;;;;;;;;;;;5449:22;;;5433:39;;;;;;;:45;;;;;;;-1:-1:-1;5383:155:6;;;5514:15;5524:4;5514:9;:15::i;:::-;5503:26;;5383:155;5546:146;5570:9;5589:15;5614:4;5636:8;5663:20;5636:8;5676:6;5663:12;:20::i;:::-;5546:14;:146::i;:::-;5706:65;;;;5734:20;:8;5747:6;5734:12;:20::i;:::-;5756:14;5706:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5264:514;;;5787:16;;;;5783:495;;5868:19;;;5813:16;5868:19;;;;;;;;;;;5899:21;;5895:147;;5943:13;;;;;;;;;;;;;;;5957:20;;;5943:35;;;;;;;:41;;;;;;;-1:-1:-1;5895:147:6;;;6020:13;6030:2;6020:9;:13::i;:::-;6009:24;;5895:147;6050:144;6074:9;6093:15;6118:2;6138:8;6165:20;6138:8;6178:6;6165:12;:20::i;6050:144::-;6208:63;;;;6234:20;:8;6247:6;6234:12;:20::i;:::-;6256:14;6208:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5783:495;;;4892:1390;;;;;;:::o;7011:693:20:-;7178:7;7204:22;;;:49;;-1:-1:-1;7236:17:20;;7204:49;:97;;;;7286:15;7263:19;:38;;;7204:97;:146;;;;7334:16;7311:19;:39;;;;7204:146;7193:198;;;-1:-1:-1;7372:12:20;7365:19;;7193:198;7397:24;7448:16;7430:15;:34;:71;;7486:15;7430:71;;;7467:16;7430:71;7397:104;-1:-1:-1;7507:17:20;7527:41;7397:104;7527:41;;;:20;:41::i;:::-;7507:61;-1:-1:-1;7587:112:20;7679:12;7587:78;7652:12;7587:60;7624:22;7587:32;:17;7507:61;7587:21;:32::i;:::-;:36;;:60::i;:112::-;7574:125;7011:693;-1:-1:-1;;;;;;;7011:693:20:o;6319:239::-;6450:7;6472:81;6530:22;6472:53;6497:27;:12;6514:9;6497:16;:27::i;:::-;6472:20;;:24;:53::i;3545:332:19:-;3647:7;3739:12;3732:5;3724:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:9;3774:1;3770;:5;;;;;;;3545:332;-1:-1:-1;;;;;3545:332:19:o;743:586:12:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;;1308:15:12;;;1273:51;-1:-1:-1;;743:586:12:o;8840:813:6:-;9156:22;;;9075:20;9156:22;;;;;;;;;;;;9238:16;;;;;;;9106:12;;9156:22;9323:24;;;;;:101;;-1:-1:-1;9372:23:6;;;9357:39;;;;;;;;;;;:51;:67;;;;:51;;:67;9323:101;9312:337;;;9454:23;;;9439:39;;;;;;;;;;;:56;;;;;;;;;;;;;9312:337;;;9554:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9516:35:6;;;;;;;;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9594:22;;;;;;;;;;9516:70;9619:23;;9594:48;;8840:813;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;14:198:28:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;217:158;300:20;;349:1;339:12;;329:2;;365:1;362;355:12;380:158;448:20;;508:4;497:16;;487:27;;477:2;;528:1;525;518:12;543:198;;655:2;643:9;634:7;630:23;626:32;623:2;;;676:6;668;661:22;623:2;704:31;725:9;704:31;:::i;746:274::-;;;875:2;863:9;854:7;850:23;846:32;843:2;;;896:6;888;881:22;843:2;924:31;945:9;924:31;:::i;:::-;914:41;;974:40;1010:2;999:9;995:18;974:40;:::i;:::-;964:50;;833:187;;;;;:::o;1025:342::-;;;;1171:2;1159:9;1150:7;1146:23;1142:32;1139:2;;;1192:6;1184;1177:22;1139:2;1220:31;1241:9;1220:31;:::i;:::-;1210:41;;1270:40;1306:2;1295:9;1291:18;1270:40;:::i;:::-;1260:50;;1357:2;1346:9;1342:18;1329:32;1319:42;;1129:238;;;;;:::o;1372:622::-;;;;;;;;1584:3;1572:9;1563:7;1559:23;1555:33;1552:2;;;1606:6;1598;1591:22;1552:2;1634:31;1655:9;1634:31;:::i;:::-;1624:41;;1684:40;1720:2;1709:9;1705:18;1684:40;:::i;:::-;1674:50;;1771:2;1760:9;1756:18;1743:32;1733:42;;1822:2;1811:9;1807:18;1794:32;1784:42;;1845:39;1879:3;1868:9;1864:19;1845:39;:::i;:::-;1835:49;;1931:3;1920:9;1916:19;1903:33;1893:43;;1983:3;1972:9;1968:19;1955:33;1945:43;;1542:452;;;;;;;;;;:::o;1999:304::-;;;2145:2;2133:9;2124:7;2120:23;2116:32;2113:2;;;2166:6;2158;2151:22;2113:2;2194:31;2215:9;2194:31;:::i;:::-;2184:41;;2244:53;2293:2;2282:9;2278:18;2244:53;:::i;2308:652::-;;;;;;;;2537:3;2525:9;2516:7;2512:23;2508:33;2505:2;;;2559:6;2551;2544:22;2505:2;2587:31;2608:9;2587:31;:::i;:::-;2577:41;;2637:53;2686:2;2675:9;2671:18;2637:53;:::i;2965:266::-;;;3094:2;3082:9;3073:7;3069:23;3065:32;3062:2;;;3115:6;3107;3100:22;3062:2;3143:31;3164:9;3143:31;:::i;:::-;3133:41;3221:2;3206:18;;;;3193:32;;-1:-1:-1;;;3052:179:28:o;3236:372::-;;;;3399:2;3387:9;3378:7;3374:23;3370:32;3367:2;;;3420:6;3412;3405:22;3367:2;3448:31;3469:9;3448:31;:::i;:::-;3438:41;;3526:2;3515:9;3511:18;3498:32;3488:42;;3549:53;3598:2;3587:9;3583:18;3549:53;:::i;:::-;3539:63;;3357:251;;;;;:::o;3613:545::-;;;;;;;3808:3;3796:9;3787:7;3783:23;3779:33;3776:2;;;3830:6;3822;3815:22;3776:2;3858:31;3879:9;3858:31;:::i;:::-;3848:41;;3936:2;3925:9;3921:18;3908:32;3898:42;;3987:2;3976:9;3972:18;3959:32;3949:42;;4010:38;4044:2;4033:9;4029:18;4010:38;:::i;:::-;4000:48;;4095:3;4084:9;4080:19;4067:33;4057:43;;4147:3;4136:9;4132:19;4119:33;4109:43;;3766:392;;;;;;;;:::o;4163:704::-;;;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;4367:6;4359;4352:22;4314:2;4412:9;4399:23;4441:18;4482:2;4474:6;4471:14;4468:2;;;4503:6;4495;4488:22;4468:2;4546:6;4535:9;4531:22;4521:32;;4591:7;4584:4;4580:2;4576:13;4572:27;4562:2;;4618:6;4610;4603:22;4562:2;4663;4650:16;4689:2;4681:6;4678:14;4675:2;;;4710:6;4702;4695:22;4675:2;4771:7;4766:2;4758:4;4750:6;4746:17;4742:2;4738:26;4734:35;4731:48;4728:2;;;4797:6;4789;4782:22;4728:2;4833;4825:11;;;;;4855:6;;-1:-1:-1;4304:563:28;;-1:-1:-1;;;;4304:563:28:o;4872:321::-;;4984:2;4972:9;4963:7;4959:23;4955:32;4952:2;;;5005:6;4997;4990:22;4952:2;5049:9;5036:23;5099:34;5092:5;5088:46;5081:5;5078:57;5068:2;;5154:6;5146;5139:22;5198:190;;5310:2;5298:9;5289:7;5285:23;5281:32;5278:2;;;5331:6;5323;5316:22;5278:2;-1:-1:-1;5359:23:28;;5268:120;-1:-1:-1;5268:120:28:o;5393:403::-;;;;;5556:3;5544:9;5535:7;5531:23;5527:33;5524:2;;;5578:6;5570;5563:22;5524:2;5619:9;5606:23;5596:33;;5676:2;5665:9;5661:18;5648:32;5638:42;;5699:40;5735:2;5724:9;5720:18;5699:40;:::i;:::-;5514:282;;;;-1:-1:-1;5689:50:28;;5786:2;5771:18;5758:32;;-1:-1:-1;;5514:282:28:o;5801:536::-;;5882:5;5876:12;5909:6;5904:3;5897:19;5934:3;5946:162;5960:6;5957:1;5954:13;5946:162;;;6022:4;6078:13;;;6074:22;;6068:29;6050:11;;;6046:20;;6039:59;5975:12;5946:162;;;6126:6;6123:1;6120:13;6117:2;;;6192:3;6185:4;6176:6;6171:3;6167:16;6163:27;6156:40;6117:2;-1:-1:-1;6251:2:28;6239:15;6256:66;6235:88;6226:98;;;;6326:4;6222:109;;5852:485;-1:-1:-1;;5852:485:28:o;6342:444::-;6612:66;6600:79;;6704:1;6695:11;;6688:27;;;;6740:2;6731:12;;6724:28;6777:2;6768:12;;6590:196::o;6791:226::-;6967:42;6955:55;;;;6937:74;;6925:2;6910:18;;6892:125::o;7022:398::-;7234:42;7303:15;;;7285:34;;7355:15;;;;7350:2;7335:18;;7328:43;7402:2;7387:18;;7380:34;;;;7212:2;7197:18;;7179:241::o;7425:297::-;7629:42;7617:55;;;;7599:74;;7704:2;7689:18;;7682:34;7587:2;7572:18;;7554:168::o;7727:187::-;7892:14;;7885:22;7867:41;;7855:2;7840:18;;7822:92::o;7919:177::-;8065:25;;;8053:2;8038:18;;8020:76::o;8101:614::-;8388:25;;;8432:42;8510:15;;;8505:2;8490:18;;8483:43;8562:15;;;;8557:2;8542:18;;8535:43;8609:2;8594:18;;8587:34;8652:3;8637:19;;8630:35;;;;8696:3;8681:19;;8674:35;8375:3;8360:19;;8342:373::o;8720:440::-;8951:25;;;9024:42;9012:55;;;;9007:2;8992:18;;8985:83;9099:2;9084:18;;9077:34;9142:2;9127:18;;9120:34;8938:3;8923:19;;8905:255::o;9165:512::-;9424:25;;;9497:42;9485:55;;;;9480:2;9465:18;;9458:83;9572:2;9557:18;;9550:34;;;;9615:2;9600:18;;9593:34;9658:3;9643:19;;9636:35;9411:3;9396:19;;9378:299::o;9682:512::-;9941:25;;;9997:2;9982:18;;9975:34;;;;10040:2;10025:18;;10018:34;;;;10083:2;10068:18;;10061:34;10144:42;10132:55;10126:3;10111:19;;10104:84;9928:3;9913:19;;9895:299::o;10199:398::-;10426:25;;;10499:4;10487:17;;;;10482:2;10467:18;;10460:45;10536:2;10521:18;;10514:34;10579:2;10564:18;;10557:34;10413:3;10398:19;;10380:217::o;10602:219::-;;10749:2;10738:9;10731:21;10769:46;10811:2;10800:9;10796:18;10788:6;10769:46;:::i;11551:343::-;11753:2;11735:21;;;11792:2;11772:18;;;11765:30;11831:21;11826:2;11811:18;;11804:49;11885:2;11870:18;;11725:169::o;11899:341::-;12101:2;12083:21;;;12140:2;12120:18;;;12113:30;12179:19;12174:2;12159:18;;12152:47;12231:2;12216:18;;12073:167::o;12245:345::-;12447:2;12429:21;;;12486:2;12466:18;;;12459:30;12525:23;12520:2;12505:18;;12498:51;12581:2;12566:18;;12419:171::o;12595:342::-;12797:2;12779:21;;;12836:2;12816:18;;;12809:30;12875:20;12870:2;12855:18;;12848:48;12928:2;12913:18;;12769:168::o;12942:337::-;13144:2;13126:21;;;13183:2;13163:18;;;13156:30;13222:15;13217:2;13202:18;;13195:43;13270:2;13255:18;;13116:163::o;13284:345::-;13486:2;13468:21;;;13525:2;13505:18;;;13498:30;13564:23;13559:2;13544:18;;13537:51;13620:2;13605:18;;13458:171::o;13634:337::-;13836:2;13818:21;;;13875:2;13855:18;;;13848:30;13914:15;13909:2;13894:18;;13887:43;13962:2;13947:18;;13808:163::o;13976:347::-;14178:2;14160:21;;;14217:2;14197:18;;;14190:30;14256:25;14251:2;14236:18;;14229:53;14314:2;14299:18;;14150:173::o;14328:351::-;14530:2;14512:21;;;14569:2;14549:18;;;14542:30;14608:29;14603:2;14588:18;;14581:57;14670:2;14655:18;;14502:177::o;14684:218::-;14860:34;14848:47;;;;14830:66;;14818:2;14803:18;;14785:117::o;14907:319::-;15091:34;15152:15;;;15134:34;;15204:15;;15199:2;15184:18;;15177:43;15069:2;15054:18;;15036:190::o;15231:390::-;15443:34;15504:15;;;15486:34;;15556:15;;;;15551:2;15536:18;;15529:43;15603:2;15588:18;;15581:34;;;;15421:2;15406:18;;15388:233::o;15808:184::-;15980:4;15968:17;;;;15950:36;;15938:2;15923:18;;15905:87::o"},"gasEstimates":{"creation":{"codeDepositCost":"3588800","executionCost":"infinite","totalCost":"infinite"},"external":{"COOLDOWN_SECONDS()":"infinite","DELEGATE_BY_TYPE_TYPEHASH()":"340","DELEGATE_TYPEHASH()":"319","DISTRIBUTION_END()":"infinite","DOMAIN_SEPARATOR()":"1140","EIP712_REVISION()":"infinite","EMISSION_MANAGER()":"infinite","PERMIT_TYPEHASH()":"297","PRECISION()":"307","REVISION()":"294","REWARDS_VAULT()":"infinite","REWARD_TOKEN()":"infinite","STAKED_TOKEN()":"infinite","UNSTAKE_WINDOW()":"infinite","_aaveGovernance()":"1113","_nonces(address)":"1330","_votingSnapshots(address,uint256)":"1508","_votingSnapshotsCounts(address)":"1307","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","assets(address)":"2241","balanceOf(address)":"infinite","claimRewards(address,uint256)":"infinite","configureAssets((uint128,uint256,address)[])":"infinite","cooldown()":"22402","decimals()":"1159","decreaseAllowance(address,uint256)":"infinite","delegate(address)":"infinite","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","delegateByType(address,uint8)":"infinite","delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)":"infinite","getDelegateeByType(address,uint8)":"infinite","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"infinite","getPowerAtBlock(address,uint256,uint8)":"infinite","getPowerCurrent(address,uint8)":"infinite","getTotalRewardsBalance(address)":"infinite","getUserAssetData(address,address)":"infinite","increaseAllowance(address,uint256)":"infinite","initialize()":"infinite","name()":"infinite","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","redeem(address,uint256)":"infinite","stake(address,uint256)":"infinite","stakerRewardsToClaim(address)":"1329","stakersCooldowns(address)":"1332","symbol()":"infinite","totalSupply()":"1097","totalSupplyAt(uint256)":"1210","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"COOLDOWN_SECONDS()":"72b49d63","DELEGATE_BY_TYPE_TYPEHASH()":"aa9fbe02","DELEGATE_TYPEHASH()":"41cbf54a","DISTRIBUTION_END()":"919cd40f","DOMAIN_SEPARATOR()":"3644e515","EIP712_REVISION()":"78160376","EMISSION_MANAGER()":"cbcbb507","PERMIT_TYPEHASH()":"30adf81f","PRECISION()":"aaf5eb68","REVISION()":"dde43cba","REWARDS_VAULT()":"946776cd","REWARD_TOKEN()":"99248ea7","STAKED_TOKEN()":"312f6b83","UNSTAKE_WINDOW()":"359c4a96","_aaveGovernance()":"c3863ada","_nonces(address)":"b9844d8d","_votingSnapshots(address,uint256)":"5b3cc0cf","_votingSnapshotsCounts(address)":"7bb73c97","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assets(address)":"f11b8188","balanceOf(address)":"70a08231","claimRewards(address,uint256)":"9a99b4f0","configureAssets((uint128,uint256,address)[])":"b2a5dbfa","cooldown()":"787a08a6","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegateByType(address,uint8)":"dc937e1c","delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)":"f713d8a8","getDelegateeByType(address,uint8)":"6f50458d","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"f1cc432a","getPowerAtBlock(address,uint256,uint8)":"c2ffbb91","getPowerCurrent(address,uint8)":"b2f4201d","getTotalRewardsBalance(address)":"8dbefee2","getUserAssetData(address,address)":"3373ee4c","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e","stakerRewardsToClaim(address)":"7e90d7ef","stakersCooldowns(address)":"091030c3","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldownSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeWindow\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardsVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"distributionDuration\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Cooldown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegatedPowerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COOLDOWN_SECONDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_BY_TYPE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_REVISION\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKED_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_aaveGovernance\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_votingSnapshots\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_votingSnapshotsCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"}],\"internalType\":\"struct DistributionTypes.AssetConfigInput[]\",\"name\":\"assetsConfigInput\",\"type\":\"tuple[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"delegateByType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateByTypeBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getDelegateeByType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCooldownTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReceive\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBalance\",\"type\":\"uint256\"}],\"name\":\"getNextCooldownTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getTotalRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerRewardsToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakersCooldowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimRewards(address,uint256)\":{\"details\":\"Claims an `amount` of `REWARD_TOKEN` to the address `to`\",\"params\":{\"amount\":\"Amount to stake*\",\"to\":\"Address to stake for\"}},\"configureAssets((uint128,uint256,address)[])\":{\"details\":\"Configures the distribution of rewards for a list of assets\",\"params\":{\"assetsConfigInput\":\"The list of configurations to apply*\"}},\"cooldown()\":{\"details\":\"Activates the cooldown period to unstake - It can't be called if the user is not staking*\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"delegates all the powers to a specific user\",\"params\":{\"delegatee\":\"the user to which the power will be delegated*\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates power from signatory to `delegatee`\",\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegateByType(address,uint8)\":{\"details\":\"delegates one specific power to a delegatee\",\"params\":{\"delegatee\":\"the user which delegated power has changed\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\"}},\"delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates power from signatory to `delegatee`\",\"params\":{\"delegatee\":\"The address to delegate votes to\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getDelegateeByType(address,uint8)\":{\"details\":\"returns the delegatee of an user\",\"params\":{\"delegator\":\"the address of the delegator*\"}},\"getNextCooldownTimestamp(uint256,uint256,address,uint256)\":{\"details\":\"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \\\"worse\\\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0\",\"params\":{\"amountToReceive\":\"Amount\",\"fromCooldownTimestamp\":\"Cooldown timestamp of the sender\",\"toAddress\":\"Address of the recipient\",\"toBalance\":\"Current balance of the receiver\"},\"returns\":{\"_0\":\"The new cooldown timestamp*\"}},\"getPowerAtBlock(address,uint256,uint8)\":{\"details\":\"returns the delegated power of a user at a certain block\",\"params\":{\"user\":\"the user*\"}},\"getPowerCurrent(address,uint8)\":{\"details\":\"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot\",\"params\":{\"user\":\"the user*\"}},\"getTotalRewardsBalance(address)\":{\"details\":\"Return the total rewards pending to claim by an staker\",\"params\":{\"staker\":\"The staker address\"},\"returns\":{\"_0\":\"The rewards\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Called by the proxy contract*\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\",\"params\":{\"deadline\":\"the deadline timestamp, type(uint256).max for no deadline\",\"owner\":\"the owner of the funds\",\"r\":\"signature param\",\"s\":\"signature param\",\"spender\":\"the spender\",\"v\":\"signature param\",\"value\":\"the amount\"}},\"redeem(address,uint256)\":{\"details\":\"Redeems staked tokens, and stop earning rewards\",\"params\":{\"amount\":\"Amount to redeem*\",\"to\":\"Address to redeem to\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"StakedAaveV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DELEGATE_BY_TYPE_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"REWARDS_VAULT()\":{\"notice\":\"Address to pull from the rewards, needs to have approved this contract\"},\"UNSTAKE_WINDOW()\":{\"notice\":\"Seconds available to redeem once the cooldown period is fullfilled\"}},\"notice\":\"StakedTokenV2 with AAVE token as staked token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/stake/StakedAaveV2.sol\":\"StakedAaveV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IGovernancePowerDelegationToken {\\n  \\n  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\\n\\n  /**\\n   * @dev emitted when a user delegates to another\\n   * @param delegator the delegator\\n   * @param delegatee the delegatee\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegateChanged(\\n    address indexed delegator,\\n    address indexed delegatee,\\n    DelegationType delegationType\\n  );\\n\\n  /**\\n   * @dev emitted when an action changes the delegated power of a user\\n   * @param user the user which delegated power has changed\\n   * @param amount the amount of delegated power for the user\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external virtual;\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (address);\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external virtual view returns (uint256);\\n \\n  /**\\n  * @dev returns the total supply at a certain block number\\n  **/\\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\\n}\",\"keccak256\":\"0x82d63f935980041a1fa0cd3a166d5b26695f114214a6e26c01dbd9df4c17400b\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\",\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\"},\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\",\"keccak256\":\"0x291b3f5f85cf723a515eccae8471ac99b93817d8d8f7151a5a99e13c09587e33\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\"},\"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {SafeMath} from '../../open-zeppelin/SafeMath.sol';\\nimport {ERC20} from '../../open-zeppelin/ERC20.sol';\\nimport {\\n  IGovernancePowerDelegationToken\\n} from '../../interfaces/IGovernancePowerDelegationToken.sol';\\n\\n/**\\n * @notice implementation of the AAVE token contract\\n * @author Aave\\n */\\nabstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {\\n  using SafeMath for uint256;\\n  /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(\\n    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  bytes32 public constant DELEGATE_TYPEHASH = keccak256(\\n    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  /// @dev snapshot of a value on a specific block, used for votes\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  /**\\n   * @dev delegates one specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external override {\\n    _delegateByType(msg.sender, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external override {\\n    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);\\n    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);\\n  }\\n\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (address)\\n  {\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    return _getDelegatee(delegator, delegates);\\n  }\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (uint256)\\n  {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);\\n  }\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external override view returns (uint256) {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);\\n  }\\n\\n  /**\\n   * @dev returns the total supply at a certain block number\\n   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum\\n   * In this initial implementation with no AAVE minting, simply returns the current supply\\n   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future\\n   **/\\n  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {\\n    return super.totalSupply();\\n  }\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _delegateByType(\\n    address delegator,\\n    address delegatee,\\n    DelegationType delegationType\\n  ) internal {\\n    require(delegatee != address(0), 'INVALID_DELEGATEE');\\n\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    uint256 delegatorBalance = balanceOf(delegator);\\n\\n    address previousDelegatee = _getDelegatee(delegator, delegates);\\n\\n    delegates[delegator] = delegatee;\\n\\n    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);\\n    emit DelegateChanged(delegator, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev moves delegated power from one user to another\\n   * @param from the user from which delegated power is moved\\n   * @param to the user that will receive the delegated power\\n   * @param amount the amount of delegated power to be moved\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _moveDelegatesByType(\\n    address from,\\n    address to,\\n    uint256 amount,\\n    DelegationType delegationType\\n  ) internal {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    if (from != address(0)) {\\n      uint256 previous = 0;\\n      uint256 fromSnapshotsCount = snapshotsCounts[from];\\n\\n      if (fromSnapshotsCount != 0) {\\n        previous = snapshots[from][fromSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(from);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        from,\\n        uint128(previous),\\n        uint128(previous.sub(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(from, previous.sub(amount), delegationType);\\n    }\\n    if (to != address(0)) {\\n      uint256 previous = 0;\\n      uint256 toSnapshotsCount = snapshotsCounts[to];\\n      if (toSnapshotsCount != 0) {\\n        previous = snapshots[to][toSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(to);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        to,\\n        uint128(previous),\\n        uint128(previous.add(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(to, previous.add(amount), delegationType);\\n    }\\n  }\\n\\n  /**\\n   * @dev searches a snapshot by block number. Uses binary search.\\n   * @param snapshots the snapshots mapping\\n   * @param snapshotsCounts the number of snapshots\\n   * @param user the user for which the snapshot is being searched\\n   * @param blockNumber the block number being searched\\n   **/\\n  function _searchByBlockNumber(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address user,\\n    uint256 blockNumber\\n  ) internal view returns (uint256) {\\n    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');\\n\\n    uint256 snapshotsCount = snapshotsCounts[user];\\n\\n    if (snapshotsCount == 0) {\\n      return balanceOf(user);\\n    }\\n\\n    // First check most recent balance\\n    if (snapshots[user][snapshotsCount - 1].blockNumber <= blockNumber) {\\n      return snapshots[user][snapshotsCount - 1].value;\\n    }\\n\\n    // Next check implicit zero balance\\n    if (snapshots[user][0].blockNumber > blockNumber) {\\n      return 0;\\n    }\\n\\n    uint256 lower = 0;\\n    uint256 upper = snapshotsCount - 1;\\n    while (upper > lower) {\\n      uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n      Snapshot memory snapshot = snapshots[user][center];\\n      if (snapshot.blockNumber == blockNumber) {\\n        return snapshot.value;\\n      } else if (snapshot.blockNumber < blockNumber) {\\n        lower = center;\\n      } else {\\n        upper = center - 1;\\n      }\\n    }\\n    return snapshots[user][lower].value;\\n  }\\n\\n  /**\\n   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type\\n   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,\\n   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts\\n   * who inherit from this to provide access to the delegation data by overriding this method.\\n   * @param delegationType the type of delegation\\n   **/\\n  function _getDelegationDataByType(DelegationType delegationType)\\n    internal\\n    virtual\\n    view\\n    returns (\\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\\n      mapping(address => uint256) storage, //snapshots count\\n      mapping(address => address) storage //delegatees list\\n    );\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerSnapshotsCount = snapshotsCounts[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerSnapshotsCount != 0 &&\\n      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);\\n      snapshotsCounts[owner] = ownerSnapshotsCount + 1;\\n    }\\n  }\\n\\n  /**\\n   * @dev returns the user delegatee. If a user never performed any delegation,\\n   * his delegated address will be 0x0. In that case we simply return the user itself\\n   * @param delegator the address of the user for which return the delegatee\\n   * @param delegates the array of delegates for a particular type of delegation\\n   **/\\n  function _getDelegatee(address delegator, mapping(address => address) storage delegates)\\n    internal\\n    view\\n    returns (address)\\n  {\\n    address previousDelegatee = delegates[delegator];\\n\\n    if (previousDelegatee == address(0)) {\\n      return delegator;\\n    }\\n\\n    return previousDelegatee;\\n  }\\n}\\n\",\"keccak256\":\"0x866ad035070a7ec3551303a27b2089b372cb4ac393c985d6896678cad8be6662\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external;\\n}\\n\",\"keccak256\":\"0xb9f57138a1840eea2b01e686f7fcfc296a631ba602c9404b70752ecb8f86f8db\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IStakedAave.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedAave {\\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x757fb8a77394148520347549d7d339f5902e4beb113db528788e2d44b0bb7289\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {ERC20} from '../lib/ERC20.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {\\n  GovernancePowerDelegationERC20\\n} from '@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol';\\n\\n/**\\n * @title ERC20WithSnapshot\\n * @notice ERC20 including snapshots of balances on transfer-related actions\\n * @author Aave\\n **/\\nabstract contract GovernancePowerWithSnapshot is GovernancePowerDelegationERC20 {\\n  using SafeMath for uint256;\\n\\n  /**\\n   * @dev The following storage layout points to the prior StakedToken.sol implementation:\\n   * _snapshots => _votingSnapshots\\n   * _snapshotsCounts =>  _votingSnapshotsCounts\\n   * _aaveGovernance => _aaveGovernance\\n   */\\n  mapping(address => mapping(uint256 => Snapshot)) public _votingSnapshots;\\n  mapping(address => uint256) public _votingSnapshotsCounts;\\n\\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\\n  /// to control all potential reentrancies by calling back the this contract\\n  ITransferHook public _aaveGovernance;\\n\\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\\n    _aaveGovernance = aaveGovernance;\\n  }\\n}\\n\",\"keccak256\":\"0xac61858e050c12b7fa21543c4fc86e9fa2065f4607b74d3d2ce79b73e88e5c4c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/AaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\n/**\\n * @title AaveDistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract AaveDistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint128 emissionPerSecond;\\n    uint128 lastUpdateTimestamp;\\n    uint256 index;\\n    mapping(address => uint256) users;\\n  }\\n\\n  uint256 public immutable DISTRIBUTION_END;\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n\\n  constructor(address emissionManager, uint256 distributionDuration) public {\\n    DISTRIBUTION_END = block.timestamp.add(distributionDuration);\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /**\\n   * @dev Configures the distribution of rewards for a list of assets\\n   * @param assetsConfigInput The list of configurations to apply\\n   **/\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external\\n    override\\n  {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address underlyingAsset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, assetConfig.emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      assetConfig.index = newIndex;\\n      emit AssetIndexUpdated(underlyingAsset, newIndex);\\n    }\\n\\n    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)).div(10**uint256(PRECISION));\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= DISTRIBUTION_END\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > DISTRIBUTION_END ? DISTRIBUTION_END : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n\\n  /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n  function getUserAssetData(address user, address asset) public view returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n}\\n\",\"keccak256\":\"0x1f639ee1fe125ee2122aefd7b849b54d548b3dd7623280ae216320e98f2c6d3c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/StakedAaveV2.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {StakedTokenV2} from './StakedTokenV2.sol';\\n\\n/**\\n * @title StakedAaveV2\\n * @notice StakedTokenV2 with AAVE token as staked token\\n * @author Aave\\n **/\\ncontract StakedAaveV2 is StakedTokenV2 {\\n  string internal constant NAME = 'Staked Aave';\\n  string internal constant SYMBOL = 'stkAAVE';\\n  uint8 internal constant DECIMALS = 18;\\n\\n  constructor(\\n    IERC20 stakedToken,\\n    IERC20 rewardToken,\\n    uint256 cooldownSeconds,\\n    uint256 unstakeWindow,\\n    address rewardsVault,\\n    address emissionManager,\\n    uint128 distributionDuration,\\n    address governance\\n  )\\n    public\\n    StakedTokenV2(\\n      stakedToken,\\n      rewardToken,\\n      cooldownSeconds,\\n      unstakeWindow,\\n      rewardsVault,\\n      emissionManager,\\n      distributionDuration,\\n      NAME,\\n      SYMBOL,\\n      DECIMALS,\\n      governance\\n    )\\n  {}\\n}\\n\",\"keccak256\":\"0xe1f5f6af72633fbaa8077952c69c18beeeecb0ed46d1700d7dc736165dc644ce\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/StakedTokenV2.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {ERC20} from '@aave/aave-token/contracts/open-zeppelin/ERC20.sol';\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IStakedAave} from '../interfaces/IStakedAave.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {SafeERC20} from '../lib/SafeERC20.sol';\\n\\nimport {VersionedInitializable} from '../utils/VersionedInitializable.sol';\\nimport {AaveDistributionManager} from './AaveDistributionManager.sol';\\nimport {GovernancePowerWithSnapshot} from '../lib/GovernancePowerWithSnapshot.sol';\\n\\n/**\\n * @title StakedToken\\n * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\\n * @author Aave\\n **/\\ncontract StakedTokenV2 is\\n  IStakedAave,\\n  GovernancePowerWithSnapshot,\\n  VersionedInitializable,\\n  AaveDistributionManager\\n{\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  /// @dev Start of Storage layout from StakedToken v1\\n  uint256 public constant REVISION = 2;\\n\\n  IERC20 public immutable STAKED_TOKEN;\\n  IERC20 public immutable REWARD_TOKEN;\\n  uint256 public immutable COOLDOWN_SECONDS;\\n\\n  /// @notice Seconds available to redeem once the cooldown period is fullfilled\\n  uint256 public immutable UNSTAKE_WINDOW;\\n\\n  /// @notice Address to pull from the rewards, needs to have approved this contract\\n  address public immutable REWARDS_VAULT;\\n\\n  mapping(address => uint256) public stakerRewardsToClaim;\\n  mapping(address => uint256) public stakersCooldowns;\\n\\n  /// @dev End of Storage layout from StakedToken v1\\n\\n  /// @dev To see the voting mappings, go to GovernancePowerWithSnapshot.sol\\n  mapping(address => address) internal _votingDelegates;\\n\\n  mapping(address => mapping(uint256 => Snapshot)) internal _propositionPowerSnapshots;\\n  mapping(address => uint256) internal _propositionPowerSnapshotsCounts;\\n  mapping(address => address) internal _propositionPowerDelegates;\\n\\n  bytes32 public DOMAIN_SEPARATOR;\\n  bytes public constant EIP712_REVISION = bytes('1');\\n  bytes32 internal constant EIP712_DOMAIN =\\n    keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)');\\n  bytes32 public constant PERMIT_TYPEHASH =\\n    keccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');\\n\\n  /// @dev owner => next valid nonce to submit with permit()\\n  mapping(address => uint256) public _nonces;\\n\\n  event Staked(address indexed from, address indexed onBehalfOf, uint256 amount);\\n  event Redeem(address indexed from, address indexed to, uint256 amount);\\n\\n  event RewardsAccrued(address user, uint256 amount);\\n  event RewardsClaimed(address indexed from, address indexed to, uint256 amount);\\n\\n  event Cooldown(address indexed user);\\n\\n  constructor(\\n    IERC20 stakedToken,\\n    IERC20 rewardToken,\\n    uint256 cooldownSeconds,\\n    uint256 unstakeWindow,\\n    address rewardsVault,\\n    address emissionManager,\\n    uint128 distributionDuration,\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals,\\n    address governance\\n  ) public ERC20(name, symbol) AaveDistributionManager(emissionManager, distributionDuration) {\\n    STAKED_TOKEN = stakedToken;\\n    REWARD_TOKEN = rewardToken;\\n    COOLDOWN_SECONDS = cooldownSeconds;\\n    UNSTAKE_WINDOW = unstakeWindow;\\n    REWARDS_VAULT = rewardsVault;\\n    _aaveGovernance = ITransferHook(governance);\\n    ERC20._setupDecimals(decimals);\\n  }\\n\\n  /**\\n   * @dev Called by the proxy contract\\n   **/\\n  function initialize() external initializer {\\n    uint256 chainId;\\n\\n    //solium-disable-next-line\\n    assembly {\\n      chainId := chainid()\\n    }\\n\\n    DOMAIN_SEPARATOR = keccak256(\\n      abi.encode(\\n        EIP712_DOMAIN,\\n        keccak256(bytes(name())),\\n        keccak256(EIP712_REVISION),\\n        chainId,\\n        address(this)\\n      )\\n    );\\n  }\\n\\n  function stake(address onBehalfOf, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    uint256 balanceOfUser = balanceOf(onBehalfOf);\\n\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(onBehalfOf, address(this), balanceOfUser, totalSupply());\\n    if (accruedRewards != 0) {\\n      emit RewardsAccrued(onBehalfOf, accruedRewards);\\n      stakerRewardsToClaim[onBehalfOf] = stakerRewardsToClaim[onBehalfOf].add(accruedRewards);\\n    }\\n\\n    stakersCooldowns[onBehalfOf] = getNextCooldownTimestamp(0, amount, onBehalfOf, balanceOfUser);\\n\\n    _mint(onBehalfOf, amount);\\n    IERC20(STAKED_TOKEN).safeTransferFrom(msg.sender, address(this), amount);\\n\\n    emit Staked(msg.sender, onBehalfOf, amount);\\n  }\\n\\n  /**\\n   * @dev Redeems staked tokens, and stop earning rewards\\n   * @param to Address to redeem to\\n   * @param amount Amount to redeem\\n   **/\\n  function redeem(address to, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    //solium-disable-next-line\\n    uint256 cooldownStartTimestamp = stakersCooldowns[msg.sender];\\n    require(\\n      block.timestamp > cooldownStartTimestamp.add(COOLDOWN_SECONDS),\\n      'INSUFFICIENT_COOLDOWN'\\n    );\\n    require(\\n      block.timestamp.sub(cooldownStartTimestamp.add(COOLDOWN_SECONDS)) <= UNSTAKE_WINDOW,\\n      'UNSTAKE_WINDOW_FINISHED'\\n    );\\n    uint256 balanceOfMessageSender = balanceOf(msg.sender);\\n\\n    uint256 amountToRedeem = (amount > balanceOfMessageSender) ? balanceOfMessageSender : amount;\\n\\n    _updateCurrentUnclaimedRewards(msg.sender, balanceOfMessageSender, true);\\n\\n    _burn(msg.sender, amountToRedeem);\\n\\n    if (balanceOfMessageSender.sub(amountToRedeem) == 0) {\\n      stakersCooldowns[msg.sender] = 0;\\n    }\\n\\n    IERC20(STAKED_TOKEN).safeTransfer(to, amountToRedeem);\\n\\n    emit Redeem(msg.sender, to, amountToRedeem);\\n  }\\n\\n  /**\\n   * @dev Activates the cooldown period to unstake\\n   * - It can't be called if the user is not staking\\n   **/\\n  function cooldown() external override {\\n    require(balanceOf(msg.sender) != 0, 'INVALID_BALANCE_ON_COOLDOWN');\\n    //solium-disable-next-line\\n    stakersCooldowns[msg.sender] = block.timestamp;\\n\\n    emit Cooldown(msg.sender);\\n  }\\n\\n  /**\\n   * @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\\n   * @param to Address to stake for\\n   * @param amount Amount to stake\\n   **/\\n  function claimRewards(address to, uint256 amount) external override {\\n    uint256 newTotalRewards =\\n      _updateCurrentUnclaimedRewards(msg.sender, balanceOf(msg.sender), false);\\n    uint256 amountToClaim = (amount == type(uint256).max) ? newTotalRewards : amount;\\n\\n    stakerRewardsToClaim[msg.sender] = newTotalRewards.sub(amountToClaim, 'INVALID_AMOUNT');\\n\\n    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);\\n\\n    emit RewardsClaimed(msg.sender, to, amountToClaim);\\n  }\\n\\n  /**\\n   * @dev Internal ERC20 _transfer of the tokenized staked tokens\\n   * @param from Address to transfer from\\n   * @param to Address to transfer to\\n   * @param amount Amount to transfer\\n   **/\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    uint256 balanceOfFrom = balanceOf(from);\\n    // Sender\\n    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);\\n\\n    // Recipient\\n    if (from != to) {\\n      uint256 balanceOfTo = balanceOf(to);\\n      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);\\n\\n      uint256 previousSenderCooldown = stakersCooldowns[from];\\n      stakersCooldowns[to] = getNextCooldownTimestamp(\\n        previousSenderCooldown,\\n        amount,\\n        to,\\n        balanceOfTo\\n      );\\n      // if cooldown was set and whole balance of sender was transferred - clear cooldown\\n      if (balanceOfFrom == amount && previousSenderCooldown != 0) {\\n        stakersCooldowns[from] = 0;\\n      }\\n    }\\n\\n    super._transfer(from, to, amount);\\n  }\\n\\n  /**\\n   * @dev Updates the user state related with his accrued rewards\\n   * @param user Address of the user\\n   * @param userBalance The current balance of the user\\n   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\\n   * @return The unclaimed rewards that were added to the total accrued\\n   **/\\n  function _updateCurrentUnclaimedRewards(\\n    address user,\\n    uint256 userBalance,\\n    bool updateStorage\\n  ) internal returns (uint256) {\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(user, address(this), userBalance, totalSupply());\\n    uint256 unclaimedRewards = stakerRewardsToClaim[user].add(accruedRewards);\\n\\n    if (accruedRewards != 0) {\\n      if (updateStorage) {\\n        stakerRewardsToClaim[user] = unclaimedRewards;\\n      }\\n      emit RewardsAccrued(user, accruedRewards);\\n    }\\n\\n    return unclaimedRewards;\\n  }\\n\\n  /**\\n   * @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\\n   *  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient\\n   *  - Weighted average of from/to cooldown timestamps if:\\n   *    # The sender doesn't have the cooldown activated (timestamp 0).\\n   *    # The sender timestamp is expired\\n   *    # The sender has a \\\"worse\\\" timestamp\\n   *  - If the receiver's cooldown timestamp expired (too old), the next is 0\\n   * @param fromCooldownTimestamp Cooldown timestamp of the sender\\n   * @param amountToReceive Amount\\n   * @param toAddress Address of the recipient\\n   * @param toBalance Current balance of the receiver\\n   * @return The new cooldown timestamp\\n   **/\\n  function getNextCooldownTimestamp(\\n    uint256 fromCooldownTimestamp,\\n    uint256 amountToReceive,\\n    address toAddress,\\n    uint256 toBalance\\n  ) public view returns (uint256) {\\n    uint256 toCooldownTimestamp = stakersCooldowns[toAddress];\\n    if (toCooldownTimestamp == 0) {\\n      return 0;\\n    }\\n\\n    uint256 minimalValidCooldownTimestamp =\\n      block.timestamp.sub(COOLDOWN_SECONDS).sub(UNSTAKE_WINDOW);\\n\\n    if (minimalValidCooldownTimestamp > toCooldownTimestamp) {\\n      toCooldownTimestamp = 0;\\n    } else {\\n      uint256 fromCooldownTimestamp =\\n        (minimalValidCooldownTimestamp > fromCooldownTimestamp)\\n          ? block.timestamp\\n          : fromCooldownTimestamp;\\n\\n      if (fromCooldownTimestamp < toCooldownTimestamp) {\\n        return toCooldownTimestamp;\\n      } else {\\n        toCooldownTimestamp = (\\n          amountToReceive.mul(fromCooldownTimestamp).add(toBalance.mul(toCooldownTimestamp))\\n        )\\n          .div(amountToReceive.add(toBalance));\\n      }\\n    }\\n    return toCooldownTimestamp;\\n  }\\n\\n  /**\\n   * @dev Return the total rewards pending to claim by an staker\\n   * @param staker The staker address\\n   * @return The rewards\\n   */\\n  function getTotalRewardsBalance(address staker) external view returns (uint256) {\\n    DistributionTypes.UserStakeInput[] memory userStakeInputs =\\n      new DistributionTypes.UserStakeInput[](1);\\n    userStakeInputs[0] = DistributionTypes.UserStakeInput({\\n      underlyingAsset: address(this),\\n      stakedByUser: balanceOf(staker),\\n      totalStaked: totalSupply()\\n    });\\n    return stakerRewardsToClaim[staker].add(_getUnclaimedRewards(staker, userStakeInputs));\\n  }\\n\\n  /**\\n   * @dev returns the revision of the implementation contract\\n   * @return The revision\\n   */\\n  function getRevision() internal pure override returns (uint256) {\\n    return REVISION;\\n  }\\n\\n  /**\\n   * @dev implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\\n   * @param owner the owner of the funds\\n   * @param spender the spender\\n   * @param value the amount\\n   * @param deadline the deadline timestamp, type(uint256).max for no deadline\\n   * @param v signature param\\n   * @param s signature param\\n   * @param r signature param\\n   */\\n\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external {\\n    require(owner != address(0), 'INVALID_OWNER');\\n    //solium-disable-next-line\\n    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\\n    uint256 currentValidNonce = _nonces[owner];\\n    bytes32 digest =\\n      keccak256(\\n        abi.encodePacked(\\n          '\\\\x19\\\\x01',\\n          DOMAIN_SEPARATOR,\\n          keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))\\n        )\\n      );\\n\\n    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\\n    _nonces[owner] = currentValidNonce.add(1);\\n    _approve(owner, spender, value);\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\\n   * - On _transfer, it writes snapshots for both \\\"from\\\" and \\\"to\\\"\\n   * - On _mint, only for _to\\n   * - On _burn, only for _from\\n   * @param from the from address\\n   * @param to the to address\\n   * @param amount the amount to transfer\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    address votingFromDelegatee = _votingDelegates[from];\\n    address votingToDelegatee = _votingDelegates[to];\\n\\n    if (votingFromDelegatee == address(0)) {\\n      votingFromDelegatee = from;\\n    }\\n    if (votingToDelegatee == address(0)) {\\n      votingToDelegatee = to;\\n    }\\n\\n    _moveDelegatesByType(\\n      votingFromDelegatee,\\n      votingToDelegatee,\\n      amount,\\n      DelegationType.VOTING_POWER\\n    );\\n\\n    address propPowerFromDelegatee = _propositionPowerDelegates[from];\\n    address propPowerToDelegatee = _propositionPowerDelegates[to];\\n\\n    if (propPowerFromDelegatee == address(0)) {\\n      propPowerFromDelegatee = from;\\n    }\\n    if (propPowerToDelegatee == address(0)) {\\n      propPowerToDelegatee = to;\\n    }\\n\\n    _moveDelegatesByType(\\n      propPowerFromDelegatee,\\n      propPowerToDelegatee,\\n      amount,\\n      DelegationType.PROPOSITION_POWER\\n    );\\n\\n    // caching the aave governance address to avoid multiple state loads\\n    ITransferHook aaveGovernance = _aaveGovernance;\\n    if (aaveGovernance != ITransferHook(0)) {\\n      aaveGovernance.onTransfer(from, to, amount);\\n    }\\n  }\\n\\n  function _getDelegationDataByType(DelegationType delegationType)\\n    internal\\n    view\\n    override\\n    returns (\\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\\n      mapping(address => uint256) storage, //snapshots count\\n      mapping(address => address) storage //delegatees list\\n    )\\n  {\\n    if (delegationType == DelegationType.VOTING_POWER) {\\n      return (_votingSnapshots, _votingSnapshotsCounts, _votingDelegates);\\n    } else {\\n      return (\\n        _propositionPowerSnapshots,\\n        _propositionPowerSnapshotsCounts,\\n        _propositionPowerDelegates\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Delegates power from signatory to `delegatee`\\n   * @param delegatee The address to delegate votes to\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   * @param nonce The contract state required to match the signature\\n   * @param expiry The time at which to expire the signature\\n   * @param v The recovery byte of the signature\\n   * @param r Half of the ECDSA signature pair\\n   * @param s Half of the ECDSA signature pair\\n   */\\n  function delegateByTypeBySig(\\n    address delegatee,\\n    DelegationType delegationType,\\n    uint256 nonce,\\n    uint256 expiry,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public {\\n    bytes32 structHash =\\n      keccak256(\\n        abi.encode(DELEGATE_BY_TYPE_TYPEHASH, delegatee, uint256(delegationType), nonce, expiry)\\n      );\\n    bytes32 digest = keccak256(abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash));\\n    address signatory = ecrecover(digest, v, r, s);\\n    require(signatory != address(0), 'INVALID_SIGNATURE');\\n    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');\\n    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');\\n    _delegateByType(signatory, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev Delegates power from signatory to `delegatee`\\n   * @param delegatee The address to delegate votes to\\n   * @param nonce The contract state required to match the signature\\n   * @param expiry The time at which to expire the signature\\n   * @param v The recovery byte of the signature\\n   * @param r Half of the ECDSA signature pair\\n   * @param s Half of the ECDSA signature pair\\n   */\\n  function delegateBySig(\\n    address delegatee,\\n    uint256 nonce,\\n    uint256 expiry,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public {\\n    bytes32 structHash = keccak256(abi.encode(DELEGATE_TYPEHASH, delegatee, nonce, expiry));\\n    bytes32 digest = keccak256(abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash));\\n    address signatory = ecrecover(digest, v, r, s);\\n    require(signatory != address(0), 'INVALID_SIGNATURE');\\n    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');\\n    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');\\n    _delegateByType(signatory, delegatee, DelegationType.VOTING_POWER);\\n    _delegateByType(signatory, delegatee, DelegationType.PROPOSITION_POWER);\\n  }\\n}\\n\",\"keccak256\":\"0xaaab02803560c6fc01dd578b8045abe5f32f0c2baaa7a0554561a6f783f084b6\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":263,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":269,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":271,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":273,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":275,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":277,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":2687,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_votingSnapshots","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))"},{"astId":2691,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_votingSnapshotsCounts","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2694,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_aaveGovernance","offset":0,"slot":"8","type":"t_contract(ITransferHook)1786"},{"astId":5701,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"lastInitializedRevision","offset":0,"slot":"9","type":"t_uint256"},{"astId":5732,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"______gap","offset":0,"slot":"10","type":"t_array(t_uint256)50_storage"},{"astId":3095,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"assets","offset":0,"slot":"60","type":"t_mapping(t_address,t_struct(AssetData)3084_storage)"},{"astId":4508,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"stakerRewardsToClaim","offset":0,"slot":"61","type":"t_mapping(t_address,t_uint256)"},{"astId":4512,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"stakersCooldowns","offset":0,"slot":"62","type":"t_mapping(t_address,t_uint256)"},{"astId":4517,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_votingDelegates","offset":0,"slot":"63","type":"t_mapping(t_address,t_address)"},{"astId":4523,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_propositionPowerSnapshots","offset":0,"slot":"64","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))"},{"astId":4527,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_propositionPowerSnapshotsCounts","offset":0,"slot":"65","type":"t_mapping(t_address,t_uint256)"},{"astId":4531,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_propositionPowerDelegates","offset":0,"slot":"66","type":"t_mapping(t_address,t_address)"},{"astId":4533,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"DOMAIN_SEPARATOR","offset":0,"slot":"67","type":"t_bytes32"},{"astId":4554,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"_nonces","offset":0,"slot":"68","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ITransferHook)1786":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Snapshot)977_storage)"},"t_mapping(t_address,t_struct(AssetData)3084_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AaveDistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)3084_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Snapshot)977_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)","numberOfBytes":"32","value":"t_struct(Snapshot)977_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetData)3084_storage":{"encoding":"inplace","label":"struct AaveDistributionManager.AssetData","members":[{"astId":3075,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint128"},{"astId":3077,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"lastUpdateTimestamp","offset":16,"slot":"0","type":"t_uint128"},{"astId":3079,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"index","offset":0,"slot":"1","type":"t_uint256"},{"astId":3083,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"users","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"96"},"t_struct(Snapshot)977_storage":{"encoding":"inplace","label":"struct GovernancePowerDelegationERC20.Snapshot","members":[{"astId":974,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"blockNumber","offset":0,"slot":"0","type":"t_uint128"},{"astId":976,"contract":"@aave/safety-module/contracts/stake/StakedAaveV2.sol:StakedAaveV2","label":"value","offset":16,"slot":"0","type":"t_uint128"}],"numberOfBytes":"32"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"DELEGATE_BY_TYPE_TYPEHASH()":{"notice":"The EIP-712 typehash for the delegation struct used by the contract"},"REWARDS_VAULT()":{"notice":"Address to pull from the rewards, needs to have approved this contract"},"UNSTAKE_WINDOW()":{"notice":"Seconds available to redeem once the cooldown period is fullfilled"}},"notice":"StakedTokenV2 with AAVE token as staked token","version":1}}},"@aave/safety-module/contracts/stake/StakedToken.sol":{"StakedToken":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"stakedToken","type":"address"},{"internalType":"contract IERC20","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"cooldownSeconds","type":"uint256"},{"internalType":"uint256","name":"unstakeWindow","type":"uint256"},{"internalType":"address","name":"rewardsVault","type":"address"},{"internalType":"address","name":"emissionManager","type":"address"},{"internalType":"uint128","name":"distributionDuration","type":"uint128"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"emission","type":"uint256"}],"name":"AssetConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"AssetIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"Cooldown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsAccrued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint128","name":"oldValue","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"newValue","type":"uint128"}],"name":"SnapshotDone","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"UserIndexUpdated","type":"event"},{"inputs":[],"name":"COOLDOWN_SECONDS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISTRIBUTION_END","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMISSION_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARDS_VAULT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARD_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKED_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UNSTAKE_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_aaveGovernance","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_countsSnapshots","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_snapshots","outputs":[{"internalType":"uint128","name":"blockNumber","type":"uint128"},{"internalType":"uint128","name":"value","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"assets","outputs":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint128","name":"lastUpdateTimestamp","type":"uint128"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"address","name":"underlyingAsset","type":"address"}],"internalType":"struct DistributionTypes.AssetConfigInput[]","name":"assetsConfigInput","type":"tuple[]"}],"name":"configureAssets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fromCooldownTimestamp","type":"uint256"},{"internalType":"uint256","name":"amountToReceive","type":"uint256"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"toBalance","type":"uint256"}],"name":"getNextCooldownTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getTotalRewardsBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getUserAssetData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ITransferHook","name":"aaveGovernance","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakerRewardsToClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakersCooldowns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"returns the allowance of spender on the tokens owned by owner","params":{"owner":"the owner of the tokens","spender":"the user allowed to spend the owner's tokens"},"returns":{"_0":"the amount of owner's tokens spender is allowed to spend*"}},"approve(address,uint256)":{"details":"allows spender to spend the tokens owned by msg.sender","params":{"spender":"the user allowed to spend msg.sender tokens"},"returns":{"_0":"true*"}},"balanceOf(address)":{"returns":{"_0":"the balance of the token*"}},"claimRewards(address,uint256)":{"details":"Claims an `amount` of `REWARD_TOKEN` to the address `to`","params":{"amount":"Amount to stake*","to":"Address to stake for"}},"configureAssets((uint128,uint256,address)[])":{"details":"Configures the distribution of rewards for a list of assets","params":{"assetsConfigInput":"The list of configurations to apply*"}},"cooldown()":{"details":"Activates the cooldown period to unstake - It can't be called if the user is not staking*"},"decimals()":{"returns":{"_0":"the decimals of the token*"}},"decreaseAllowance(address,uint256)":{"details":"decreases the allowance of spender to spend msg.sender tokens","params":{"spender":"the user allowed to spend on behalf of msg.sender","subtractedValue":"the amount being subtracted to the allowance"},"returns":{"_0":"true*"}},"getNextCooldownTimestamp(uint256,uint256,address,uint256)":{"details":"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \"worse\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0","params":{"amountToReceive":"Amount","fromCooldownTimestamp":"Cooldown timestamp of the sender","toAddress":"Address of the recipient","toBalance":"Current balance of the receiver"},"returns":{"_0":"The new cooldown timestamp*"}},"getTotalRewardsBalance(address)":{"details":"Return the total rewards pending to claim by an staker","params":{"staker":"The staker address"},"returns":{"_0":"The rewards"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"increaseAllowance(address,uint256)":{"details":"increases the allowance of spender to spend msg.sender tokens","params":{"addedValue":"the amount being added to the allowance","spender":"the user allowed to spend on behalf of msg.sender"},"returns":{"_0":"true*"}},"initialize(address,string,string,uint8)":{"details":"Called by the proxy contract*"},"name()":{"returns":{"_0":"the name of the token*"}},"redeem(address,uint256)":{"details":"Redeems staked tokens, and stop earning rewards","params":{"amount":"Amount to redeem*","to":"Address to redeem to"}},"symbol()":{"returns":{"_0":"the symbol of the token*"}},"totalSupply()":{"returns":{"_0":"the total supply of the token*"}},"transfer(address,uint256)":{"details":"executes a transfer of tokens from msg.sender to recipient","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}},"transferFrom(address,address,uint256)":{"details":"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so","params":{"amount":"the amount of tokens being transferred","recipient":"the recipient of the tokens","sender":"the owner of the tokens"},"returns":{"_0":"true if the transfer succeeds, false otherwise*"}}},"title":"StakedToken","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2708:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:28","statements":[{"nodeType":"YulAssignment","src":"86:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:28"},"nodeType":"YulFunctionCall","src":"95:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:28"}]},{"body":{"nodeType":"YulBlock","src":"171:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:28"},"nodeType":"YulFunctionCall","src":"173:12:28"},"nodeType":"YulExpressionStatement","src":"173:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:28"},"nodeType":"YulFunctionCall","src":"152:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:28"},"nodeType":"YulFunctionCall","src":"148:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:28"},"nodeType":"YulFunctionCall","src":"137:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:28"},"nodeType":"YulFunctionCall","src":"127:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:28"},"nodeType":"YulFunctionCall","src":"120:50:28"},"nodeType":"YulIf","src":"117:2:28"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:28","type":""}],"src":"14:179:28"},{"body":{"nodeType":"YulBlock","src":"264:813:28","statements":[{"body":{"nodeType":"YulBlock","src":"313:24:28","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"322:5:28"},{"name":"array","nodeType":"YulIdentifier","src":"329:5:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"315:6:28"},"nodeType":"YulFunctionCall","src":"315:20:28"},"nodeType":"YulExpressionStatement","src":"315:20:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"292:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:28"},"nodeType":"YulFunctionCall","src":"288:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"307:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"284:3:28"},"nodeType":"YulFunctionCall","src":"284:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"277:6:28"},"nodeType":"YulFunctionCall","src":"277:35:28"},"nodeType":"YulIf","src":"274:2:28"},{"nodeType":"YulVariableDeclaration","src":"346:27:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"366:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"360:5:28"},"nodeType":"YulFunctionCall","src":"360:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"350:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"382:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"400:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"404:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"396:3:28"},"nodeType":"YulFunctionCall","src":"396:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"408:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"392:3:28"},"nodeType":"YulFunctionCall","src":"392:18:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"386:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"437:13:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"439:7:28"},"nodeType":"YulFunctionCall","src":"439:9:28"},"nodeType":"YulExpressionStatement","src":"439:9:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"425:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"433:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"422:2:28"},"nodeType":"YulFunctionCall","src":"422:14:28"},"nodeType":"YulIf","src":"419:2:28"},{"nodeType":"YulVariableDeclaration","src":"459:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"479:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"473:5:28"},"nodeType":"YulFunctionCall","src":"473:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"463:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"491:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"501:4:28","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"495:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"514:71:28","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"540:6:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"556:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"564:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:28"},"nodeType":"YulFunctionCall","src":"552:17:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"575:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"571:3:28"},"nodeType":"YulFunctionCall","src":"571:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"548:3:28"},"nodeType":"YulFunctionCall","src":"548:31:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"536:3:28"},"nodeType":"YulFunctionCall","src":"536:44:28"},{"name":"_2","nodeType":"YulIdentifier","src":"582:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"532:3:28"},"nodeType":"YulFunctionCall","src":"532:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"518:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"644:13:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"646:7:28"},"nodeType":"YulFunctionCall","src":"646:9:28"},"nodeType":"YulExpressionStatement","src":"646:9:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"603:10:28"},{"name":"_1","nodeType":"YulIdentifier","src":"615:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"600:2:28"},"nodeType":"YulFunctionCall","src":"600:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"623:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"635:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"620:2:28"},"nodeType":"YulFunctionCall","src":"620:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"597:2:28"},"nodeType":"YulFunctionCall","src":"597:46:28"},"nodeType":"YulIf","src":"594:2:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"673:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"677:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"666:6:28"},"nodeType":"YulFunctionCall","src":"666:22:28"},"nodeType":"YulExpressionStatement","src":"666:22:28"},{"nodeType":"YulAssignment","src":"697:15:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"706:6:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"697:5:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"728:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"736:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"721:6:28"},"nodeType":"YulFunctionCall","src":"721:22:28"},"nodeType":"YulExpressionStatement","src":"721:22:28"},{"body":{"nodeType":"YulBlock","src":"793:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"802:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"805:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"795:6:28"},"nodeType":"YulFunctionCall","src":"795:12:28"},"nodeType":"YulExpressionStatement","src":"795:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"766:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"774:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:28"},"nodeType":"YulFunctionCall","src":"762:19:28"},{"name":"_2","nodeType":"YulIdentifier","src":"783:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:28"},"nodeType":"YulFunctionCall","src":"758:28:28"},{"name":"end","nodeType":"YulIdentifier","src":"788:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"755:2:28"},"nodeType":"YulFunctionCall","src":"755:37:28"},"nodeType":"YulIf","src":"752:2:28"},{"nodeType":"YulVariableDeclaration","src":"818:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"827:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"822:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"887:87:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"916:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"924:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"912:3:28"},"nodeType":"YulFunctionCall","src":"912:14:28"},{"name":"_2","nodeType":"YulIdentifier","src":"928:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"908:3:28"},"nodeType":"YulFunctionCall","src":"908:23:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"947:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"955:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"943:3:28"},"nodeType":"YulFunctionCall","src":"943:14:28"},{"name":"_2","nodeType":"YulIdentifier","src":"959:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"939:3:28"},"nodeType":"YulFunctionCall","src":"939:23:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"933:5:28"},"nodeType":"YulFunctionCall","src":"933:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"901:6:28"},"nodeType":"YulFunctionCall","src":"901:63:28"},"nodeType":"YulExpressionStatement","src":"901:63:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"848:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"851:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"845:2:28"},"nodeType":"YulFunctionCall","src":"845:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"859:19:28","statements":[{"nodeType":"YulAssignment","src":"861:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"870:1:28"},{"name":"_2","nodeType":"YulIdentifier","src":"873:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"866:3:28"},"nodeType":"YulFunctionCall","src":"866:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"861:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"841:3:28","statements":[]},"src":"837:137:28"},{"body":{"nodeType":"YulBlock","src":"1008:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1037:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"1045:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1033:3:28"},"nodeType":"YulFunctionCall","src":"1033:19:28"},{"name":"_2","nodeType":"YulIdentifier","src":"1054:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1029:3:28"},"nodeType":"YulFunctionCall","src":"1029:28:28"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1022:6:28"},"nodeType":"YulFunctionCall","src":"1022:39:28"},"nodeType":"YulExpressionStatement","src":"1022:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"989:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"992:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"986:2:28"},"nodeType":"YulFunctionCall","src":"986:13:28"},"nodeType":"YulIf","src":"983:2:28"}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"238:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"246:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"254:5:28","type":""}],"src":"198:879:28"},{"body":{"nodeType":"YulBlock","src":"1144:117:28","statements":[{"nodeType":"YulAssignment","src":"1154:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1169:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1163:5:28"},"nodeType":"YulFunctionCall","src":"1163:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1154:5:28"}]},{"body":{"nodeType":"YulBlock","src":"1239:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1248:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1251:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1241:6:28"},"nodeType":"YulFunctionCall","src":"1241:12:28"},"nodeType":"YulExpressionStatement","src":"1241:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1198:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1209:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1224:3:28","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"1229:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1220:3:28"},"nodeType":"YulFunctionCall","src":"1220:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1233:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1216:3:28"},"nodeType":"YulFunctionCall","src":"1216:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1205:3:28"},"nodeType":"YulFunctionCall","src":"1205:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1195:2:28"},"nodeType":"YulFunctionCall","src":"1195:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1188:6:28"},"nodeType":"YulFunctionCall","src":"1188:50:28"},"nodeType":"YulIf","src":"1185:2:28"}]},"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1123:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:28","type":""}],"src":"1082:179:28"},{"body":{"nodeType":"YulBlock","src":"1326:102:28","statements":[{"nodeType":"YulAssignment","src":"1336:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1351:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1345:5:28"},"nodeType":"YulFunctionCall","src":"1345:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1336:5:28"}]},{"body":{"nodeType":"YulBlock","src":"1406:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1418:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1408:6:28"},"nodeType":"YulFunctionCall","src":"1408:12:28"},"nodeType":"YulExpressionStatement","src":"1408:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1380:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1391:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1398:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1387:3:28"},"nodeType":"YulFunctionCall","src":"1387:16:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1377:2:28"},"nodeType":"YulFunctionCall","src":"1377:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1370:6:28"},"nodeType":"YulFunctionCall","src":"1370:35:28"},"nodeType":"YulIf","src":"1367:2:28"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1305:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1316:5:28","type":""}],"src":"1266:162:28"},{"body":{"nodeType":"YulBlock","src":"1715:991:28","statements":[{"body":{"nodeType":"YulBlock","src":"1762:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1771:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"1779:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:28"},"nodeType":"YulFunctionCall","src":"1764:22:28"},"nodeType":"YulExpressionStatement","src":"1764:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1736:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1745:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1732:3:28"},"nodeType":"YulFunctionCall","src":"1732:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1757:3:28","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1728:3:28"},"nodeType":"YulFunctionCall","src":"1728:33:28"},"nodeType":"YulIf","src":"1725:2:28"},{"nodeType":"YulAssignment","src":"1797:52:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1839:9:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1807:31:28"},"nodeType":"YulFunctionCall","src":"1807:42:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1797:6:28"}]},{"nodeType":"YulAssignment","src":"1858:61:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1904:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1915:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1900:3:28"},"nodeType":"YulFunctionCall","src":"1900:18:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1868:31:28"},"nodeType":"YulFunctionCall","src":"1868:51:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1858:6:28"}]},{"nodeType":"YulAssignment","src":"1928:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1948:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1944:3:28"},"nodeType":"YulFunctionCall","src":"1944:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1938:5:28"},"nodeType":"YulFunctionCall","src":"1938:25:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1928:6:28"}]},{"nodeType":"YulAssignment","src":"1972:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1992:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2003:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1988:3:28"},"nodeType":"YulFunctionCall","src":"1988:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1982:5:28"},"nodeType":"YulFunctionCall","src":"1982:25:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1972:6:28"}]},{"nodeType":"YulAssignment","src":"2016:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2062:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2073:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:28"},"nodeType":"YulFunctionCall","src":"2058:19:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2026:31:28"},"nodeType":"YulFunctionCall","src":"2026:52:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2016:6:28"}]},{"nodeType":"YulAssignment","src":"2087:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2133:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2144:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2129:3:28"},"nodeType":"YulFunctionCall","src":"2129:19:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2097:31:28"},"nodeType":"YulFunctionCall","src":"2097:52:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2087:6:28"}]},{"nodeType":"YulAssignment","src":"2158:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2204:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2215:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2200:3:28"},"nodeType":"YulFunctionCall","src":"2200:19:28"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2168:31:28"},"nodeType":"YulFunctionCall","src":"2168:52:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2158:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2229:40:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2253:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2264:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2249:3:28"},"nodeType":"YulFunctionCall","src":"2249:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2243:5:28"},"nodeType":"YulFunctionCall","src":"2243:26:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2233:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2278:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2296:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2300:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2292:3:28"},"nodeType":"YulFunctionCall","src":"2292:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2288:3:28"},"nodeType":"YulFunctionCall","src":"2288:18:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2282:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2333:26:28","statements":[{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"2342:6:28"},{"name":"value7","nodeType":"YulIdentifier","src":"2350:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2335:6:28"},"nodeType":"YulFunctionCall","src":"2335:22:28"},"nodeType":"YulExpressionStatement","src":"2335:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2321:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2329:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2318:2:28"},"nodeType":"YulFunctionCall","src":"2318:14:28"},"nodeType":"YulIf","src":"2315:2:28"},{"nodeType":"YulAssignment","src":"2368:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2413:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2424:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2409:3:28"},"nodeType":"YulFunctionCall","src":"2409:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2433:7:28"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"2378:30:28"},"nodeType":"YulFunctionCall","src":"2378:63:28"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2368:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2450:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2476:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2487:3:28","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2472:3:28"},"nodeType":"YulFunctionCall","src":"2472:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2466:5:28"},"nodeType":"YulFunctionCall","src":"2466:26:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2454:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2521:26:28","statements":[{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"2530:6:28"},{"name":"value8","nodeType":"YulIdentifier","src":"2538:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2523:6:28"},"nodeType":"YulFunctionCall","src":"2523:22:28"},"nodeType":"YulExpressionStatement","src":"2523:22:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2507:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2517:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2504:2:28"},"nodeType":"YulFunctionCall","src":"2504:16:28"},"nodeType":"YulIf","src":"2501:2:28"},{"nodeType":"YulAssignment","src":"2556:75:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2612:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2597:3:28"},"nodeType":"YulFunctionCall","src":"2597:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2623:7:28"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"2566:30:28"},"nodeType":"YulFunctionCall","src":"2566:65:28"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"2556:6:28"}]},{"nodeType":"YulAssignment","src":"2640:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2695:3:28","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:28"},"nodeType":"YulFunctionCall","src":"2680:19:28"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"2650:29:28"},"nodeType":"YulFunctionCall","src":"2650:50:28"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"2640:6:28"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1609:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1620:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1632:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1640:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1648:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1656:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1664:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1672:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1680:6:28","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1688:6:28","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1696:6:28","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1704:6:28","type":""}],"src":"1433:1273:28"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let length := mload(offset)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let _2 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), not(31))), _2)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, _2) }\n        {\n            mstore(add(add(memPtr, i), _2), mload(add(add(offset, i), _2)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(memPtr, length), _2), 0)\n        }\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(128, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(value4, value4) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_t_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_t_uint128_fromMemory(add(headStart, 192))\n        let offset := mload(add(headStart, 224))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value7, value7) }\n        value7 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 256))\n        if gt(offset_1, _1) { revert(value8, value8) }\n        value8 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value9 := abi_decode_t_uint8_fromMemory(add(headStart, 288))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405260006009553480156200001757600080fd5b506040516200373c3803806200373c8339810160408190526200003a91620002f7565b84846001600160801b031684848482828282600390805190602001906200006392919062000161565b5081516200007990600490602085019062000161565b5080600560006101000a81548160ff021916908360ff160217905550505050505050620000b58142620000ff60201b620014f41790919060201c565b608052506001600160601b0319606091821b811660a0529a811b8b1660c05298891b8a1660e05250505061010094909452506101209190915290911b9091166101405250620003e4565b6000828201838110156200015a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b80516001600160a01b03811681146200022557600080fd5b919050565b600082601f8301126200023b578081fd5b81516001600160401b03808211156200025057fe5b6040516020601f8401601f19168201810183811183821017156200027057fe5b806040525081945083825286818588010111156200028d57600080fd5b600092505b83831015620002b1578583018101518284018201529182019162000292565b83831115620002c35760008185840101525b5050505092915050565b80516001600160801b03811681146200022557600080fd5b805160ff811681146200022557600080fd5b6000806000806000806000806000806101408b8d03121562000317578586fd5b620003228b6200020d565b99506200033260208c016200020d565b985060408b0151975060608b015196506200035060808c016200020d565b95506200036060a08c016200020d565b94506200037060c08c01620002cd565b60e08c01519094506001600160401b03808211156200038d578485fd5b6200039b8e838f016200022a565b94506101008d0151915080821115620003b2578384fd5b50620003c18d828e016200022a565b925050620003d36101208c01620002e5565b90509295989b9194979a5092959850565b60805160a05160601c60c05160601c60e05160601c61010051610120516101405160601c6132b76200048560003980610b795280610d1f5250806106415280610924528061132a5250806105e3528061066952806109cb528061134f525080610c1c5280610ce852508061073c52806108ba5280610f86525080611023528061124b525080610b555280612731528061277652806127a352506132b76000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80638dbefee211610145578063adc9772e116100bd578063dd62ed3e1161008c578063f11b818811610071578063f11b81881461045b578063f1cc432a1461047d578063f6d2ee861461049057610241565b8063dd62ed3e14610440578063dde43cba1461045357610241565b8063adc9772e1461040a578063b2a5dbfa1461041d578063c3863ada14610430578063cbcbb5071461043857610241565b806399248ea711610114578063a457c2d7116100f9578063a457c2d7146103dc578063a9059cbb146103ef578063aaf5eb681461040257610241565b806399248ea7146103c15780639a99b4f0146103c957610241565b80638dbefee214610396578063919cd40f146103a9578063946776cd146103b157806395d89b41146103b957610241565b8063313ce567116101d857806370a08231116101a7578063787a08a61161018c578063787a08a6146103685780637e90d7ef146103705780638779588c1461038357610241565b806370a082311461034d57806372b49d631461036057610241565b8063313ce5671461030a5780633373ee4c1461031f578063359c4a9614610332578063395093511461033a57610241565b80631e9a6950116102145780631e9a6950146102ac57806323b872dd146102c15780632acbf823146102d4578063312f6b83146102f557610241565b806306fdde0314610246578063091030c314610264578063095ea7b31461028457806318160ddd146102a4575b600080fd5b61024e6104a3565b60405161025b9190612e97565b60405180910390f35b610277610272366004612c11565b610557565b60405161025b9190613088565b610297610292366004612ca5565b610569565b60405161025b9190612e8c565b610277610587565b6102bf6102ba366004612ca5565b61058d565b005b6102976102cf366004612c65565b6107cf565b6102e76102e2366004612ca5565b610871565b60405161025b929190613038565b6102fd6108b8565b60405161025b9190612e45565b6103126108dc565b60405161025b9190613091565b61027761032d366004612c2d565b6108e5565b610277610922565b610297610348366004612ca5565b610946565b61027761035b366004612c11565b6109a1565b6102776109c9565b6102bf6109ed565b61027761037e366004612c11565b610a66565b610277610391366004612c11565b610a78565b6102776103a4366004612c11565b610a8a565b610277610b53565b6102fd610b77565b61024e610b9b565b6102fd610c1a565b6102bf6103d7366004612ca5565b610c3e565b6102976103ea366004612ca5565b610db0565b6102976103fd366004612ca5565b610e25565b610312610e39565b6102bf610418366004612ca5565b610e3e565b6102bf61042b366004612cd0565b61100b565b6102fd61122d565b6102fd611249565b61027761044e366004612c2d565b61126d565b6102776112a5565b61046e610469366004612c11565b6112aa565b60405161025b9392919061305b565b61027761048b366004612e07565b6112ee565b6102bf61049e366004612d40565b6113f2565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061057d610576611568565b848461156c565b5060015b92915050565b60025490565b806105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b60405180910390fd5b336000908152603e6020526040902054610607817f00000000000000000000000000000000000000000000000000000000000000006114f4565b421161063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f3f565b7f000000000000000000000000000000000000000000000000000000000000000061069461068d837f00000000000000000000000000000000000000000000000000000000000000006114f4565b42906116b3565b11156106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fad565b60006106d7336109a1565b905060008184116106e857836106ea565b815b90506106f8338360016116f5565b5061070333826117b4565b61070d82826116b3565b61072257336000908152603e60205260408120555b61076373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836118fe565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d9836040516107c09190613088565b60405180910390a35050505050565b60006107dc84848461198b565b610866846107e8611568565b610861856040518060600160405280602881526020016131736028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610833611568565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190611a98565b61156c565b5060015b9392505050565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061057d610953611568565b846108618560016000610964611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c1681529252902054906114f4565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109f6336109a1565b610a2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fe4565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b603d6020526000908152604090205481565b60076020526000908152604090205481565b60408051600180825281830190925260009160609190816020015b610aad612af2565b815260200190600190039081610aa557905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610af2856109a1565b8152602001610aff610587565b81525081600081518110610b0f57fe5b602002602001018190525061086a610b278483611b49565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d6020526040902054906114f4565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c5433610c4d336109a1565b60006116f5565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314610c855782610c87565b815b9050610cd3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e5400000000000000000000000000000000000081525084611a989092919063ffffffff16565b336000908152603d6020526040902055610d457f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051610da29190613088565b60405180910390a350505050565b600061057d610dbd611568565b846108618560405180606001604052806025815260200161325d6025913960016000610de7611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190611a98565b600061057d610e32611568565b848461198b565b601281565b80610e75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b6000610e80836109a1565b90506000610e97843084610e92610587565b611d0c565b90508015610f2f577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a768482604051610ed0929190612e66565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d6020526040902054610f0890826114f4565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b610f3c60008486856112ee565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902055610f6c8484611de5565b610fae73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051610da29190613088565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461107a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f76565b60005b81811015611228576000603c600085858581811061109757fe5b90506060020160400160208101906110af9190612c11565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061112e8484848181106110fa57fe5b90506060020160400160208101906111129190612c11565b8286868681811061111f57fe5b90506060020160200135611f16565b5083838381811061113b57fe5b6111519260206060909202019081019150612dd7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061119957fe5b90506060020160400160208101906111b19190612c11565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106111f457fe5b61120a9260206060909202019081019150612dd7565b604051611217919061301b565b60405180910390a25060010161107d565b505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600181565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e6020526040812054806113235760009150506113ea565b60006113797f0000000000000000000000000000000000000000000000000000000000000000611373427f00000000000000000000000000000000000000000000000000000000000000006116b3565b906116b3565b90508181111561138c57600091506113e6565b600087821161139b578761139d565b425b9050828110156113b2578293505050506113ea565b6113e26113bf88876114f4565b6113dc6113cc8887612015565b6113d68b86612015565b906114f4565b90612088565b9250505b5090505b949350505050565b60006113fc6120ca565b90506009548111611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061319b602e913960400191505060405180910390fd5b6009819055604080516020601f880181900481028201810190925286815261149a9188908890819084018382808284376000920191909152506120cf92505050565b6114d984848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120e692505050565b6114e2826120f9565b6114eb8761212d565b50505050505050565b60008282018381101561086a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b73ffffffffffffffffffffffffffffffffffffffff83166115d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061320f6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061310a6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061086a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a98565b600080611706853086610e92610587565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d60205260408120549192509061173a90836114f4565b905081156117ab5783156117715773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7686836040516117a2929190612e66565b60405180910390a15b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131c96021913960400191505060405180910390fd5b61182c82600083612174565b611876816040518060600160405280602281526020016130e86022913973ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546118a990826116b3565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526112289084906122f2565b6000611996846109a1565b90506119a4848260016116f5565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a875760006119e3846109a1565b90506119f1848260016116f5565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902054611a24818587856112ee565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260409020558284148015611a5857508015155b15611a845773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b611a92848484612530565b50505050565b60008184841115611b41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b06578181015183820152602001611aee565b50505050905090810190601f168015611b335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600080805b8351811015611c6f576000603c6000868481518110611b6957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040016000908120600181015481548851929450611bf4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a9088908110611be357fe5b602002602001015160400151612700565b9050611c63611c5c878581518110611c0857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612814565b85906114f4565b93505050600101611b4e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611a929085906122f2565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280611d54888588611f16565b9050808314611dd9578615611d7157611d6e878285612814565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90611dd0908590613088565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611e6757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611e7360008383612174565b600254611e8090826114f4565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611eb390826114f4565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415611f575750905061086a565b8454600090611f7b9084906fffffffffffffffffffffffffffffffff168488612700565b9050828114611fdc578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051611fd39190613088565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b60008261202457506000610581565b8282028284828161203157fe5b041461086a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131526021913960400191505060405180910390fd5b600061086a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612836565b600190565b80516120e2906003906020840190612b29565b5050565b80516120e2906004906020840190612b29565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156121ad57611228565b73ffffffffffffffffffffffffffffffffffffffff8316156121ec5760006121d4846109a1565b90506121ea84826121e581866116b3565b6128b5565b505b73ffffffffffffffffffffffffffffffffffffffff821615612226576000612213836109a1565b905061222483826121e581866114f4565b505b60085473ffffffffffffffffffffffffffffffffffffffff168015611a92578073ffffffffffffffffffffffffffffffffffffffff16634a3931498585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156122d457600080fd5b505af11580156122e8573d6000803e3d6000fd5b5050505050505050565b6123118273ffffffffffffffffffffffffffffffffffffffff16612ab9565b61237c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123e557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123a8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612447576040519150601f19603f3d011682016040523d82523d6000602084013e61244c565b606091505b5091509150816124bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611a92578080602001905160208110156124d957600080fd5b5051611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613233602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831661259c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806131ea6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130c56023913960400191505060405180910390fd5b612613838383612174565b61265d8160405180606001604052806026815260200161312c6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461269990826114f4565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600083158061270d575081155b80612729575042836fffffffffffffffffffffffffffffffff16145b8061276657507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156127725750836113ea565b60007f000000000000000000000000000000000000000000000000000000000000000042116127a157426127c3565b7f00000000000000000000000000000000000000000000000000000000000000005b905060006127e3826fffffffffffffffffffffffffffffffff87166116b3565b9050612809876113d6866113dc670de0b6b3a76400006128038c88612015565b90612015565b979650505050505050565b60006113ea670de0b6b3a76400006113dc61282f86866116b3565b8790612015565b6000818361289f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315611b06578181015183820152602001611aee565b5060008385816128ab57fe5b0495945050505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600760209081526040808320546006909252909120439190811580159061293957506fffffffffffffffffffffffffffffffff83168160006129148560016116b3565b81526020810191909152604001600020546fffffffffffffffffffffffffffffffff16145b15612993578381600061294d8560016116b3565b8152602081019190915260400160002080546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055612a49565b6040805180820182526fffffffffffffffffffffffffffffffff80861682528681166020808401918252600087815290869052939093209151825493518216700100000000000000000000000000000000029082167fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169390931716919091179055612a228260016114f4565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600760205260409020555b6040805173ffffffffffffffffffffffffffffffffffffffff881681526fffffffffffffffffffffffffffffffff808816602083015286168183015290517f2cd3c83ddac2953ee75f53265d9ea4463eaf05030e5459a1b7e63819b7ce88f79181900360600190a1505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113ea575050151592915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612b5f5760008555612ba5565b82601f10612b7857805160ff1916838001178555612ba5565b82800160010185558215612ba5579182015b82811115612ba5578251825591602001919060010190612b8a565b50612bb1929150612bb5565b5090565b5b80821115612bb15760008155600101612bb6565b60008083601f840112612bdb578182fd5b50813567ffffffffffffffff811115612bf2578182fd5b602083019150836020828501011115612c0a57600080fd5b9250929050565b600060208284031215612c22578081fd5b813561086a8161309f565b60008060408385031215612c3f578081fd5b8235612c4a8161309f565b91506020830135612c5a8161309f565b809150509250929050565b600080600060608486031215612c79578081fd5b8335612c848161309f565b92506020840135612c948161309f565b929592945050506040919091013590565b60008060408385031215612cb7578182fd5b8235612cc28161309f565b946020939093013593505050565b60008060208385031215612ce2578182fd5b823567ffffffffffffffff80821115612cf9578384fd5b818501915085601f830112612d0c578384fd5b813581811115612d1a578485fd5b866020606083028501011115612d2e578485fd5b60209290920196919550909350505050565b60008060008060008060808789031215612d58578182fd5b8635612d638161309f565b9550602087013567ffffffffffffffff80821115612d7f578384fd5b612d8b8a838b01612bca565b90975095506040890135915080821115612da3578384fd5b50612db089828a01612bca565b909450925050606087013560ff81168114612dc9578182fd5b809150509295509295509295565b600060208284031215612de8578081fd5b81356fffffffffffffffffffffffffffffffff8116811461086a578182fd5b60008060008060808587031215612e1c578384fd5b84359350602085013592506040850135612e358161309f565b9396929550929360600135925050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015612ec357858101830151858201604001528201612ea7565b81811115612ed45783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b90815260200190565b60ff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146130c157600080fd5b5056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d8eb41ace3f71c07d10b2dea8abe82e4ba8c2b59dc62ec66cbbfedb5f71f2c0264736f6c63430007050033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x373C CODESIZE SUB DUP1 PUSH3 0x373C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x2F7 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 DUP5 DUP5 DUP3 DUP3 DUP3 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x63 SWAP3 SWAP2 SWAP1 PUSH3 0x161 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x79 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x161 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0xB5 DUP2 TIMESTAMP PUSH3 0xFF PUSH1 0x20 SHL PUSH3 0x14F4 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0xA0 MSTORE SWAP11 DUP2 SHL DUP12 AND PUSH1 0xC0 MSTORE SWAP9 DUP10 SHL DUP11 AND PUSH1 0xE0 MSTORE POP POP POP PUSH2 0x100 SWAP5 SWAP1 SWAP5 MSTORE POP PUSH2 0x120 SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 SHL SWAP1 SWAP2 AND PUSH2 0x140 MSTORE POP PUSH3 0x3E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x15A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x199 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1C7 JUMP JUMPDEST POP PUSH3 0x1F2 SWAP3 SWAP2 POP PUSH3 0x1F6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x23B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x250 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x270 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP2 SWAP5 POP DUP4 DUP3 MSTORE DUP7 DUP2 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x2B1 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x292 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x2C3 JUMPI PUSH1 0x0 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x317 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH3 0x322 DUP12 PUSH3 0x20D JUMP JUMPDEST SWAP10 POP PUSH3 0x332 PUSH1 0x20 DUP13 ADD PUSH3 0x20D JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD MLOAD SWAP8 POP PUSH1 0x60 DUP12 ADD MLOAD SWAP7 POP PUSH3 0x350 PUSH1 0x80 DUP13 ADD PUSH3 0x20D JUMP JUMPDEST SWAP6 POP PUSH3 0x360 PUSH1 0xA0 DUP13 ADD PUSH3 0x20D JUMP JUMPDEST SWAP5 POP PUSH3 0x370 PUSH1 0xC0 DUP13 ADD PUSH3 0x2CD JUMP JUMPDEST PUSH1 0xE0 DUP13 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x38D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x39B DUP15 DUP4 DUP16 ADD PUSH3 0x22A JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3B2 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH3 0x3C1 DUP14 DUP3 DUP15 ADD PUSH3 0x22A JUMP JUMPDEST SWAP3 POP POP PUSH3 0x3D3 PUSH2 0x120 DUP13 ADD PUSH3 0x2E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x32B7 PUSH3 0x485 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xB79 MSTORE DUP1 PUSH2 0xD1F MSTORE POP DUP1 PUSH2 0x641 MSTORE DUP1 PUSH2 0x924 MSTORE DUP1 PUSH2 0x132A MSTORE POP DUP1 PUSH2 0x5E3 MSTORE DUP1 PUSH2 0x669 MSTORE DUP1 PUSH2 0x9CB MSTORE DUP1 PUSH2 0x134F MSTORE POP DUP1 PUSH2 0xC1C MSTORE DUP1 PUSH2 0xCE8 MSTORE POP DUP1 PUSH2 0x73C MSTORE DUP1 PUSH2 0x8BA MSTORE DUP1 PUSH2 0xF86 MSTORE POP DUP1 PUSH2 0x1023 MSTORE DUP1 PUSH2 0x124B MSTORE POP DUP1 PUSH2 0xB55 MSTORE DUP1 PUSH2 0x2731 MSTORE DUP1 PUSH2 0x2776 MSTORE DUP1 PUSH2 0x27A3 MSTORE POP PUSH2 0x32B7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x241 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBEFEE2 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF11B8188 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xF6D2EE86 EQ PUSH2 0x490 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x453 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x438 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x402 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x3C9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x787A08A6 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x8779588C EQ PUSH2 0x383 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x360 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x33A JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x1E9A6950 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2ACBF823 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x2F5 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST PUSH2 0x277 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C65 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP3 SWAP2 SWAP1 PUSH2 0x3038 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x277 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH2 0x277 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x312 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD0 JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x122D JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST PUSH2 0x277 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST PUSH2 0x277 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D40 JUMP JUMPDEST PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x530 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x576 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x607 DUP2 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH32 0x0 PUSH2 0x694 PUSH2 0x68D DUP4 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x16B3 JUMP JUMPDEST GT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 CALLER PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x6E8 JUMPI DUP4 PUSH2 0x6EA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x6F8 CALLER DUP4 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH2 0x703 CALLER DUP3 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x70D DUP3 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x722 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x763 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x18FE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP5 DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x866 DUP5 PUSH2 0x7E8 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3173 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x833 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x953 PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x964 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9F6 CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FE4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAAD PUSH2 0x2AF2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAA5 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF2 DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAFF PUSH2 0x587 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB0F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x86A PUSH2 0xB27 DUP5 DUP4 PUSH2 0x1B49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC54 CALLER PUSH2 0xC4D CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0xC85 JUMPI DUP3 PUSH2 0xC87 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0xCD3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1A98 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xD45 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xDBD PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x325D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDE7 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xE32 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE80 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE97 DUP5 ADDRESS DUP5 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED0 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF08 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xF3C PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xF6C DUP5 DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0xFAE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1097 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x112E DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x10FA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x111F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F16 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x113B JUMPI INVALID JUMPDEST PUSH2 0x1151 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1199 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH2 0x120A SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x301B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x107D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1323 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 PUSH32 0x0 PUSH2 0x1373 TIMESTAMP PUSH32 0x0 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x139B JUMPI DUP8 PUSH2 0x139D JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x13E2 PUSH2 0x13BF DUP9 DUP8 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x13DC PUSH2 0x13CC DUP9 DUP8 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x13D6 DUP12 DUP7 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC PUSH2 0x20CA JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x319B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE PUSH2 0x149A SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20CF SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20E6 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14E2 DUP3 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x14EB DUP8 PUSH2 0x212D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x320F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x310A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1706 DUP6 ADDRESS DUP7 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x173A SWAP1 DUP4 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x17AB JUMPI DUP4 ISZERO PUSH2 0x1771 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17A2 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31C9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x182C DUP3 PUSH1 0x0 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30E8 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x18A9 SWAP1 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1228 SWAP1 DUP5 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A4 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A87 JUMPI PUSH1 0x0 PUSH2 0x19E3 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F1 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A24 DUP2 DUP6 DUP8 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x1A58 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1A84 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x1A92 DUP5 DUP5 DUP5 PUSH2 0x2530 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B33 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1C6F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B69 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x1BF4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x1BE3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C63 PUSH2 0x1C5C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2814 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x1B4E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1A92 SWAP1 DUP6 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x1D54 DUP9 DUP6 DUP9 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1DD9 JUMPI DUP7 ISZERO PUSH2 0x1D71 JUMPI PUSH2 0x1D6E DUP8 DUP3 DUP6 PUSH2 0x2814 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x1DD0 SWAP1 DUP6 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1E67 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1E73 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1E80 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1EB3 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x1F57 JUMPI POP SWAP1 POP PUSH2 0x86A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1F7B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x1FDC JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2024 JUMPI POP PUSH1 0x0 PUSH2 0x581 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2031 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3152 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21AD JUMPI PUSH2 0x1228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x21EC JUMPI PUSH1 0x0 PUSH2 0x21D4 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x21EA DUP5 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x28B5 JUMP JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x2226 JUMPI PUSH1 0x0 PUSH2 0x2213 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2224 DUP4 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x14F4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1A92 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A393149 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2311 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x237C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23E5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2447 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x244C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A92 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3233 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x259C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31EA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30C5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2613 DUP4 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x312C PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2699 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x270D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x2729 JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x2766 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x2772 JUMPI POP DUP4 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x27A1 JUMPI TIMESTAMP PUSH2 0x27C3 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27E3 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2809 DUP8 PUSH2 0x13D6 DUP7 PUSH2 0x13DC PUSH8 0xDE0B6B3A7640000 PUSH2 0x2803 DUP13 DUP9 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x2015 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA PUSH8 0xDE0B6B3A7640000 PUSH2 0x13DC PUSH2 0x282F DUP7 DUP7 PUSH2 0x16B3 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x289F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x28AB JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2939 JUMPI POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 PUSH1 0x0 PUSH2 0x2914 DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2993 JUMPI DUP4 DUP2 PUSH1 0x0 PUSH2 0x294D DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP4 MLOAD DUP3 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A22 DUP3 PUSH1 0x1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x2CD3C83DDAC2953EE75F53265D9EA4463EAF05030E5459A1B7E63819B7CE88F7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x13EA JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B5F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B78 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BA5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BA5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B8A JUMP JUMPDEST POP PUSH2 0x2BB1 SWAP3 SWAP2 POP PUSH2 0x2BB5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BDB JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C22 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x86A DUP2 PUSH2 0x309F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C3F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C4A DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C5A DUP2 PUSH2 0x309F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C84 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C94 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CC2 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CF9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D0C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D1A JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2D2E JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D58 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2D63 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D7F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2D8B DUP11 DUP4 DUP12 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DA3 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2DB0 DUP10 DUP3 DUP11 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2DC9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x86A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E1C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2E35 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EC3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2EA7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2ED4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x30C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xD8 0xEB COINBASE 0xAC 0xE3 0xF7 SHR SMOD 0xD1 SIGNEXTEND 0x2D 0xEA DUP11 0xBE DUP3 0xE4 0xBA DUP13 0x2B MSIZE 0xDC PUSH3 0xEC66CB 0xBF 0xED 0xB5 0xF7 0x1F 0x2C MUL PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"811:9346:23:-:0;;;924:1:25;881:44;;1858:584:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2222:15;2239:20;-1:-1:-1;;;;;1068:185:20;2170:4:23;2176:6;2184:8;1171:4:16;1177:6;1185:8;757:4:15;749:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;767:16:15;;;;:7;;:16;;;;;:::i;:::-;;801:8;789:9;;:20;;;;;;;;;;;;;;;;;;650:164;;;1072:125:16;;;1167:41:20;1187:20;1167:15;:19;;;;;;:41;;;;:::i;:::-;1148:60;;-1:-1:-1;;;;;;;1214:34:20;;;;;;;;2269:26:23;;;;;::::2;::::0;2301;;;;;::::2;::::0;-1:-1:-1;;;2333:34:23::2;::::0;;;;-1:-1:-1;2373:30:23::2;::::0;;;;2409:28;;;;;;::::2;::::0;-1:-1:-1;811:9346:23;;913:162:19;971:7;998:5;;;1017:6;;;;1009:46;;;;;-1:-1:-1;;;1009:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;811:9346:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;811:9346:23;;;-1:-1:-1;811:9346:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:28;95:13;;-1:-1:-1;;;;;137:31:28;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:879::-;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;360:13;;-1:-1:-1;;;;;422:14:28;;;419:2;;;439:9;419:2;479;473:9;501:4;575:2;552:17;;-1:-1:-1;;548:31:28;536:44;;532:53;;600:18;;;620:22;;;597:46;594:2;;;646:9;594:2;677:10;673:2;666:22;;706:6;697:15;;736:6;728;721:22;788:3;783:2;774:6;766;762:19;758:28;755:37;752:2;;;805:1;802;795:12;752:2;827:1;818:10;;837:137;851:6;848:1;845:13;837:137;;;943:14;;;939:23;;933:30;912:14;;;908:23;;901:63;866:10;;;;837:137;;;992:6;989:1;986:13;983:2;;;1059:1;1054:2;1045:6;1037;1033:19;1029:28;1022:39;983:2;;;;;264:813;;;;:::o;1082:179::-;1163:13;;-1:-1:-1;;;;;1205:31:28;;1195:42;;1185:2;;1251:1;1248;1241:12;1266:162;1345:13;;1398:4;1387:16;;1377:27;;1367:2;;1418:1;1415;1408:12;1433:1273;;;;;;;;;;;1757:3;1745:9;1736:7;1732:23;1728:33;1725:2;;;1779:6;1771;1764:22;1725:2;1807:42;1839:9;1807:42;:::i;:::-;1797:52;;1868:51;1915:2;1904:9;1900:18;1868:51;:::i;:::-;1858:61;;1959:2;1948:9;1944:18;1938:25;1928:35;;2003:2;1992:9;1988:18;1982:25;1972:35;;2026:52;2073:3;2062:9;2058:19;2026:52;:::i;:::-;2016:62;;2097:52;2144:3;2133:9;2129:19;2097:52;:::i;:::-;2087:62;;2168:52;2215:3;2204:9;2200:19;2168:52;:::i;:::-;2264:3;2249:19;;2243:26;2158:62;;-1:-1:-1;;;;;;2318:14:28;;;2315:2;;;2350:6;2342;2335:22;2315:2;2378:63;2433:7;2424:6;2413:9;2409:22;2378:63;:::i;:::-;2368:73;;2487:3;2476:9;2472:19;2466:26;2450:42;;2517:2;2507:8;2504:16;2501:2;;;2538:6;2530;2523:22;2501:2;;2566:65;2623:7;2612:8;2601:9;2597:24;2566:65;:::i;:::-;2556:75;;;2650:50;2695:3;2684:9;2680:19;2650:50;:::i;:::-;2640:60;;1715:991;;;;;;;;;;;;;:::o;:::-;811:9346:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9592:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"89:303:28","statements":[{"body":{"nodeType":"YulBlock","src":"138:30:28","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"147:8:28"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"157:8:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"140:6:28"},"nodeType":"YulFunctionCall","src":"140:26:28"},"nodeType":"YulExpressionStatement","src":"140:26:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"117:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"125:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"113:3:28"},"nodeType":"YulFunctionCall","src":"113:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"132:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"109:3:28"},"nodeType":"YulFunctionCall","src":"109:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"102:6:28"},"nodeType":"YulFunctionCall","src":"102:35:28"},"nodeType":"YulIf","src":"99:2:28"},{"nodeType":"YulAssignment","src":"177:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"200:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"187:12:28"},"nodeType":"YulFunctionCall","src":"187:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"177:6:28"}]},{"body":{"nodeType":"YulBlock","src":"250:30:28","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"259:8:28"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"269:8:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"252:6:28"},"nodeType":"YulFunctionCall","src":"252:26:28"},"nodeType":"YulExpressionStatement","src":"252:26:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"222:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"230:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"219:2:28"},"nodeType":"YulFunctionCall","src":"219:30:28"},"nodeType":"YulIf","src":"216:2:28"},{"nodeType":"YulAssignment","src":"289:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"305:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"313:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"301:3:28"},"nodeType":"YulFunctionCall","src":"301:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"289:8:28"}]},{"body":{"nodeType":"YulBlock","src":"370:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"382:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"372:6:28"},"nodeType":"YulFunctionCall","src":"372:12:28"},"nodeType":"YulExpressionStatement","src":"372:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"341:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"349:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"337:3:28"},"nodeType":"YulFunctionCall","src":"337:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"358:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"333:3:28"},"nodeType":"YulFunctionCall","src":"333:30:28"},{"name":"end","nodeType":"YulIdentifier","src":"365:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"330:2:28"},"nodeType":"YulFunctionCall","src":"330:39:28"},"nodeType":"YulIf","src":"327:2:28"}]},"name":"abi_decode_t_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"68:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"78:6:28","type":""}],"src":"14:378:28"},{"body":{"nodeType":"YulBlock","src":"467:189:28","statements":[{"body":{"nodeType":"YulBlock","src":"513:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"522:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"530:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"515:6:28"},"nodeType":"YulFunctionCall","src":"515:22:28"},"nodeType":"YulExpressionStatement","src":"515:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"488:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"484:3:28"},"nodeType":"YulFunctionCall","src":"484:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"509:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"480:3:28"},"nodeType":"YulFunctionCall","src":"480:32:28"},"nodeType":"YulIf","src":"477:2:28"},{"nodeType":"YulVariableDeclaration","src":"548:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"561:12:28"},"nodeType":"YulFunctionCall","src":"561:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"552:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"593:26:28"},"nodeType":"YulFunctionCall","src":"593:33:28"},"nodeType":"YulExpressionStatement","src":"593:33:28"},{"nodeType":"YulAssignment","src":"635:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"645:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"635:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"433:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"444:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"456:6:28","type":""}],"src":"397:259:28"},{"body":{"nodeType":"YulBlock","src":"748:315:28","statements":[{"body":{"nodeType":"YulBlock","src":"794:26:28","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"803:6:28"},{"name":"value1","nodeType":"YulIdentifier","src":"811:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"796:6:28"},"nodeType":"YulFunctionCall","src":"796:22:28"},"nodeType":"YulExpressionStatement","src":"796:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"769:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"778:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"765:3:28"},"nodeType":"YulFunctionCall","src":"765:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"790:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"761:3:28"},"nodeType":"YulFunctionCall","src":"761:32:28"},"nodeType":"YulIf","src":"758:2:28"},{"nodeType":"YulVariableDeclaration","src":"829:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"855:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"842:12:28"},"nodeType":"YulFunctionCall","src":"842:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"833:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"901:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"874:26:28"},"nodeType":"YulFunctionCall","src":"874:33:28"},"nodeType":"YulExpressionStatement","src":"874:33:28"},{"nodeType":"YulAssignment","src":"916:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"926:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"916:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"940:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"972:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"983:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"968:3:28"},"nodeType":"YulFunctionCall","src":"968:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"955:12:28"},"nodeType":"YulFunctionCall","src":"955:32:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"944:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1023:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"996:26:28"},"nodeType":"YulFunctionCall","src":"996:35:28"},"nodeType":"YulExpressionStatement","src":"996:35:28"},{"nodeType":"YulAssignment","src":"1040:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1050:7:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1040:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"706:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"717:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"729:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"737:6:28","type":""}],"src":"661:402:28"},{"body":{"nodeType":"YulBlock","src":"1172:366:28","statements":[{"body":{"nodeType":"YulBlock","src":"1218:26:28","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1227:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"1235:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1220:6:28"},"nodeType":"YulFunctionCall","src":"1220:22:28"},"nodeType":"YulExpressionStatement","src":"1220:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1202:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1189:3:28"},"nodeType":"YulFunctionCall","src":"1189:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1185:3:28"},"nodeType":"YulFunctionCall","src":"1185:32:28"},"nodeType":"YulIf","src":"1182:2:28"},{"nodeType":"YulVariableDeclaration","src":"1253:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1279:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1266:12:28"},"nodeType":"YulFunctionCall","src":"1266:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1257:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1298:26:28"},"nodeType":"YulFunctionCall","src":"1298:33:28"},"nodeType":"YulExpressionStatement","src":"1298:33:28"},{"nodeType":"YulAssignment","src":"1340:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1350:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1340:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1364:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1396:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1407:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:28"},"nodeType":"YulFunctionCall","src":"1392:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1379:12:28"},"nodeType":"YulFunctionCall","src":"1379:32:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1368:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1447:7:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1420:26:28"},"nodeType":"YulFunctionCall","src":"1420:35:28"},"nodeType":"YulExpressionStatement","src":"1420:35:28"},{"nodeType":"YulAssignment","src":"1464:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1474:7:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1464:6:28"}]},{"nodeType":"YulAssignment","src":"1490:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1528:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:28"},"nodeType":"YulFunctionCall","src":"1513:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1500:12:28"},"nodeType":"YulFunctionCall","src":"1500:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1490:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1122:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1133:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1145:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1153:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1161:6:28","type":""}],"src":"1068:470:28"},{"body":{"nodeType":"YulBlock","src":"1630:240:28","statements":[{"body":{"nodeType":"YulBlock","src":"1676:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1685:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1693:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1678:6:28"},"nodeType":"YulFunctionCall","src":"1678:22:28"},"nodeType":"YulExpressionStatement","src":"1678:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1651:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1660:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1647:3:28"},"nodeType":"YulFunctionCall","src":"1647:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1672:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1643:3:28"},"nodeType":"YulFunctionCall","src":"1643:32:28"},"nodeType":"YulIf","src":"1640:2:28"},{"nodeType":"YulVariableDeclaration","src":"1711:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1737:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1724:12:28"},"nodeType":"YulFunctionCall","src":"1724:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1715:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1783:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1756:26:28"},"nodeType":"YulFunctionCall","src":"1756:33:28"},"nodeType":"YulExpressionStatement","src":"1756:33:28"},{"nodeType":"YulAssignment","src":"1798:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1808:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1798:6:28"}]},{"nodeType":"YulAssignment","src":"1822:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1849:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1860:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1845:3:28"},"nodeType":"YulFunctionCall","src":"1845:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1832:12:28"},"nodeType":"YulFunctionCall","src":"1832:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1822:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1588:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1599:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1611:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1619:6:28","type":""}],"src":"1543:327:28"},{"body":{"nodeType":"YulBlock","src":"2016:563:28","statements":[{"body":{"nodeType":"YulBlock","src":"2062:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2071:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2079:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2064:6:28"},"nodeType":"YulFunctionCall","src":"2064:22:28"},"nodeType":"YulExpressionStatement","src":"2064:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2037:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2046:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2033:3:28"},"nodeType":"YulFunctionCall","src":"2033:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2058:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2029:3:28"},"nodeType":"YulFunctionCall","src":"2029:32:28"},"nodeType":"YulIf","src":"2026:2:28"},{"nodeType":"YulVariableDeclaration","src":"2097:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2124:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2111:12:28"},"nodeType":"YulFunctionCall","src":"2111:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2101:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2143:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2153:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2147:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2198:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2207:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2215:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2200:6:28"},"nodeType":"YulFunctionCall","src":"2200:22:28"},"nodeType":"YulExpressionStatement","src":"2200:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2186:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2194:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2183:2:28"},"nodeType":"YulFunctionCall","src":"2183:14:28"},"nodeType":"YulIf","src":"2180:2:28"},{"nodeType":"YulVariableDeclaration","src":"2233:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2247:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2258:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2243:3:28"},"nodeType":"YulFunctionCall","src":"2243:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2237:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2313:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2322:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2330:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2315:6:28"},"nodeType":"YulFunctionCall","src":"2315:22:28"},"nodeType":"YulExpressionStatement","src":"2315:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2292:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2296:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:28"},"nodeType":"YulFunctionCall","src":"2288:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2284:3:28"},"nodeType":"YulFunctionCall","src":"2284:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2277:6:28"},"nodeType":"YulFunctionCall","src":"2277:35:28"},"nodeType":"YulIf","src":"2274:2:28"},{"nodeType":"YulVariableDeclaration","src":"2348:30:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2375:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2362:12:28"},"nodeType":"YulFunctionCall","src":"2362:16:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2352:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2405:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2414:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2422:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2407:6:28"},"nodeType":"YulFunctionCall","src":"2407:22:28"},"nodeType":"YulExpressionStatement","src":"2407:22:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2393:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2401:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2390:2:28"},"nodeType":"YulFunctionCall","src":"2390:14:28"},"nodeType":"YulIf","src":"2387:2:28"},{"body":{"nodeType":"YulBlock","src":"2492:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2501:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2509:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2494:6:28"},"nodeType":"YulFunctionCall","src":"2494:22:28"},"nodeType":"YulExpressionStatement","src":"2494:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2454:2:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2462:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:28","type":"","value":"0x60"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2458:3:28"},"nodeType":"YulFunctionCall","src":"2458:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:28"},"nodeType":"YulFunctionCall","src":"2450:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"2478:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2446:3:28"},"nodeType":"YulFunctionCall","src":"2446:35:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2483:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2443:2:28"},"nodeType":"YulFunctionCall","src":"2443:48:28"},"nodeType":"YulIf","src":"2440:2:28"},{"nodeType":"YulAssignment","src":"2527:21:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2541:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2537:3:28"},"nodeType":"YulFunctionCall","src":"2537:11:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2527:6:28"}]},{"nodeType":"YulAssignment","src":"2557:16:28","value":{"name":"length","nodeType":"YulIdentifier","src":"2567:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2557:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1974:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1985:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1997:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2005:6:28","type":""}],"src":"1875:704:28"},{"body":{"nodeType":"YulBlock","src":"2765:909:28","statements":[{"body":{"nodeType":"YulBlock","src":"2812:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2821:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"2829:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2814:6:28"},"nodeType":"YulFunctionCall","src":"2814:22:28"},"nodeType":"YulExpressionStatement","src":"2814:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2786:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2795:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2782:3:28"},"nodeType":"YulFunctionCall","src":"2782:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2807:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2778:3:28"},"nodeType":"YulFunctionCall","src":"2778:33:28"},"nodeType":"YulIf","src":"2775:2:28"},{"nodeType":"YulVariableDeclaration","src":"2847:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2873:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2860:12:28"},"nodeType":"YulFunctionCall","src":"2860:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2851:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2919:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2892:26:28"},"nodeType":"YulFunctionCall","src":"2892:33:28"},"nodeType":"YulExpressionStatement","src":"2892:33:28"},{"nodeType":"YulAssignment","src":"2934:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2944:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2934:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2958:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2989:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3000:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2985:3:28"},"nodeType":"YulFunctionCall","src":"2985:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2972:12:28"},"nodeType":"YulFunctionCall","src":"2972:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2962:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3013:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3023:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3017:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3068:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3077:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"3085:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3070:6:28"},"nodeType":"YulFunctionCall","src":"3070:22:28"},"nodeType":"YulExpressionStatement","src":"3070:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3056:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3064:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3053:2:28"},"nodeType":"YulFunctionCall","src":"3053:14:28"},"nodeType":"YulIf","src":"3050:2:28"},{"nodeType":"YulVariableDeclaration","src":"3103:87:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3162:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3173:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3158:3:28"},"nodeType":"YulFunctionCall","src":"3158:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3182:7:28"}],"functionName":{"name":"abi_decode_t_string_calldata","nodeType":"YulIdentifier","src":"3129:28:28"},"nodeType":"YulFunctionCall","src":"3129:61:28"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"3107:8:28","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"3117:8:28","type":""}]},{"nodeType":"YulAssignment","src":"3199:18:28","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3209:8:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3199:6:28"}]},{"nodeType":"YulAssignment","src":"3226:18:28","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3236:8:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3226:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3253:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3286:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3297:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3282:3:28"},"nodeType":"YulFunctionCall","src":"3282:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3269:12:28"},"nodeType":"YulFunctionCall","src":"3269:32:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3257:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3330:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3339:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"3347:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3332:6:28"},"nodeType":"YulFunctionCall","src":"3332:22:28"},"nodeType":"YulExpressionStatement","src":"3332:22:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3316:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3326:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3313:2:28"},"nodeType":"YulFunctionCall","src":"3313:16:28"},"nodeType":"YulIf","src":"3310:2:28"},{"nodeType":"YulVariableDeclaration","src":"3365:89:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3435:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:28"},"nodeType":"YulFunctionCall","src":"3420:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3446:7:28"}],"functionName":{"name":"abi_decode_t_string_calldata","nodeType":"YulIdentifier","src":"3391:28:28"},"nodeType":"YulFunctionCall","src":"3391:63:28"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"3369:8:28","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"3379:8:28","type":""}]},{"nodeType":"YulAssignment","src":"3463:18:28","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3473:8:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3463:6:28"}]},{"nodeType":"YulAssignment","src":"3490:18:28","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3500:8:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3490:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3517:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3549:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3560:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3545:3:28"},"nodeType":"YulFunctionCall","src":"3545:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3532:12:28"},"nodeType":"YulFunctionCall","src":"3532:32:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3521:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3616:26:28","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"3625:6:28"},{"name":"value5","nodeType":"YulIdentifier","src":"3633:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3618:6:28"},"nodeType":"YulFunctionCall","src":"3618:22:28"},"nodeType":"YulExpressionStatement","src":"3618:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3586:7:28"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3599:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"3608:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3595:3:28"},"nodeType":"YulFunctionCall","src":"3595:18:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3583:2:28"},"nodeType":"YulFunctionCall","src":"3583:31:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3576:6:28"},"nodeType":"YulFunctionCall","src":"3576:39:28"},"nodeType":"YulIf","src":"3573:2:28"},{"nodeType":"YulAssignment","src":"3651:17:28","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3661:7:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3651:6:28"}]}]},"name":"abi_decode_tuple_t_contract$_ITransferHook_$1786t_string_calldata_ptrt_string_calldata_ptrt_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2691:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2702:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2714:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2722:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2730:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2738:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2746:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2754:6:28","type":""}],"src":"2584:1090:28"},{"body":{"nodeType":"YulBlock","src":"3749:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"3795:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3804:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3812:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3797:6:28"},"nodeType":"YulFunctionCall","src":"3797:22:28"},"nodeType":"YulExpressionStatement","src":"3797:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3770:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3779:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3766:3:28"},"nodeType":"YulFunctionCall","src":"3766:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3791:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3762:3:28"},"nodeType":"YulFunctionCall","src":"3762:32:28"},"nodeType":"YulIf","src":"3759:2:28"},{"nodeType":"YulVariableDeclaration","src":"3830:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3856:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3843:12:28"},"nodeType":"YulFunctionCall","src":"3843:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3834:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3944:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3953:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3961:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3946:6:28"},"nodeType":"YulFunctionCall","src":"3946:22:28"},"nodeType":"YulExpressionStatement","src":"3946:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3888:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3899:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3906:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3895:3:28"},"nodeType":"YulFunctionCall","src":"3895:46:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3885:2:28"},"nodeType":"YulFunctionCall","src":"3885:57:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3878:6:28"},"nodeType":"YulFunctionCall","src":"3878:65:28"},"nodeType":"YulIf","src":"3875:2:28"},{"nodeType":"YulAssignment","src":"3979:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"3989:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3979:6:28"}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3715:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3726:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3738:6:28","type":""}],"src":"3679:321:28"},{"body":{"nodeType":"YulBlock","src":"4126:343:28","statements":[{"body":{"nodeType":"YulBlock","src":"4173:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4182:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4190:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4175:6:28"},"nodeType":"YulFunctionCall","src":"4175:22:28"},"nodeType":"YulExpressionStatement","src":"4175:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4147:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4143:3:28"},"nodeType":"YulFunctionCall","src":"4143:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4168:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4139:3:28"},"nodeType":"YulFunctionCall","src":"4139:33:28"},"nodeType":"YulIf","src":"4136:2:28"},{"nodeType":"YulAssignment","src":"4208:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4231:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4218:12:28"},"nodeType":"YulFunctionCall","src":"4218:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4208:6:28"}]},{"nodeType":"YulAssignment","src":"4250:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4288:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:28"},"nodeType":"YulFunctionCall","src":"4273:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4260:12:28"},"nodeType":"YulFunctionCall","src":"4260:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4250:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"4301:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4331:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4342:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4327:3:28"},"nodeType":"YulFunctionCall","src":"4327:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4314:12:28"},"nodeType":"YulFunctionCall","src":"4314:32:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4305:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4382:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4355:26:28"},"nodeType":"YulFunctionCall","src":"4355:33:28"},"nodeType":"YulExpressionStatement","src":"4355:33:28"},{"nodeType":"YulAssignment","src":"4397:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"4407:5:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4397:6:28"}]},{"nodeType":"YulAssignment","src":"4421:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4448:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4459:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4444:3:28"},"nodeType":"YulFunctionCall","src":"4444:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4431:12:28"},"nodeType":"YulFunctionCall","src":"4431:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4421:6:28"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4068:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4079:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4091:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4099:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4107:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4115:6:28","type":""}],"src":"4005:464:28"},{"body":{"nodeType":"YulBlock","src":"4575:125:28","statements":[{"nodeType":"YulAssignment","src":"4585:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4608:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:28"},"nodeType":"YulFunctionCall","src":"4593:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4585:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4642:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4650:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4638:3:28"},"nodeType":"YulFunctionCall","src":"4638:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4620:6:28"},"nodeType":"YulFunctionCall","src":"4620:74:28"},"nodeType":"YulExpressionStatement","src":"4620:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4544:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4555:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4566:4:28","type":""}],"src":"4474:226:28"},{"body":{"nodeType":"YulBlock","src":"4834:168:28","statements":[{"nodeType":"YulAssignment","src":"4844:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:28"},"nodeType":"YulFunctionCall","src":"4852:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4844:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4901:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4909:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4897:3:28"},"nodeType":"YulFunctionCall","src":"4897:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4879:6:28"},"nodeType":"YulFunctionCall","src":"4879:74:28"},"nodeType":"YulExpressionStatement","src":"4879:74:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4973:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4969:3:28"},"nodeType":"YulFunctionCall","src":"4969:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"4989:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4962:6:28"},"nodeType":"YulFunctionCall","src":"4962:34:28"},"nodeType":"YulExpressionStatement","src":"4962:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4806:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4814:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4825:4:28","type":""}],"src":"4705:297:28"},{"body":{"nodeType":"YulBlock","src":"5102:92:28","statements":[{"nodeType":"YulAssignment","src":"5112:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:28"},"nodeType":"YulFunctionCall","src":"5120:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5112:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5179:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5172:6:28"},"nodeType":"YulFunctionCall","src":"5172:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5165:6:28"},"nodeType":"YulFunctionCall","src":"5165:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:28"},"nodeType":"YulFunctionCall","src":"5147:41:28"},"nodeType":"YulExpressionStatement","src":"5147:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5071:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5082:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5093:4:28","type":""}],"src":"5007:187:28"},{"body":{"nodeType":"YulBlock","src":"5315:125:28","statements":[{"nodeType":"YulAssignment","src":"5325:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5337:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5348:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5333:3:28"},"nodeType":"YulFunctionCall","src":"5333:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5325:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5367:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5382:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5390:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5378:3:28"},"nodeType":"YulFunctionCall","src":"5378:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5360:6:28"},"nodeType":"YulFunctionCall","src":"5360:74:28"},"nodeType":"YulExpressionStatement","src":"5360:74:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5284:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5295:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5306:4:28","type":""}],"src":"5199:241:28"},{"body":{"nodeType":"YulBlock","src":"5568:125:28","statements":[{"nodeType":"YulAssignment","src":"5578:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5590:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5601:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5586:3:28"},"nodeType":"YulFunctionCall","src":"5586:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5578:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5635:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5643:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:28"},"nodeType":"YulFunctionCall","src":"5631:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5613:6:28"},"nodeType":"YulFunctionCall","src":"5613:74:28"},"nodeType":"YulExpressionStatement","src":"5613:74:28"}]},"name":"abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5537:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5548:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5559:4:28","type":""}],"src":"5445:248:28"},{"body":{"nodeType":"YulBlock","src":"5819:541:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5829:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5839:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5833:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5868:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5850:6:28"},"nodeType":"YulFunctionCall","src":"5850:21:28"},"nodeType":"YulExpressionStatement","src":"5850:21:28"},{"nodeType":"YulVariableDeclaration","src":"5880:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5900:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5894:5:28"},"nodeType":"YulFunctionCall","src":"5894:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5884:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5927:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5938:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:28"},"nodeType":"YulFunctionCall","src":"5923:18:28"},{"name":"length","nodeType":"YulIdentifier","src":"5943:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5916:6:28"},"nodeType":"YulFunctionCall","src":"5916:34:28"},"nodeType":"YulExpressionStatement","src":"5916:34:28"},{"nodeType":"YulVariableDeclaration","src":"5959:13:28","value":{"name":"tail","nodeType":"YulIdentifier","src":"5968:4:28"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5963:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6031:90:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:28"},{"name":"i","nodeType":"YulIdentifier","src":"6071:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:28"},"nodeType":"YulFunctionCall","src":"6056:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"6075:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6052:3:28"},"nodeType":"YulFunctionCall","src":"6052:26:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6094:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"6102:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:28"},"nodeType":"YulFunctionCall","src":"6090:14:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6106:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6086:3:28"},"nodeType":"YulFunctionCall","src":"6086:23:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6080:5:28"},"nodeType":"YulFunctionCall","src":"6080:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6045:6:28"},"nodeType":"YulFunctionCall","src":"6045:66:28"},"nodeType":"YulExpressionStatement","src":"6045:66:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5992:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"5995:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5989:2:28"},"nodeType":"YulFunctionCall","src":"5989:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6003:19:28","statements":[{"nodeType":"YulAssignment","src":"6005:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6014:1:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6017:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6010:3:28"},"nodeType":"YulFunctionCall","src":"6010:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6005:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5985:3:28","statements":[]},"src":"5981:140:28"},{"body":{"nodeType":"YulBlock","src":"6155:69:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:28"},{"name":"length","nodeType":"YulIdentifier","src":"6195:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6180:3:28"},"nodeType":"YulFunctionCall","src":"6180:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"6204:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6176:3:28"},"nodeType":"YulFunctionCall","src":"6176:31:28"},{"name":"tail","nodeType":"YulIdentifier","src":"6209:4:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6169:6:28"},"nodeType":"YulFunctionCall","src":"6169:45:28"},"nodeType":"YulExpressionStatement","src":"6169:45:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6136:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"6139:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6133:2:28"},"nodeType":"YulFunctionCall","src":"6133:13:28"},"nodeType":"YulIf","src":"6130:2:28"},{"nodeType":"YulAssignment","src":"6233:121:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6249:9:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6268:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6276:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6264:3:28"},"nodeType":"YulFunctionCall","src":"6264:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"6281:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6260:3:28"},"nodeType":"YulFunctionCall","src":"6260:88:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6245:3:28"},"nodeType":"YulFunctionCall","src":"6245:104:28"},{"kind":"number","nodeType":"YulLiteral","src":"6351:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6241:3:28"},"nodeType":"YulFunctionCall","src":"6241:113:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6233:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5788:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5799:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5810:4:28","type":""}],"src":"5698:662:28"},{"body":{"nodeType":"YulBlock","src":"6539:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6556:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6567:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6549:6:28"},"nodeType":"YulFunctionCall","src":"6549:21:28"},"nodeType":"YulExpressionStatement","src":"6549:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6590:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6601:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6586:3:28"},"nodeType":"YulFunctionCall","src":"6586:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6606:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6579:6:28"},"nodeType":"YulFunctionCall","src":"6579:30:28"},"nodeType":"YulExpressionStatement","src":"6579:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6629:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6640:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6625:3:28"},"nodeType":"YulFunctionCall","src":"6625:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"6645:21:28","type":"","value":"INVALID_ZERO_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6618:6:28"},"nodeType":"YulFunctionCall","src":"6618:49:28"},"nodeType":"YulExpressionStatement","src":"6618:49:28"},{"nodeType":"YulAssignment","src":"6676:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6688:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6699:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6684:3:28"},"nodeType":"YulFunctionCall","src":"6684:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6676:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6516:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6530:4:28","type":""}],"src":"6365:343:28"},{"body":{"nodeType":"YulBlock","src":"6887:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6904:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6915:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6897:6:28"},"nodeType":"YulFunctionCall","src":"6897:21:28"},"nodeType":"YulExpressionStatement","src":"6897:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6938:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6949:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6934:3:28"},"nodeType":"YulFunctionCall","src":"6934:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6954:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6927:6:28"},"nodeType":"YulFunctionCall","src":"6927:30:28"},"nodeType":"YulExpressionStatement","src":"6927:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6988:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:28"},"nodeType":"YulFunctionCall","src":"6973:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"6993:23:28","type":"","value":"INSUFFICIENT_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6966:6:28"},"nodeType":"YulFunctionCall","src":"6966:51:28"},"nodeType":"YulExpressionStatement","src":"6966:51:28"},{"nodeType":"YulAssignment","src":"7026:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7038:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7049:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7034:3:28"},"nodeType":"YulFunctionCall","src":"7034:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7026:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6864:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6878:4:28","type":""}],"src":"6713:345:28"},{"body":{"nodeType":"YulBlock","src":"7237:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7265:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7247:6:28"},"nodeType":"YulFunctionCall","src":"7247:21:28"},"nodeType":"YulExpressionStatement","src":"7247:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7288:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7299:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7284:3:28"},"nodeType":"YulFunctionCall","src":"7284:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7304:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:28"},"nodeType":"YulFunctionCall","src":"7277:30:28"},"nodeType":"YulExpressionStatement","src":"7277:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7327:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7338:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:28"},"nodeType":"YulFunctionCall","src":"7323:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"7343:23:28","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7316:6:28"},"nodeType":"YulFunctionCall","src":"7316:51:28"},"nodeType":"YulExpressionStatement","src":"7316:51:28"},{"nodeType":"YulAssignment","src":"7376:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7388:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7399:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7384:3:28"},"nodeType":"YulFunctionCall","src":"7384:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7376:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7214:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7228:4:28","type":""}],"src":"7063:345:28"},{"body":{"nodeType":"YulBlock","src":"7587:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7604:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7615:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7597:6:28"},"nodeType":"YulFunctionCall","src":"7597:21:28"},"nodeType":"YulExpressionStatement","src":"7597:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7638:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7634:3:28"},"nodeType":"YulFunctionCall","src":"7634:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7654:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7627:6:28"},"nodeType":"YulFunctionCall","src":"7627:30:28"},"nodeType":"YulExpressionStatement","src":"7627:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7677:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7688:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7673:3:28"},"nodeType":"YulFunctionCall","src":"7673:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"7693:25:28","type":"","value":"UNSTAKE_WINDOW_FINISHED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7666:6:28"},"nodeType":"YulFunctionCall","src":"7666:53:28"},"nodeType":"YulExpressionStatement","src":"7666:53:28"},{"nodeType":"YulAssignment","src":"7728:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7751:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7736:3:28"},"nodeType":"YulFunctionCall","src":"7736:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7728:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7564:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7578:4:28","type":""}],"src":"7413:347:28"},{"body":{"nodeType":"YulBlock","src":"7939:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7956:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7967:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7949:6:28"},"nodeType":"YulFunctionCall","src":"7949:21:28"},"nodeType":"YulExpressionStatement","src":"7949:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7990:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8001:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7986:3:28"},"nodeType":"YulFunctionCall","src":"7986:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8006:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7979:6:28"},"nodeType":"YulFunctionCall","src":"7979:30:28"},"nodeType":"YulExpressionStatement","src":"7979:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8040:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8025:3:28"},"nodeType":"YulFunctionCall","src":"8025:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"8045:29:28","type":"","value":"INVALID_BALANCE_ON_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8018:6:28"},"nodeType":"YulFunctionCall","src":"8018:57:28"},"nodeType":"YulExpressionStatement","src":"8018:57:28"},{"nodeType":"YulAssignment","src":"8084:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8096:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8107:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8092:3:28"},"nodeType":"YulFunctionCall","src":"8092:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8084:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7916:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7930:4:28","type":""}],"src":"7765:351:28"},{"body":{"nodeType":"YulBlock","src":"8222:117:28","statements":[{"nodeType":"YulAssignment","src":"8232:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8244:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8255:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8240:3:28"},"nodeType":"YulFunctionCall","src":"8240:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8232:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8274:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8289:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8297:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8285:3:28"},"nodeType":"YulFunctionCall","src":"8285:47:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8267:6:28"},"nodeType":"YulFunctionCall","src":"8267:66:28"},"nodeType":"YulExpressionStatement","src":"8267:66:28"}]},"name":"abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8191:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8202:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8213:4:28","type":""}],"src":"8121:218:28"},{"body":{"nodeType":"YulBlock","src":"8473:190:28","statements":[{"nodeType":"YulAssignment","src":"8483:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8495:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8506:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8491:3:28"},"nodeType":"YulFunctionCall","src":"8491:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8483:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"8518:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8528:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8522:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8578:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8593:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8601:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8589:3:28"},"nodeType":"YulFunctionCall","src":"8589:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8571:6:28"},"nodeType":"YulFunctionCall","src":"8571:34:28"},"nodeType":"YulExpressionStatement","src":"8571:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8625:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8621:3:28"},"nodeType":"YulFunctionCall","src":"8621:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8645:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8653:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8641:3:28"},"nodeType":"YulFunctionCall","src":"8641:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8614:6:28"},"nodeType":"YulFunctionCall","src":"8614:43:28"},"nodeType":"YulExpressionStatement","src":"8614:43:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8434:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8445:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8453:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8464:4:28","type":""}],"src":"8344:319:28"},{"body":{"nodeType":"YulBlock","src":"8825:233:28","statements":[{"nodeType":"YulAssignment","src":"8835:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8847:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8858:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8843:3:28"},"nodeType":"YulFunctionCall","src":"8843:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8835:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"8870:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8880:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8874:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8930:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8945:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8953:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8941:3:28"},"nodeType":"YulFunctionCall","src":"8941:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8923:6:28"},"nodeType":"YulFunctionCall","src":"8923:34:28"},"nodeType":"YulExpressionStatement","src":"8923:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8977:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8988:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8973:3:28"},"nodeType":"YulFunctionCall","src":"8973:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8997:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9005:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8993:3:28"},"nodeType":"YulFunctionCall","src":"8993:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8966:6:28"},"nodeType":"YulFunctionCall","src":"8966:43:28"},"nodeType":"YulExpressionStatement","src":"8966:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9040:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9025:3:28"},"nodeType":"YulFunctionCall","src":"9025:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9045:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9018:6:28"},"nodeType":"YulFunctionCall","src":"9018:34:28"},"nodeType":"YulExpressionStatement","src":"9018:34:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8778:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8789:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8797:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8805:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8816:4:28","type":""}],"src":"8668:390:28"},{"body":{"nodeType":"YulBlock","src":"9164:76:28","statements":[{"nodeType":"YulAssignment","src":"9174:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9186:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9197:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9182:3:28"},"nodeType":"YulFunctionCall","src":"9182:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9174:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9216:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"9227:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9209:6:28"},"nodeType":"YulFunctionCall","src":"9209:25:28"},"nodeType":"YulExpressionStatement","src":"9209:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9133:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9144:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9155:4:28","type":""}],"src":"9063:177:28"},{"body":{"nodeType":"YulBlock","src":"9342:87:28","statements":[{"nodeType":"YulAssignment","src":"9352:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9364:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9375:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9360:3:28"},"nodeType":"YulFunctionCall","src":"9360:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9352:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9394:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9409:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9417:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9405:3:28"},"nodeType":"YulFunctionCall","src":"9405:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9387:6:28"},"nodeType":"YulFunctionCall","src":"9387:36:28"},"nodeType":"YulExpressionStatement","src":"9387:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9311:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9322:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9333:4:28","type":""}],"src":"9245:184:28"},{"body":{"nodeType":"YulBlock","src":"9481:109:28","statements":[{"body":{"nodeType":"YulBlock","src":"9568:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9577:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9580:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9570:6:28"},"nodeType":"YulFunctionCall","src":"9570:12:28"},"nodeType":"YulExpressionStatement","src":"9570:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9504:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9515:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"9522:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9511:3:28"},"nodeType":"YulFunctionCall","src":"9511:54:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9501:2:28"},"nodeType":"YulFunctionCall","src":"9501:65:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9494:6:28"},"nodeType":"YulFunctionCall","src":"9494:73:28"},"nodeType":"YulIf","src":"9491:2:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9470:5:28","type":""}],"src":"9434:156:28"}]},"contents":"{\n    { }\n    function abi_decode_t_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 0x60)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_contract$_ITransferHook_$1786t_string_calldata_ptrt_string_calldata_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value1_1, value2_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_string_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value5, value5) }\n        value5 := value_1\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"INVALID_ZERO_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"INSUFFICIENT_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UNSTAKE_WINDOW_FINISHED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"INVALID_BALANCE_ON_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3086":[{"length":32,"start":2901},{"length":32,"start":10033},{"length":32,"start":10102},{"length":32,"start":10147}],"3088":[{"length":32,"start":4131},{"length":32,"start":4683}],"3737":[{"length":32,"start":1852},{"length":32,"start":2234},{"length":32,"start":3974}],"3739":[{"length":32,"start":3100},{"length":32,"start":3304}],"3741":[{"length":32,"start":1507},{"length":32,"start":1641},{"length":32,"start":2507},{"length":32,"start":4943}],"3744":[{"length":32,"start":1601},{"length":32,"start":2340},{"length":32,"start":4906}],"3747":[{"length":32,"start":2937},{"length":32,"start":3359}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102415760003560e01c80638dbefee211610145578063adc9772e116100bd578063dd62ed3e1161008c578063f11b818811610071578063f11b81881461045b578063f1cc432a1461047d578063f6d2ee861461049057610241565b8063dd62ed3e14610440578063dde43cba1461045357610241565b8063adc9772e1461040a578063b2a5dbfa1461041d578063c3863ada14610430578063cbcbb5071461043857610241565b806399248ea711610114578063a457c2d7116100f9578063a457c2d7146103dc578063a9059cbb146103ef578063aaf5eb681461040257610241565b806399248ea7146103c15780639a99b4f0146103c957610241565b80638dbefee214610396578063919cd40f146103a9578063946776cd146103b157806395d89b41146103b957610241565b8063313ce567116101d857806370a08231116101a7578063787a08a61161018c578063787a08a6146103685780637e90d7ef146103705780638779588c1461038357610241565b806370a082311461034d57806372b49d631461036057610241565b8063313ce5671461030a5780633373ee4c1461031f578063359c4a9614610332578063395093511461033a57610241565b80631e9a6950116102145780631e9a6950146102ac57806323b872dd146102c15780632acbf823146102d4578063312f6b83146102f557610241565b806306fdde0314610246578063091030c314610264578063095ea7b31461028457806318160ddd146102a4575b600080fd5b61024e6104a3565b60405161025b9190612e97565b60405180910390f35b610277610272366004612c11565b610557565b60405161025b9190613088565b610297610292366004612ca5565b610569565b60405161025b9190612e8c565b610277610587565b6102bf6102ba366004612ca5565b61058d565b005b6102976102cf366004612c65565b6107cf565b6102e76102e2366004612ca5565b610871565b60405161025b929190613038565b6102fd6108b8565b60405161025b9190612e45565b6103126108dc565b60405161025b9190613091565b61027761032d366004612c2d565b6108e5565b610277610922565b610297610348366004612ca5565b610946565b61027761035b366004612c11565b6109a1565b6102776109c9565b6102bf6109ed565b61027761037e366004612c11565b610a66565b610277610391366004612c11565b610a78565b6102776103a4366004612c11565b610a8a565b610277610b53565b6102fd610b77565b61024e610b9b565b6102fd610c1a565b6102bf6103d7366004612ca5565b610c3e565b6102976103ea366004612ca5565b610db0565b6102976103fd366004612ca5565b610e25565b610312610e39565b6102bf610418366004612ca5565b610e3e565b6102bf61042b366004612cd0565b61100b565b6102fd61122d565b6102fd611249565b61027761044e366004612c2d565b61126d565b6102776112a5565b61046e610469366004612c11565b6112aa565b60405161025b9392919061305b565b61027761048b366004612e07565b6112ee565b6102bf61049e366004612d40565b6113f2565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061057d610576611568565b848461156c565b5060015b92915050565b60025490565b806105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b60405180910390fd5b336000908152603e6020526040902054610607817f00000000000000000000000000000000000000000000000000000000000000006114f4565b421161063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f3f565b7f000000000000000000000000000000000000000000000000000000000000000061069461068d837f00000000000000000000000000000000000000000000000000000000000000006114f4565b42906116b3565b11156106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fad565b60006106d7336109a1565b905060008184116106e857836106ea565b815b90506106f8338360016116f5565b5061070333826117b4565b61070d82826116b3565b61072257336000908152603e60205260408120555b61076373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836118fe565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d9836040516107c09190613088565b60405180910390a35050505050565b60006107dc84848461198b565b610866846107e8611568565b610861856040518060600160405280602881526020016131736028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610833611568565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190611a98565b61156c565b5060015b9392505050565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061057d610953611568565b846108618560016000610964611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c1681529252902054906114f4565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109f6336109a1565b610a2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612fe4565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b603d6020526000908152604090205481565b60076020526000908152604090205481565b60408051600180825281830190925260009160609190816020015b610aad612af2565b815260200190600190039081610aa557905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610af2856109a1565b8152602001610aff610587565b81525081600081518110610b0f57fe5b602002602001018190525061086a610b278483611b49565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d6020526040902054906114f4565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054d5780601f106105225761010080835404028352916020019161054d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c5433610c4d336109a1565b60006116f5565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8314610c855782610c87565b815b9050610cd3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e5400000000000000000000000000000000000081525084611a989092919063ffffffff16565b336000908152603d6020526040902055610d457f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051610da29190613088565b60405180910390a350505050565b600061057d610dbd611568565b846108618560405180606001604052806025815260200161325d6025913960016000610de7611568565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190611a98565b600061057d610e32611568565b848461198b565b601281565b80610e75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f08565b6000610e80836109a1565b90506000610e97843084610e92610587565b611d0c565b90508015610f2f577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a768482604051610ed0929190612e66565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d6020526040902054610f0890826114f4565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b610f3c60008486856112ee565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902055610f6c8484611de5565b610fae73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086611c77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051610da29190613088565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461107a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612f76565b60005b81811015611228576000603c600085858581811061109757fe5b90506060020160400160208101906110af9190612c11565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061112e8484848181106110fa57fe5b90506060020160400160208101906111129190612c11565b8286868681811061111f57fe5b90506060020160200135611f16565b5083838381811061113b57fe5b6111519260206060909202019081019150612dd7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061119957fe5b90506060020160400160208101906111b19190612c11565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106111f457fe5b61120a9260206060909202019081019150612dd7565b604051611217919061301b565b60405180910390a25060010161107d565b505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600181565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e6020526040812054806113235760009150506113ea565b60006113797f0000000000000000000000000000000000000000000000000000000000000000611373427f00000000000000000000000000000000000000000000000000000000000000006116b3565b906116b3565b90508181111561138c57600091506113e6565b600087821161139b578761139d565b425b9050828110156113b2578293505050506113ea565b6113e26113bf88876114f4565b6113dc6113cc8887612015565b6113d68b86612015565b906114f4565b90612088565b9250505b5090505b949350505050565b60006113fc6120ca565b90506009548111611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061319b602e913960400191505060405180910390fd5b6009819055604080516020601f880181900481028201810190925286815261149a9188908890819084018382808284376000920191909152506120cf92505050565b6114d984848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120e692505050565b6114e2826120f9565b6114eb8761212d565b50505050505050565b60008282018381101561086a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b73ffffffffffffffffffffffffffffffffffffffff83166115d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061320f6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061310a6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061086a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a98565b600080611706853086610e92610587565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d60205260408120549192509061173a90836114f4565b905081156117ab5783156117715773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7686836040516117a2929190612e66565b60405180910390a15b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131c96021913960400191505060405180910390fd5b61182c82600083612174565b611876816040518060600160405280602281526020016130e86022913973ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556002546118a990826116b3565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526112289084906122f2565b6000611996846109a1565b90506119a4848260016116f5565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a875760006119e3846109a1565b90506119f1848260016116f5565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e6020526040902054611a24818587856112ee565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260409020558284148015611a5857508015155b15611a845773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b611a92848484612530565b50505050565b60008184841115611b41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b06578181015183820152602001611aee565b50505050905090810190601f168015611b335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600080805b8351811015611c6f576000603c6000868481518110611b6957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040016000908120600181015481548851929450611bf4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a9088908110611be357fe5b602002602001015160400151612700565b9050611c63611c5c878581518110611c0857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612814565b85906114f4565b93505050600101611b4e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611a929085906122f2565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280611d54888588611f16565b9050808314611dd9578615611d7157611d6e878285612814565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90611dd0908590613088565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611e6757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611e7360008383612174565b600254611e8090826114f4565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611eb390826114f4565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415611f575750905061086a565b8454600090611f7b9084906fffffffffffffffffffffffffffffffff168488612700565b9050828114611fdc578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051611fd39190613088565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b60008261202457506000610581565b8282028284828161203157fe5b041461086a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131526021913960400191505060405180910390fd5b600061086a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612836565b600190565b80516120e2906003906020840190612b29565b5050565b80516120e2906004906020840190612b29565b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156121ad57611228565b73ffffffffffffffffffffffffffffffffffffffff8316156121ec5760006121d4846109a1565b90506121ea84826121e581866116b3565b6128b5565b505b73ffffffffffffffffffffffffffffffffffffffff821615612226576000612213836109a1565b905061222483826121e581866114f4565b505b60085473ffffffffffffffffffffffffffffffffffffffff168015611a92578073ffffffffffffffffffffffffffffffffffffffff16634a3931498585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156122d457600080fd5b505af11580156122e8573d6000803e3d6000fd5b5050505050505050565b6123118273ffffffffffffffffffffffffffffffffffffffff16612ab9565b61237c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106123e557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123a8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612447576040519150601f19603f3d011682016040523d82523d6000602084013e61244c565b606091505b5091509150816124bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611a92578080602001905160208110156124d957600080fd5b5051611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613233602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831661259c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806131ea6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216612608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130c56023913960400191505060405180910390fd5b612613838383612174565b61265d8160405180606001604052806026815260200161312c6026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190611a98565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461269990826114f4565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600083158061270d575081155b80612729575042836fffffffffffffffffffffffffffffffff16145b8061276657507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156127725750836113ea565b60007f000000000000000000000000000000000000000000000000000000000000000042116127a157426127c3565b7f00000000000000000000000000000000000000000000000000000000000000005b905060006127e3826fffffffffffffffffffffffffffffffff87166116b3565b9050612809876113d6866113dc670de0b6b3a76400006128038c88612015565b90612015565b979650505050505050565b60006113ea670de0b6b3a76400006113dc61282f86866116b3565b8790612015565b6000818361289f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315611b06578181015183820152602001611aee565b5060008385816128ab57fe5b0495945050505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600760209081526040808320546006909252909120439190811580159061293957506fffffffffffffffffffffffffffffffff83168160006129148560016116b3565b81526020810191909152604001600020546fffffffffffffffffffffffffffffffff16145b15612993578381600061294d8560016116b3565b8152602081019190915260400160002080546fffffffffffffffffffffffffffffffff928316700100000000000000000000000000000000029216919091179055612a49565b6040805180820182526fffffffffffffffffffffffffffffffff80861682528681166020808401918252600087815290869052939093209151825493518216700100000000000000000000000000000000029082167fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169390931716919091179055612a228260016114f4565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600760205260409020555b6040805173ffffffffffffffffffffffffffffffffffffffff881681526fffffffffffffffffffffffffffffffff808816602083015286168183015290517f2cd3c83ddac2953ee75f53265d9ea4463eaf05030e5459a1b7e63819b7ce88f79181900360600190a1505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113ea575050151592915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612b5f5760008555612ba5565b82601f10612b7857805160ff1916838001178555612ba5565b82800160010185558215612ba5579182015b82811115612ba5578251825591602001919060010190612b8a565b50612bb1929150612bb5565b5090565b5b80821115612bb15760008155600101612bb6565b60008083601f840112612bdb578182fd5b50813567ffffffffffffffff811115612bf2578182fd5b602083019150836020828501011115612c0a57600080fd5b9250929050565b600060208284031215612c22578081fd5b813561086a8161309f565b60008060408385031215612c3f578081fd5b8235612c4a8161309f565b91506020830135612c5a8161309f565b809150509250929050565b600080600060608486031215612c79578081fd5b8335612c848161309f565b92506020840135612c948161309f565b929592945050506040919091013590565b60008060408385031215612cb7578182fd5b8235612cc28161309f565b946020939093013593505050565b60008060208385031215612ce2578182fd5b823567ffffffffffffffff80821115612cf9578384fd5b818501915085601f830112612d0c578384fd5b813581811115612d1a578485fd5b866020606083028501011115612d2e578485fd5b60209290920196919550909350505050565b60008060008060008060808789031215612d58578182fd5b8635612d638161309f565b9550602087013567ffffffffffffffff80821115612d7f578384fd5b612d8b8a838b01612bca565b90975095506040890135915080821115612da3578384fd5b50612db089828a01612bca565b909450925050606087013560ff81168114612dc9578182fd5b809150509295509295509295565b600060208284031215612de8578081fd5b81356fffffffffffffffffffffffffffffffff8116811461086a578182fd5b60008060008060808587031215612e1c578384fd5b84359350602085013592506040850135612e358161309f565b9396929550929360600135925050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015612ec357858101830151858201604001528201612ea7565b81811115612ed45783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b90815260200190565b60ff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146130c157600080fd5b5056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d8eb41ace3f71c07d10b2dea8abe82e4ba8c2b59dc62ec66cbbfedb5f71f2c0264736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x241 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DBEFEE2 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF11B8188 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xF6D2EE86 EQ PUSH2 0x490 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x453 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x438 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x402 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x3C9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x919CD40F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B9 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x787A08A6 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x8779588C EQ PUSH2 0x383 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x360 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x33A JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x1E9A6950 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2ACBF823 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x2F5 JUMPI PUSH2 0x241 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST PUSH2 0x277 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C65 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP3 SWAP2 SWAP1 PUSH2 0x3038 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x312 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x946 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x277 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH2 0x277 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x312 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD0 JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x122D JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST PUSH2 0x277 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST PUSH2 0x277 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D40 JUMP JUMPDEST PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x530 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x576 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x607 DUP2 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH32 0x0 PUSH2 0x694 PUSH2 0x68D DUP4 PUSH32 0x0 PUSH2 0x14F4 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x16B3 JUMP JUMPDEST GT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 CALLER PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x6E8 JUMPI DUP4 PUSH2 0x6EA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x6F8 CALLER DUP4 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH2 0x703 CALLER DUP3 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x70D DUP3 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x722 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x763 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x18FE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP5 DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x866 DUP5 PUSH2 0x7E8 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3173 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x833 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x156C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0x953 PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x964 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9F6 CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2FE4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAAD PUSH2 0x2AF2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAA5 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAF2 DUP6 PUSH2 0x9A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAFF PUSH2 0x587 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB0F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x86A PUSH2 0xB27 DUP5 DUP4 PUSH2 0x1B49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x54D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x522 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54D JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC54 CALLER PUSH2 0xC4D CALLER PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0xC85 JUMPI DUP3 PUSH2 0xC87 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0xCD3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x1A98 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xD45 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xDBD PUSH2 0x1568 JUMP JUMPDEST DUP5 PUSH2 0x861 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x325D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDE7 PUSH2 0x1568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH2 0xE32 PUSH2 0x1568 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE80 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE97 DUP5 ADDRESS DUP5 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xED0 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF08 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xF3C PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xF6C DUP5 DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0xFAE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x1C77 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1097 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x112E DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x10FA JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x111F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F16 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x113B JUMPI INVALID JUMPDEST PUSH2 0x1151 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x1199 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH2 0x120A SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x2DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x301B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x107D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1323 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 PUSH32 0x0 PUSH2 0x1373 TIMESTAMP PUSH32 0x0 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x139B JUMPI DUP8 PUSH2 0x139D JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x13E2 PUSH2 0x13BF DUP9 DUP8 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x13DC PUSH2 0x13CC DUP9 DUP8 PUSH2 0x2015 JUMP JUMPDEST PUSH2 0x13D6 DUP12 DUP7 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 PUSH2 0x2088 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC PUSH2 0x20CA JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x319B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE PUSH2 0x149A SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20CF SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14D9 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x20E6 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14E2 DUP3 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x14EB DUP8 PUSH2 0x212D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x320F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x310A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1706 DUP6 ADDRESS DUP7 PUSH2 0xE92 PUSH2 0x587 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x173A SWAP1 DUP4 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x17AB JUMPI DUP4 ISZERO PUSH2 0x1771 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17A2 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31C9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x182C DUP3 PUSH1 0x0 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30E8 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x18A9 SWAP1 DUP3 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1228 SWAP1 DUP5 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19A4 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A87 JUMPI PUSH1 0x0 PUSH2 0x19E3 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F1 DUP5 DUP3 PUSH1 0x1 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A24 DUP2 DUP6 DUP8 DUP6 PUSH2 0x12EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x1A58 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1A84 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x1A92 DUP5 DUP5 DUP5 PUSH2 0x2530 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B33 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1C6F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B69 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x1BF4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x1BE3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C63 PUSH2 0x1C5C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2814 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x1B4E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1A92 SWAP1 DUP6 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x1D54 DUP9 DUP6 DUP9 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x1DD9 JUMPI DUP7 ISZERO PUSH2 0x1D71 JUMPI PUSH2 0x1D6E DUP8 DUP3 DUP6 PUSH2 0x2814 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x1DD0 SWAP1 DUP6 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1E67 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1E73 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1E80 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1EB3 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x1F57 JUMPI POP SWAP1 POP PUSH2 0x86A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1F7B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x1FDC JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x3088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2024 JUMPI POP PUSH1 0x0 PUSH2 0x581 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2031 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3152 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x86A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x20E2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21AD JUMPI PUSH2 0x1228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x21EC JUMPI PUSH1 0x0 PUSH2 0x21D4 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x21EA DUP5 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x28B5 JUMP JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x2226 JUMPI PUSH1 0x0 PUSH2 0x2213 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2224 DUP4 DUP3 PUSH2 0x21E5 DUP2 DUP7 PUSH2 0x14F4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1A92 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A393149 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2311 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x237C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23E5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2447 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x244C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1A92 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3233 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x259C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x31EA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x30C5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2613 DUP4 DUP4 DUP4 PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x312C PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2699 SWAP1 DUP3 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x270D JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x2729 JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x2766 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x2772 JUMPI POP DUP4 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x27A1 JUMPI TIMESTAMP PUSH2 0x27C3 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27E3 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2809 DUP8 PUSH2 0x13D6 DUP7 PUSH2 0x13DC PUSH8 0xDE0B6B3A7640000 PUSH2 0x2803 DUP13 DUP9 PUSH2 0x2015 JUMP JUMPDEST SWAP1 PUSH2 0x2015 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA PUSH8 0xDE0B6B3A7640000 PUSH2 0x13DC PUSH2 0x282F DUP7 DUP7 PUSH2 0x16B3 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x289F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1B06 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x28AB JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2939 JUMPI POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 PUSH1 0x0 PUSH2 0x2914 DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2993 JUMPI DUP4 DUP2 PUSH1 0x0 PUSH2 0x294D DUP6 PUSH1 0x1 PUSH2 0x16B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP4 MLOAD DUP3 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2A22 DUP3 PUSH1 0x1 PUSH2 0x14F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x2CD3C83DDAC2953EE75F53265D9EA4463EAF05030E5459A1B7E63819B7CE88F7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x13EA JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B5F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B78 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BA5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BA5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BA5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B8A JUMP JUMPDEST POP PUSH2 0x2BB1 SWAP3 SWAP2 POP PUSH2 0x2BB5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BDB JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C22 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x86A DUP2 PUSH2 0x309F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C3F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C4A DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C5A DUP2 PUSH2 0x309F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C84 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C94 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CC2 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CF9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D0C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D1A JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2D2E JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D58 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2D63 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D7F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2D8B DUP11 DUP4 DUP12 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DA3 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2DB0 DUP10 DUP3 DUP11 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2DC9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x86A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E1C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2E35 DUP2 PUSH2 0x309F JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EC3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2EA7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2ED4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x30C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xD8 0xEB COINBASE 0xAC 0xE3 0xF7 SHR SMOD 0xD1 SIGNEXTEND 0x2D 0xEA DUP11 0xBE DUP3 0xE4 0xBA DUP13 0x2B MSIZE 0xDC PUSH3 0xEC66CB 0xBF 0xED 0xB5 0xF7 0x1F 0x2C MUL PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ","sourceMap":"811:9346:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1467:51:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2561:156:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1292:92::-;;;:::i;3659:971:23:-;;;;;;:::i;:::-;;:::i;:::-;;3044:343:15;;;;;;:::i;:::-;;:::i;551:66:16:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1029:36:23:-;;;:::i;:::-;;;;;;;:::i;1148:84:15:-;;;:::i;:::-;;;;;;;:::i;7914:128:20:-;;;;;;:::i;:::-;;:::i;1236:39:23:-;;;:::i;3627:205:15:-;;;;;;:::i;:::-;;:::i;1439:111::-;;;;;;:::i;:::-;;:::i;1109:41:23:-;;;:::i;4751:230::-;;;:::i;1408:55::-;;;;;;:::i;:::-;;:::i;621:51:16:-;;;;;;:::i;:::-;;:::i;9493:468:23:-;;;;;;:::i;:::-;;:::i;666:41:20:-;;;:::i;1365:38:23:-;;;:::i;1004:88:15:-;;;:::i;1069:36:23:-;;;:::i;5136:490::-;;;;;;:::i;:::-;;:::i;4082:318:15:-;;;;;;:::i;:::-;;:::i;1804:162::-;;;;;;:::i;:::-;;:::i;758:36:20:-;;;:::i;2772:740:23:-;;;;;;:::i;:::-;;:::i;1406:709:20:-;;;;;;:::i;:::-;;:::i;957:36:16:-;;;:::i;712:41:20:-;;;:::i;2232:165:15:-;;;;;;:::i;:::-;;:::i;988:36:23:-;;;:::i;799:43:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;8324:1025:23:-;;;;;;:::i;:::-;;:::i;2498:270::-;;;;;;:::i;:::-;;:::i;866:84:15:-;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:13;;933:12;;940:5;;933:12;;940:5;933:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:84;:::o;1467:51:23:-;;;;;;;;;;;;;:::o;2561:156:15:-;2644:4;2656:39;2665:12;:10;:12::i;:::-;2679:7;2688:6;2656:8;:39::i;:::-;-1:-1:-1;2708:4:15;2561:156;;;;;:::o;1292:92::-;1367:12;;1292:92;:::o;3659:971:23:-;3735:11;3727:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:10;3807:30;3840:28;;;:16;:28;;;;;;3907:44;3840:28;3934:16;3907:26;:44::i;:::-;3889:15;:62;3874:114;;;;;;;;;;;;:::i;:::-;4078:14;4009:65;4029:44;:22;4056:16;4029:26;:44::i;:::-;4009:15;;:19;:65::i;:::-;:83;;3994:137;;;;;;;;;;;;:::i;:::-;4137:30;4170:21;4180:10;4170:9;:21::i;:::-;4137:54;;4198:22;4233;4224:6;:31;4223:67;;4284:6;4223:67;;;4259:22;4223:67;4198:92;;4297:72;4328:10;4340:22;4364:4;4297:30;:72::i;:::-;;4376:33;4382:10;4394:14;4376:5;:33::i;:::-;4420:42;:22;4447:14;4420:26;:42::i;:::-;4416:100;;4494:10;4508:1;4477:28;;;:16;:28;;;;;:32;4416:100;4522:53;:33;4529:12;4522:33;4556:2;4560:14;4522:33;:53::i;:::-;4606:2;4587:38;;4594:10;4587:38;;;4610:14;4587:38;;;;;;:::i;:::-;;;;;;;;3659:971;;;;;:::o;3044:343:15:-;3166:4;3178:36;3188:6;3196:9;3207:6;3178:9;:36::i;:::-;3220:145;3236:6;3250:12;:10;:12::i;:::-;3270:89;3308:6;3270:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;3290:12;:10;:12::i;:::-;3270:33;;;;;;;;;;;;;-1:-1:-1;3270:33:15;;;:89;:37;:89::i;:::-;3220:8;:145::i;:::-;-1:-1:-1;3378:4:15;3044:343;;;;;;:::o;551:66:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1029:36:23:-;;;:::o;1148:84:15:-;1218:9;;;;1148:84;:::o;7914:128:20:-;8012:13;;;;7990:7;8012:13;;;:6;:13;;;;;;;;:25;;;;;:19;;;;:25;;;;7914:128;;;;:::o;1236:39:23:-;;;:::o;3627:205:15:-;3715:4;3727:83;3736:12;:10;:12::i;:::-;3750:7;3759:50;3798:10;3759:11;:25;3771:12;:10;:12::i;:::-;3759:25;;;;;;;;;;;;;;;;;;-1:-1:-1;3759:25:15;;;:34;;;;;;;;;;;:38;:50::i;1439:111::-;1527:18;;1505:7;1527:18;;;;;;;;;;;;1439:111::o;1109:41:23:-;;;:::o;4751:230::-;4803:21;4813:10;4803:9;:21::i;:::-;4795:66;;;;;;;;;;;;:::i;:::-;4915:10;4898:28;;;;:16;:28;;;;;;4929:15;4898:46;;4956:20;;;4898:28;4956:20;4751:230::o;1408:55::-;;;;;;;;;;;;;:::o;621:51:16:-;;;;;;;;;;;;;:::o;9493:468:23:-;9645:41;;;9684:1;9645:41;;;;;;;;;9564:7;;9579:57;;9645:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9579:107;;9713:151;;;;;;;;9779:4;9713:151;;;;;;9806:17;9816:6;9806:9;:17::i;:::-;9713:151;;;;9844:13;:11;:13::i;:::-;9713:151;;;9692:15;9708:1;9692:18;;;;;;;;;;;;;:172;;;;9877:79;9910:45;9931:6;9939:15;9910:20;:45::i;:::-;9877:28;;;;;;;:20;:28;;;;;;;:32;:79::i;666:41:20:-;;;:::o;1365:38:23:-;;;:::o;1004:88:15:-;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:13;;1073:14;;1080:7;;1073:14;;1080:7;1073:14;;;;;;;;;;;;;;;;;;;;;;;;1069:36:23;;;:::o;5136:490::-;5210:23;5242:72;5273:10;5285:21;5295:10;5285:9;:21::i;:::-;5308:5;5242:30;:72::i;:::-;5210:104;;5320:21;5355:17;5345:6;:27;5344:56;;5394:6;5344:56;;;5376:15;5344:56;5320:80;;5442:52;5462:13;5442:52;;;;;;;;;;;;;;;;;:15;:19;;:52;;;;;:::i;:::-;5428:10;5407:32;;;;:20;:32;;;;;:87;5501:63;:12;5407:32;5501:29;5531:13;5546:2;5550:13;5501:29;:63::i;:::-;5603:2;5576:45;;5591:10;5576:45;;;5607:13;5576:45;;;;;;:::i;:::-;;;;;;;;5136:490;;;;:::o;4082:318:15:-;4187:4;4201:177;4217:12;:10;:12::i;:::-;4237:7;4252:120;4300:15;4252:120;;;;;;;;;;;;;;;;;:11;:25;4264:12;:10;:12::i;:::-;4252:25;;;;;;;;;;;;;;;;;;-1:-1:-1;4252:25:15;;;:34;;;;;;;;;;;:120;:38;:120::i;1804:162::-;1890:4;1902:42;1912:12;:10;:12::i;:::-;1926:9;1937:6;1902:9;:42::i;758:36:20:-;792:2;758:36;:::o;2772:740:23:-;2855:11;2847:43;;;;;;;;;;;;:::i;:::-;2896:21;2920;2930:10;2920:9;:21::i;:::-;2896:45;;2948:22;2979:81;3004:10;3024:4;3031:13;3046;:11;:13::i;:::-;2979:24;:81::i;:::-;2948:112;-1:-1:-1;3070:19:23;;3066:182;;3104:42;3119:10;3131:14;3104:42;;;;;;;:::i;:::-;;;;;;;;3189:32;;;;;;;:20;:32;;;;;;:52;;3226:14;3189:36;:52::i;:::-;3154:32;;;;;;;:20;:32;;;;;:87;3066:182;3285:62;3310:1;3313:6;3321:10;3333:13;3285:24;:62::i;:::-;3254:28;;;;;;;:16;:28;;;;;:93;3354:25;3271:10;3372:6;3354:5;:25::i;:::-;3385:72;:37;3392:12;3385:37;3423:10;3443:4;3450:6;3385:37;:72::i;:::-;3488:10;3469:38;;3476:10;3469:38;;;3500:6;3469:38;;;;;;:::i;1406:709:20:-;1538:10;:30;1552:16;1538:30;;1530:64;;;;;;;;;;;;:::i;:::-;1606:9;1601:510;1621:28;;;1601:510;;;1664:29;1696:6;:44;1703:17;;1721:1;1703:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1696:44;;;;;;;;;;;;;;;1664:76;;1749:142;1784:17;;1802:1;1784:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1830:11;1851:17;;1869:1;1851:20;;;;;;;;;;;;:32;;;1749:25;:142::i;:::-;;1932:17;;1950:1;1932:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;1932:38:20;:::i;:::-;1900:70;;;;;;;;;;;;2012:17;;2030:1;2012:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1984:120;;;2058:17;;2076:1;2058:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;2058:38:20;:::i;:::-;1984:120;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1651:3:20;;1601:510;;;;1406:709;;:::o;957:36:16:-;;;;;;:::o;712:41:20:-;;;:::o;2232:165:15:-;2365:18;;;;2341:7;2365:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2232:165::o;988:36:23:-;1023:1;988:36;:::o;799:43:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8324:1025:23:-;8538:27;;;8493:7;8538:27;;;:16;:27;;;;;;8575:24;8571:53;;8616:1;8609:8;;;;;8571:53;8630:37;8676:57;8718:14;8676:37;:15;8696:16;8676:19;:37::i;:::-;:41;;:57::i;:::-;8630:103;;8776:19;8744:29;:51;8740:573;;;8827:1;8805:23;;8740:573;;;8849:29;8922:21;8890:29;:53;8889:117;;8985:21;8889:117;;;8957:15;8889:117;8849:157;;9043:19;9019:21;:43;9015:292;;;9081:19;9074:26;;;;;;;9015:292;9147:151;9267:30;:15;9287:9;9267:19;:30::i;:::-;9159:82;9206:34;:9;9220:19;9206:13;:34::i;:::-;9159:42;:15;9179:21;9159:19;:42::i;:::-;:46;;:82::i;:::-;9147:119;;:151::i;:::-;9125:173;;8740:573;;-1:-1:-1;9325:19:23;-1:-1:-1;8324:1025:23;;;;;;;:::o;2498:270::-;1040:16:25;1059:13;:11;:13::i;:::-;1040:32;;1097:23;;1086:8;:34;1078:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:23;:34;;;2657:14:23::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;2666:4;;;;;;2657:14;::::1;2666:4:::0;;;;2657:14;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;2657:8:23::1;::::0;-1:-1:-1;;;2657:14:23:i:1;:::-;2677:18;2688:6;;2677:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2677:10:23::1;::::0;-1:-1:-1;;;2677:18:23:i:1;:::-;2701:22;2714:8;2701:12;:22::i;:::-;2729:34;2748:14;2729:18;:34::i;:::-;2498:270:::0;;;;;;;:::o;913:162:19:-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:98:13;734:10;651:98;:::o;5672:338:15:-;5785:19;;;5777:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5859:21;;;5851:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5926:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;5973:32;;;;;;;;;;;;;;;;;5672:338;;;:::o;1319:128:19:-;1377:7;1399:43;1403:1;1406;1399:43;;;;;;;;;;;;;;;;;:3;:43::i;6995:539:23:-;7124:7;7139:22;7170:73;7195:4;7209;7216:11;7229:13;:11;:13::i;7170:73::-;7276:26;;;7249:24;7276:26;;;:20;:26;;;;;;7139:104;;-1:-1:-1;7249:24:23;7276:46;;7139:104;7276:30;:46::i;:::-;7249:73;-1:-1:-1;7333:19:23;;7329:171;;7366:13;7362:83;;;7391:26;;;;;;;:20;:26;;;;;:45;;;7362:83;7457:36;7472:4;7478:14;7457:36;;;;;;;:::i;:::-;;;;;;;;7329:171;7513:16;6995:539;-1:-1:-1;;;;;6995:539:23:o;5280:388:15:-;5359:21;;;5351:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5425:49;5446:7;5463:1;5467:6;5425:20;:49::i;:::-;5502:68;5525:6;5502:68;;;;;;;;;;;;;;;;;:18;;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;5481:18;;;:9;:18;;;;;;;;;;:89;5591:12;;:24;;5608:6;5591:16;:24::i;:::-;5576:12;:39;5626:37;;;;;;;;5652:1;;5626:37;;;;;;;;;;;;;5280:388;;:::o;790:184:18:-;910:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:23;910:58;;;884:85;;903:5;;884:18;:85::i;5827:822:23:-;5928:21;5952:15;5962:4;5952:9;:15::i;:::-;5928:39;;5987:57;6018:4;6024:13;6039:4;5987:30;:57::i;:::-;;6080:2;6072:10;;:4;:10;;;6068:537;;6092:19;6114:13;6124:2;6114:9;:13::i;:::-;6092:35;;6135:53;6166:2;6170:11;6183:4;6135:30;:53::i;:::-;-1:-1:-1;6230:22:23;;;6197:30;6230:22;;;:16;:22;;;;;;6283:113;6230:22;6349:6;6365:2;6377:11;6283:24;:113::i;:::-;6260:20;;;;;;;:16;:20;;;;;:136;6498:23;;;:54;;;;-1:-1:-1;6525:27:23;;;6498:54;6494:105;;;6564:22;;;6589:1;6564:22;;;:16;:22;;;;;:26;6494:105;6068:537;;;6611:33;6627:4;6633:2;6637:6;6611:15;:33::i;:::-;5827:822;;;;:::o;1711:189:19:-;1813:7;1844:12;1836:6;;;;1828:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1875:5:19;;;1711:189::o;5299:675:20:-;5428:7;;;5478:465;5502:6;:13;5498:1;:17;5478:465;;;5530:29;5562:6;:33;5569:6;5576:1;5569:9;;;;;;;;;;;;;;;;;;;:25;5562:33;;;;;;;;;;;;5569:25;5562:33;;;5658:17;;;;5687:29;;5771:9;;5562:33;;-1:-1:-1;5632:170:20;;5687:29;;;;;5728:31;;;;;5771:6;;5778:1;;5771:9;;;;;;;;;;;;:21;;;5632:14;:170::i;:::-;5603:199;;5828:108;5856:72;5868:6;5875:1;5868:9;;;;;;;;;;;;;;:22;;;5892:10;5904:11;:17;;:23;5922:4;5904:23;;;;;;;;;;;;;;;;5856:11;:72::i;:::-;5828:14;;:18;:108::i;:::-;5811:125;-1:-1:-1;;;5517:3:20;;5478:465;;;-1:-1:-1;5955:14:20;5299:675;-1:-1:-1;;;5299:675:20:o;978:216:18:-;1120:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:27;1120:68;;;1094:95;;1113:5;;1094:18;:95::i;3620:641:20:-;3809:13;;;;3764:7;3809:13;;;:6;:13;;;;;;;;3848:21;;;;;:15;;;:21;;;;;;3764:7;;3809:13;3764:7;;3927:56;3816:5;3809:13;3971:11;3927:25;:56::i;:::-;3908:75;;4007:8;3994:9;:21;3990:239;;4029:17;;4025:105;;4075:46;4087:12;4101:8;4111:9;4075:11;:46::i;:::-;4058:63;;4025:105;4138:21;;;;;;;;:15;;;:21;;;;;;;:32;;;4183:39;;;;;;;;;4162:8;;4183:39;:::i;:::-;;;;;;;;3990:239;-1:-1:-1;4242:14:20;3620:641;-1:-1:-1;;;;;;;3620:641:20:o;4928:348:15:-;5007:21;;;4999:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5071:49;5100:1;5104:7;5113:6;5071:20;:49::i;:::-;5142:12;;:24;;5159:6;5142:16;:24::i;:::-;5127:12;:39;5193:18;;;:9;:18;;;;;;;;;;;:30;;5216:6;5193:22;:30::i;:::-;5172:18;;;:9;:18;;;;;;;;;;;:51;;;;5234:37;;;;;;;5172:18;;:9;;5234:37;;;;;;;;;;4928:348;;:::o;2526:689:20:-;2706:17;;;;2759:31;;2672:7;;2706:17;2759:31;;;;;2801:15;:38;;2797:74;;;-1:-1:-1;2856:8:20;-1:-1:-1;2849:15:20;;2797:74;2927:29;;2877:16;;2902:89;;2917:8;;2927:29;;2958:19;2979:11;2902:14;:89::i;:::-;2877:114;;3014:8;3002;:20;2998:126;;3052:8;3032:11;:17;;:28;;;;3091:15;3073:44;;;3108:8;3073:44;;;;;;:::i;:::-;;;;;;;;2998:126;3130:58;;;3172:15;3130:58;;;;;;;;;3202:8;-1:-1:-1;;;2526:689:20;;;;;:::o;2120:419:19:-;2178:7;2403:6;2399:35;;-1:-1:-1;2426:1:19;2419:8;;2399:35;2452:5;;;2456:1;2452;:5;:1;2471:5;;;;;:10;2463:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:124;3028:7;3050:39;3054:1;3057;3050:39;;;;;;;;;;;;;;;;;:3;:39::i;10065:90:23:-;1023:1;10065:90;:::o;6014:76:15:-;6070:15;;;;:5;;:15;;;;;:::i;:::-;;6014:76;:::o;6094:84::-;6154:19;;;;:7;;:19;;;;;:::i;6182:84::-;6238:9;:23;;;;;;;;;;;;;;;6182:84::o;1201:118:16:-;1282:15;:32;;;;;;;;;;;;;;;1201:118::o;2698:709::-;2830:2;2822:10;;:4;:10;;;2818:37;;;2842:7;;2818:37;2865:18;;;;2861:160;;2893:19;2915:15;2925:4;2915:9;:15::i;:::-;2893:37;-1:-1:-1;2938:76:16;2953:4;2893:37;2989:23;2893:37;3005:6;2989:15;:23::i;:::-;2938:14;:76::i;:::-;2861:160;;3030:16;;;;3026:148;;3056:17;3076:13;3086:2;3076:9;:13::i;:::-;3056:33;-1:-1:-1;3097:70:16;3112:2;3056:33;3144:21;3056:33;3158:6;3144:13;:21::i;3097:70::-;3026:148;;3284:15;;;;3309:34;;3305:98;;3353:14;:25;;;3379:4;3385:2;3389:6;3353:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:709;;;;:::o;1547:555:18:-;1630:27;1638:5;1630:25;;;:27::i;:::-;1622:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:12;1770:23;1805:5;1797:19;;1817:4;1797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:67;;;;1836:7;1828:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:17;;:21;1887:211;;2025:10;2014:30;;;;;;;;;;;;;;;-1:-1:-1;2014:30:18;2006:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4404:520:15;4521:20;;;4513:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:23;;;4589:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4667:47;4688:6;4696:9;4707:6;4667:20;:47::i;:::-;4741:71;4763:6;4741:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;4721:17;;;;:9;:17;;;;;;;;;;;:91;;;;4841:20;;;;;;;:32;;4866:6;4841:24;:32::i;:::-;4818:20;;;;:9;:20;;;;;;;;;;;;:55;;;;4884:35;;;;;;;4818:20;;4884:35;;;;;;;;;;;;;4404:520;;;:::o;7011:693:20:-;7178:7;7204:22;;;:49;;-1:-1:-1;7236:17:20;;7204:49;:97;;;;7286:15;7263:19;:38;;;7204:97;:146;;;;7334:16;7311:19;:39;;;;7204:146;7193:198;;;-1:-1:-1;7372:12:20;7365:19;;7193:198;7397:24;7448:16;7430:15;:34;:71;;7486:15;7430:71;;;7467:16;7430:71;7397:104;-1:-1:-1;7507:17:20;7527:41;7397:104;7527:41;;;:20;:41::i;:::-;7507:61;-1:-1:-1;7587:112:20;7679:12;7587:78;7652:12;7587:60;7624:22;7587:32;:17;7507:61;7587:21;:32::i;:::-;:36;;:60::i;:112::-;7574:125;7011:693;-1:-1:-1;;;;;;;7011:693:20:o;6319:239::-;6450:7;6472:81;6530:22;6472:53;6497:27;:12;6514:9;6497:16;:27::i;:::-;6472:20;;:24;:53::i;3545:332:19:-;3647:7;3739:12;3732:5;3724:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:9;3774:1;3770;:5;;;;;;;3545:332;-1:-1:-1;;;;;3545:332:19:o;1576:767:16:-;1773:23;;;1690:20;1773:23;;;:16;:23;;;;;;;;;1856:10;:17;;;;;;1721:12;;1773:23;1942:26;;;;;:108;;-1:-1:-1;1978:72:16;;;:14;:44;1993:28;:21;2019:1;1993:25;:28::i;:::-;1978:44;;;;;;;;;;;-1:-1:-1;1978:44:16;:56;;;:72;1942:108;1931:357;;;2118:8;2065:14;:44;2080:28;:21;2106:1;2080:25;:28::i;:::-;2065:44;;;;;;;;;;;-1:-1:-1;2065:44:16;:61;;;;;;;;;;;;;;;;1931:357;;;2187:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2147:37:16;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:28;2162:21;2147:72;2253:25;:28::i;:::-;2227:23;;;;;;;:16;:23;;;;;:54;1931:357;2299:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:767;;;;;;:::o;743:586:12:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;;1308:15:12;;;1273:51;-1:-1:-1;;743:586:12:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:378:28;;;132:3;125:4;117:6;113:17;109:27;99:2;;157:8;147;140:26;99:2;-1:-1:-1;187:20:28;;230:18;219:30;;216:2;;;269:8;259;252:26;216:2;313:4;305:6;301:17;289:29;;365:3;358:4;349:6;341;337:19;333:30;330:39;327:2;;;382:1;379;372:12;327:2;89:303;;;;;:::o;397:259::-;;509:2;497:9;488:7;484:23;480:32;477:2;;;530:6;522;515:22;477:2;574:9;561:23;593:33;620:5;593:33;:::i;661:402::-;;;790:2;778:9;769:7;765:23;761:32;758:2;;;811:6;803;796:22;758:2;855:9;842:23;874:33;901:5;874:33;:::i;:::-;926:5;-1:-1:-1;983:2:28;968:18;;955:32;996:35;955:32;996:35;:::i;:::-;1050:7;1040:17;;;748:315;;;;;:::o;1068:470::-;;;;1214:2;1202:9;1193:7;1189:23;1185:32;1182:2;;;1235:6;1227;1220:22;1182:2;1279:9;1266:23;1298:33;1325:5;1298:33;:::i;:::-;1350:5;-1:-1:-1;1407:2:28;1392:18;;1379:32;1420:35;1379:32;1420:35;:::i;:::-;1172:366;;1474:7;;-1:-1:-1;;;1528:2:28;1513:18;;;;1500:32;;1172:366::o;1543:327::-;;;1672:2;1660:9;1651:7;1647:23;1643:32;1640:2;;;1693:6;1685;1678:22;1640:2;1737:9;1724:23;1756:33;1783:5;1756:33;:::i;:::-;1808:5;1860:2;1845:18;;;;1832:32;;-1:-1:-1;;;1630:240:28:o;1875:704::-;;;2058:2;2046:9;2037:7;2033:23;2029:32;2026:2;;;2079:6;2071;2064:22;2026:2;2124:9;2111:23;2153:18;2194:2;2186:6;2183:14;2180:2;;;2215:6;2207;2200:22;2180:2;2258:6;2247:9;2243:22;2233:32;;2303:7;2296:4;2292:2;2288:13;2284:27;2274:2;;2330:6;2322;2315:22;2274:2;2375;2362:16;2401:2;2393:6;2390:14;2387:2;;;2422:6;2414;2407:22;2387:2;2483:7;2478:2;2470:4;2462:6;2458:17;2454:2;2450:26;2446:35;2443:48;2440:2;;;2509:6;2501;2494:22;2440:2;2545;2537:11;;;;;2567:6;;-1:-1:-1;2016:563:28;;-1:-1:-1;;;;2016:563:28:o;2584:1090::-;;;;;;;2807:3;2795:9;2786:7;2782:23;2778:33;2775:2;;;2829:6;2821;2814:22;2775:2;2873:9;2860:23;2892:33;2919:5;2892:33;:::i;:::-;2944:5;-1:-1:-1;3000:2:28;2985:18;;2972:32;3023:18;3053:14;;;3050:2;;;3085:6;3077;3070:22;3050:2;3129:61;3182:7;3173:6;3162:9;3158:22;3129:61;:::i;:::-;3209:8;;-1:-1:-1;3103:87:28;-1:-1:-1;3297:2:28;3282:18;;3269:32;;-1:-1:-1;3313:16:28;;;3310:2;;;3347:6;3339;3332:22;3310:2;;3391:63;3446:7;3435:8;3424:9;3420:24;3391:63;:::i;:::-;3473:8;;-1:-1:-1;3365:89:28;-1:-1:-1;;3560:2:28;3545:18;;3532:32;3608:4;3595:18;;3583:31;;3573:2;;3633:6;3625;3618:22;3573:2;3661:7;3651:17;;;2765:909;;;;;;;;:::o;3679:321::-;;3791:2;3779:9;3770:7;3766:23;3762:32;3759:2;;;3812:6;3804;3797:22;3759:2;3856:9;3843:23;3906:34;3899:5;3895:46;3888:5;3885:57;3875:2;;3961:6;3953;3946:22;4005:464;;;;;4168:3;4156:9;4147:7;4143:23;4139:33;4136:2;;;4190:6;4182;4175:22;4136:2;4231:9;4218:23;4208:33;;4288:2;4277:9;4273:18;4260:32;4250:42;;4342:2;4331:9;4327:18;4314:32;4355:33;4382:5;4355:33;:::i;:::-;4126:343;;;;-1:-1:-1;4407:5:28;;4459:2;4444:18;4431:32;;-1:-1:-1;;4126:343:28:o;4474:226::-;4650:42;4638:55;;;;4620:74;;4608:2;4593:18;;4575:125::o;4705:297::-;4909:42;4897:55;;;;4879:74;;4984:2;4969:18;;4962:34;4867:2;4852:18;;4834:168::o;5007:187::-;5172:14;;5165:22;5147:41;;5135:2;5120:18;;5102:92::o;5698:662::-;;5839:2;5868;5857:9;5850:21;5900:6;5894:13;5943:6;5938:2;5927:9;5923:18;5916:34;5968:4;5981:140;5995:6;5992:1;5989:13;5981:140;;;6090:14;;;6086:23;;6080:30;6056:17;;;6075:2;6052:26;6045:66;6010:10;;5981:140;;;6139:6;6136:1;6133:13;6130:2;;;6209:4;6204:2;6195:6;6184:9;6180:22;6176:31;6169:45;6130:2;-1:-1:-1;6276:2:28;6264:15;6281:66;6260:88;6245:104;;;;6351:2;6241:113;;5819:541;-1:-1:-1;;;5819:541:28:o;6365:343::-;6567:2;6549:21;;;6606:2;6586:18;;;6579:30;6645:21;6640:2;6625:18;;6618:49;6699:2;6684:18;;6539:169::o;6713:345::-;6915:2;6897:21;;;6954:2;6934:18;;;6927:30;6993:23;6988:2;6973:18;;6966:51;7049:2;7034:18;;6887:171::o;7063:345::-;7265:2;7247:21;;;7304:2;7284:18;;;7277:30;7343:23;7338:2;7323:18;;7316:51;7399:2;7384:18;;7237:171::o;7413:347::-;7615:2;7597:21;;;7654:2;7634:18;;;7627:30;7693:25;7688:2;7673:18;;7666:53;7751:2;7736:18;;7587:173::o;7765:351::-;7967:2;7949:21;;;8006:2;7986:18;;;7979:30;8045:29;8040:2;8025:18;;8018:57;8107:2;8092:18;;7939:177::o;8121:218::-;8297:34;8285:47;;;;8267:66;;8255:2;8240:18;;8222:117::o;8344:319::-;8528:34;8589:15;;;8571:34;;8641:15;;8636:2;8621:18;;8614:43;8506:2;8491:18;;8473:190::o;8668:390::-;8880:34;8941:15;;;8923:34;;8993:15;;;;8988:2;8973:18;;8966:43;9040:2;9025:18;;9018:34;;;;8858:2;8843:18;;8825:233::o;9063:177::-;9209:25;;;9197:2;9182:18;;9164:76::o;9245:184::-;9417:4;9405:17;;;;9387:36;;9375:2;9360:18;;9342:87::o;9434:156::-;9522:42;9515:5;9511:54;9504:5;9501:65;9491:2;;9580:1;9577;9570:12;9491:2;9481:109;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2596600","executionCost":"infinite","totalCost":"infinite"},"external":{"COOLDOWN_SECONDS()":"infinite","DISTRIBUTION_END()":"infinite","EMISSION_MANAGER()":"infinite","PRECISION()":"351","REVISION()":"317","REWARDS_VAULT()":"infinite","REWARD_TOKEN()":"infinite","STAKED_TOKEN()":"infinite","UNSTAKE_WINDOW()":"infinite","_aaveGovernance()":"1135","_countsSnapshots(address)":"1345","_snapshots(address,uint256)":"1479","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","assets(address)":"2213","balanceOf(address)":"1311","claimRewards(address,uint256)":"infinite","configureAssets((uint128,uint256,address)[])":"infinite","cooldown()":"22348","decimals()":"1092","decreaseAllowance(address,uint256)":"infinite","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"infinite","getTotalRewardsBalance(address)":"infinite","getUserAssetData(address,address)":"infinite","increaseAllowance(address,uint256)":"infinite","initialize(address,string,string,uint8)":"infinite","name()":"infinite","redeem(address,uint256)":"infinite","stake(address,uint256)":"infinite","stakerRewardsToClaim(address)":"1323","stakersCooldowns(address)":"1303","symbol()":"infinite","totalSupply()":"1141","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_transfer(address,address,uint256)":"infinite","_updateCurrentUnclaimedRewards(address,uint256,bool)":"infinite","getRevision()":"15"}},"methodIdentifiers":{"COOLDOWN_SECONDS()":"72b49d63","DISTRIBUTION_END()":"919cd40f","EMISSION_MANAGER()":"cbcbb507","PRECISION()":"aaf5eb68","REVISION()":"dde43cba","REWARDS_VAULT()":"946776cd","REWARD_TOKEN()":"99248ea7","STAKED_TOKEN()":"312f6b83","UNSTAKE_WINDOW()":"359c4a96","_aaveGovernance()":"c3863ada","_countsSnapshots(address)":"8779588c","_snapshots(address,uint256)":"2acbf823","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assets(address)":"f11b8188","balanceOf(address)":"70a08231","claimRewards(address,uint256)":"9a99b4f0","configureAssets((uint128,uint256,address)[])":"b2a5dbfa","cooldown()":"787a08a6","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"f1cc432a","getTotalRewardsBalance(address)":"8dbefee2","getUserAssetData(address,address)":"3373ee4c","increaseAllowance(address,uint256)":"39509351","initialize(address,string,string,uint8)":"f6d2ee86","name()":"06fdde03","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e","stakerRewardsToClaim(address)":"7e90d7ef","stakersCooldowns(address)":"091030c3","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldownSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeWindow\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardsVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"distributionDuration\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Cooldown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldValue\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newValue\",\"type\":\"uint128\"}],\"name\":\"SnapshotDone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COOLDOWN_SECONDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKED_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_aaveGovernance\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_countsSnapshots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_snapshots\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"}],\"internalType\":\"struct DistributionTypes.AssetConfigInput[]\",\"name\":\"assetsConfigInput\",\"type\":\"tuple[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCooldownTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReceive\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBalance\",\"type\":\"uint256\"}],\"name\":\"getNextCooldownTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getTotalRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"aaveGovernance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerRewardsToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakersCooldowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"returns the allowance of spender on the tokens owned by owner\",\"params\":{\"owner\":\"the owner of the tokens\",\"spender\":\"the user allowed to spend the owner's tokens\"},\"returns\":{\"_0\":\"the amount of owner's tokens spender is allowed to spend*\"}},\"approve(address,uint256)\":{\"details\":\"allows spender to spend the tokens owned by msg.sender\",\"params\":{\"spender\":\"the user allowed to spend msg.sender tokens\"},\"returns\":{\"_0\":\"true*\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the balance of the token*\"}},\"claimRewards(address,uint256)\":{\"details\":\"Claims an `amount` of `REWARD_TOKEN` to the address `to`\",\"params\":{\"amount\":\"Amount to stake*\",\"to\":\"Address to stake for\"}},\"configureAssets((uint128,uint256,address)[])\":{\"details\":\"Configures the distribution of rewards for a list of assets\",\"params\":{\"assetsConfigInput\":\"The list of configurations to apply*\"}},\"cooldown()\":{\"details\":\"Activates the cooldown period to unstake - It can't be called if the user is not staking*\"},\"decimals()\":{\"returns\":{\"_0\":\"the decimals of the token*\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"decreases the allowance of spender to spend msg.sender tokens\",\"params\":{\"spender\":\"the user allowed to spend on behalf of msg.sender\",\"subtractedValue\":\"the amount being subtracted to the allowance\"},\"returns\":{\"_0\":\"true*\"}},\"getNextCooldownTimestamp(uint256,uint256,address,uint256)\":{\"details\":\"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \\\"worse\\\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0\",\"params\":{\"amountToReceive\":\"Amount\",\"fromCooldownTimestamp\":\"Cooldown timestamp of the sender\",\"toAddress\":\"Address of the recipient\",\"toBalance\":\"Current balance of the receiver\"},\"returns\":{\"_0\":\"The new cooldown timestamp*\"}},\"getTotalRewardsBalance(address)\":{\"details\":\"Return the total rewards pending to claim by an staker\",\"params\":{\"staker\":\"The staker address\"},\"returns\":{\"_0\":\"The rewards\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"increases the allowance of spender to spend msg.sender tokens\",\"params\":{\"addedValue\":\"the amount being added to the allowance\",\"spender\":\"the user allowed to spend on behalf of msg.sender\"},\"returns\":{\"_0\":\"true*\"}},\"initialize(address,string,string,uint8)\":{\"details\":\"Called by the proxy contract*\"},\"name()\":{\"returns\":{\"_0\":\"the name of the token*\"}},\"redeem(address,uint256)\":{\"details\":\"Redeems staked tokens, and stop earning rewards\",\"params\":{\"amount\":\"Amount to redeem*\",\"to\":\"Address to redeem to\"}},\"symbol()\":{\"returns\":{\"_0\":\"the symbol of the token*\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"the total supply of the token*\"}},\"transfer(address,uint256)\":{\"details\":\"executes a transfer of tokens from msg.sender to recipient\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\",\"params\":{\"amount\":\"the amount of tokens being transferred\",\"recipient\":\"the recipient of the tokens\",\"sender\":\"the owner of the tokens\"},\"returns\":{\"_0\":\"true if the transfer succeeds, false otherwise*\"}}},\"title\":\"StakedToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"REWARDS_VAULT()\":{\"notice\":\"Address to pull from the rewards, needs to have approved this contract\"},\"UNSTAKE_WINDOW()\":{\"notice\":\"Seconds available to redeem once the cooldown period is fullfilled\"}},\"notice\":\"Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/stake/StakedToken.sol\":\"StakedToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external;\\n}\\n\",\"keccak256\":\"0xb9f57138a1840eea2b01e686f7fcfc296a631ba602c9404b70752ecb8f86f8db\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IStakedAave.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedAave {\\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x757fb8a77394148520347549d7d339f5902e4beb113db528788e2d44b0bb7289\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20WithSnapshot.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {ERC20} from '../lib/ERC20.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\n\\n/**\\n * @title ERC20WithSnapshot\\n * @notice ERC20 including snapshots of balances on transfer-related actions\\n * @author Aave\\n **/\\ncontract ERC20WithSnapshot is ERC20 {\\n  using SafeMath for uint256;\\n\\n  /// @dev snapshot of a value on a specific block, used for balances\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  mapping(address => mapping(uint256 => Snapshot)) public _snapshots;\\n  mapping(address => uint256) public _countsSnapshots;\\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\\n  /// to control all potential reentrancies by calling back the this contract\\n  ITransferHook public _aaveGovernance;\\n\\n  event SnapshotDone(address owner, uint128 oldValue, uint128 newValue);\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public ERC20(name, symbol, decimals) {}\\n\\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\\n    _aaveGovernance = aaveGovernance;\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal virtual {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerCountOfSnapshots = _countsSnapshots[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = _snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerCountOfSnapshots != 0 &&\\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerCountOfSnapshots.sub(1)].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerCountOfSnapshots] = Snapshot(currentBlock, newValue);\\n      _countsSnapshots[owner] = ownerCountOfSnapshots.add(1);\\n    }\\n\\n    emit SnapshotDone(owner, oldValue, newValue);\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\\n   * - On _transfer, it writes snapshots for both \\\"from\\\" and \\\"to\\\"\\n   * - On _mint, only for _to\\n   * - On _burn, only for _from\\n   * @param from the from address\\n   * @param to the to address\\n   * @param amount the amount to transfer\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual override {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    if (from != address(0)) {\\n      uint256 fromBalance = balanceOf(from);\\n      _writeSnapshot(from, uint128(fromBalance), uint128(fromBalance.sub(amount)));\\n    }\\n    if (to != address(0)) {\\n      uint256 toBalance = balanceOf(to);\\n      _writeSnapshot(to, uint128(toBalance), uint128(toBalance.add(amount)));\\n    }\\n\\n    // caching the aave governance address to avoid multiple state loads\\n    ITransferHook aaveGovernance = _aaveGovernance;\\n    if (aaveGovernance != ITransferHook(0)) {\\n      aaveGovernance.onTransfer(from, to, amount);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xd7c631c298da697894c98fa9e8ec6760c56979d62d5e7bdb485ca71c42af9033\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/AaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\n/**\\n * @title AaveDistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract AaveDistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint128 emissionPerSecond;\\n    uint128 lastUpdateTimestamp;\\n    uint256 index;\\n    mapping(address => uint256) users;\\n  }\\n\\n  uint256 public immutable DISTRIBUTION_END;\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n\\n  constructor(address emissionManager, uint256 distributionDuration) public {\\n    DISTRIBUTION_END = block.timestamp.add(distributionDuration);\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /**\\n   * @dev Configures the distribution of rewards for a list of assets\\n   * @param assetsConfigInput The list of configurations to apply\\n   **/\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external\\n    override\\n  {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address underlyingAsset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, assetConfig.emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      assetConfig.index = newIndex;\\n      emit AssetIndexUpdated(underlyingAsset, newIndex);\\n    }\\n\\n    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)).div(10**uint256(PRECISION));\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= DISTRIBUTION_END\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > DISTRIBUTION_END ? DISTRIBUTION_END : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n\\n  /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n  function getUserAssetData(address user, address asset) public view returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n}\\n\",\"keccak256\":\"0x1f639ee1fe125ee2122aefd7b849b54d548b3dd7623280ae216320e98f2c6d3c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/StakedToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IStakedAave} from '../interfaces/IStakedAave.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {ERC20WithSnapshot} from '../lib/ERC20WithSnapshot.sol';\\nimport {SafeERC20} from '../lib/SafeERC20.sol';\\nimport {VersionedInitializable} from '../utils/VersionedInitializable.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {AaveDistributionManager} from './AaveDistributionManager.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\n\\n/**\\n * @title StakedToken\\n * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\\n * @author Aave\\n **/\\ncontract StakedToken is\\n  IStakedAave,\\n  ERC20WithSnapshot,\\n  VersionedInitializable,\\n  AaveDistributionManager\\n{\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  uint256 public constant REVISION = 1;\\n\\n  IERC20 public immutable STAKED_TOKEN;\\n  IERC20 public immutable REWARD_TOKEN;\\n  uint256 public immutable COOLDOWN_SECONDS;\\n\\n  /// @notice Seconds available to redeem once the cooldown period is fullfilled\\n  uint256 public immutable UNSTAKE_WINDOW;\\n\\n  /// @notice Address to pull from the rewards, needs to have approved this contract\\n  address public immutable REWARDS_VAULT;\\n\\n  mapping(address => uint256) public stakerRewardsToClaim;\\n  mapping(address => uint256) public stakersCooldowns;\\n\\n  event Staked(address indexed from, address indexed onBehalfOf, uint256 amount);\\n  event Redeem(address indexed from, address indexed to, uint256 amount);\\n\\n  event RewardsAccrued(address user, uint256 amount);\\n  event RewardsClaimed(address indexed from, address indexed to, uint256 amount);\\n\\n  event Cooldown(address indexed user);\\n\\n  constructor(\\n    IERC20 stakedToken,\\n    IERC20 rewardToken,\\n    uint256 cooldownSeconds,\\n    uint256 unstakeWindow,\\n    address rewardsVault,\\n    address emissionManager,\\n    uint128 distributionDuration,\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  )\\n    public\\n    ERC20WithSnapshot(name, symbol, decimals)\\n    AaveDistributionManager(emissionManager, distributionDuration)\\n  {\\n    STAKED_TOKEN = stakedToken;\\n    REWARD_TOKEN = rewardToken;\\n    COOLDOWN_SECONDS = cooldownSeconds;\\n    UNSTAKE_WINDOW = unstakeWindow;\\n    REWARDS_VAULT = rewardsVault;\\n  }\\n\\n  /**\\n   * @dev Called by the proxy contract\\n   **/\\n  function initialize(\\n    ITransferHook aaveGovernance,\\n    string calldata name,\\n    string calldata symbol,\\n    uint8 decimals\\n  ) external initializer {\\n    _setName(name);\\n    _setSymbol(symbol);\\n    _setDecimals(decimals);\\n    _setAaveGovernance(aaveGovernance);\\n  }\\n\\n  function stake(address onBehalfOf, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    uint256 balanceOfUser = balanceOf(onBehalfOf);\\n\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(onBehalfOf, address(this), balanceOfUser, totalSupply());\\n    if (accruedRewards != 0) {\\n      emit RewardsAccrued(onBehalfOf, accruedRewards);\\n      stakerRewardsToClaim[onBehalfOf] = stakerRewardsToClaim[onBehalfOf].add(accruedRewards);\\n    }\\n\\n    stakersCooldowns[onBehalfOf] = getNextCooldownTimestamp(0, amount, onBehalfOf, balanceOfUser);\\n\\n    _mint(onBehalfOf, amount);\\n    IERC20(STAKED_TOKEN).safeTransferFrom(msg.sender, address(this), amount);\\n\\n    emit Staked(msg.sender, onBehalfOf, amount);\\n  }\\n\\n  /**\\n   * @dev Redeems staked tokens, and stop earning rewards\\n   * @param to Address to redeem to\\n   * @param amount Amount to redeem\\n   **/\\n  function redeem(address to, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    //solium-disable-next-line\\n    uint256 cooldownStartTimestamp = stakersCooldowns[msg.sender];\\n    require(\\n      block.timestamp > cooldownStartTimestamp.add(COOLDOWN_SECONDS),\\n      'INSUFFICIENT_COOLDOWN'\\n    );\\n    require(\\n      block.timestamp.sub(cooldownStartTimestamp.add(COOLDOWN_SECONDS)) <= UNSTAKE_WINDOW,\\n      'UNSTAKE_WINDOW_FINISHED'\\n    );\\n    uint256 balanceOfMessageSender = balanceOf(msg.sender);\\n\\n    uint256 amountToRedeem = (amount > balanceOfMessageSender) ? balanceOfMessageSender : amount;\\n\\n    _updateCurrentUnclaimedRewards(msg.sender, balanceOfMessageSender, true);\\n\\n    _burn(msg.sender, amountToRedeem);\\n\\n    if (balanceOfMessageSender.sub(amountToRedeem) == 0) {\\n      stakersCooldowns[msg.sender] = 0;\\n    }\\n\\n    IERC20(STAKED_TOKEN).safeTransfer(to, amountToRedeem);\\n\\n    emit Redeem(msg.sender, to, amountToRedeem);\\n  }\\n\\n  /**\\n   * @dev Activates the cooldown period to unstake\\n   * - It can't be called if the user is not staking\\n   **/\\n  function cooldown() external override {\\n    require(balanceOf(msg.sender) != 0, 'INVALID_BALANCE_ON_COOLDOWN');\\n    //solium-disable-next-line\\n    stakersCooldowns[msg.sender] = block.timestamp;\\n\\n    emit Cooldown(msg.sender);\\n  }\\n\\n  /**\\n   * @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\\n   * @param to Address to stake for\\n   * @param amount Amount to stake\\n   **/\\n  function claimRewards(address to, uint256 amount) external override {\\n    uint256 newTotalRewards =\\n      _updateCurrentUnclaimedRewards(msg.sender, balanceOf(msg.sender), false);\\n    uint256 amountToClaim = (amount == type(uint256).max) ? newTotalRewards : amount;\\n\\n    stakerRewardsToClaim[msg.sender] = newTotalRewards.sub(amountToClaim, 'INVALID_AMOUNT');\\n\\n    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);\\n\\n    emit RewardsClaimed(msg.sender, to, amountToClaim);\\n  }\\n\\n  /**\\n   * @dev Internal ERC20 _transfer of the tokenized staked tokens\\n   * @param from Address to transfer from\\n   * @param to Address to transfer to\\n   * @param amount Amount to transfer\\n   **/\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    uint256 balanceOfFrom = balanceOf(from);\\n    // Sender\\n    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);\\n\\n    // Recipient\\n    if (from != to) {\\n      uint256 balanceOfTo = balanceOf(to);\\n      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);\\n\\n      uint256 previousSenderCooldown = stakersCooldowns[from];\\n      stakersCooldowns[to] = getNextCooldownTimestamp(\\n        previousSenderCooldown,\\n        amount,\\n        to,\\n        balanceOfTo\\n      );\\n      // if cooldown was set and whole balance of sender was transferred - clear cooldown\\n      if (balanceOfFrom == amount && previousSenderCooldown != 0) {\\n        stakersCooldowns[from] = 0;\\n      }\\n    }\\n\\n    super._transfer(from, to, amount);\\n  }\\n\\n  /**\\n   * @dev Updates the user state related with his accrued rewards\\n   * @param user Address of the user\\n   * @param userBalance The current balance of the user\\n   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\\n   * @return The unclaimed rewards that were added to the total accrued\\n   **/\\n  function _updateCurrentUnclaimedRewards(\\n    address user,\\n    uint256 userBalance,\\n    bool updateStorage\\n  ) internal returns (uint256) {\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(user, address(this), userBalance, totalSupply());\\n    uint256 unclaimedRewards = stakerRewardsToClaim[user].add(accruedRewards);\\n\\n    if (accruedRewards != 0) {\\n      if (updateStorage) {\\n        stakerRewardsToClaim[user] = unclaimedRewards;\\n      }\\n      emit RewardsAccrued(user, accruedRewards);\\n    }\\n\\n    return unclaimedRewards;\\n  }\\n\\n  /**\\n   * @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\\n   *  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient\\n   *  - Weighted average of from/to cooldown timestamps if:\\n   *    # The sender doesn't have the cooldown activated (timestamp 0).\\n   *    # The sender timestamp is expired\\n   *    # The sender has a \\\"worse\\\" timestamp\\n   *  - If the receiver's cooldown timestamp expired (too old), the next is 0\\n   * @param fromCooldownTimestamp Cooldown timestamp of the sender\\n   * @param amountToReceive Amount\\n   * @param toAddress Address of the recipient\\n   * @param toBalance Current balance of the receiver\\n   * @return The new cooldown timestamp\\n   **/\\n  function getNextCooldownTimestamp(\\n    uint256 fromCooldownTimestamp,\\n    uint256 amountToReceive,\\n    address toAddress,\\n    uint256 toBalance\\n  ) public view returns (uint256) {\\n    uint256 toCooldownTimestamp = stakersCooldowns[toAddress];\\n    if (toCooldownTimestamp == 0) {\\n      return 0;\\n    }\\n\\n    uint256 minimalValidCooldownTimestamp =\\n      block.timestamp.sub(COOLDOWN_SECONDS).sub(UNSTAKE_WINDOW);\\n\\n    if (minimalValidCooldownTimestamp > toCooldownTimestamp) {\\n      toCooldownTimestamp = 0;\\n    } else {\\n      uint256 fromCooldownTimestamp =\\n        (minimalValidCooldownTimestamp > fromCooldownTimestamp)\\n          ? block.timestamp\\n          : fromCooldownTimestamp;\\n\\n      if (fromCooldownTimestamp < toCooldownTimestamp) {\\n        return toCooldownTimestamp;\\n      } else {\\n        toCooldownTimestamp = (\\n          amountToReceive.mul(fromCooldownTimestamp).add(toBalance.mul(toCooldownTimestamp))\\n        )\\n          .div(amountToReceive.add(toBalance));\\n      }\\n    }\\n    return toCooldownTimestamp;\\n  }\\n\\n  /**\\n   * @dev Return the total rewards pending to claim by an staker\\n   * @param staker The staker address\\n   * @return The rewards\\n   */\\n  function getTotalRewardsBalance(address staker) external view returns (uint256) {\\n    DistributionTypes.UserStakeInput[] memory userStakeInputs =\\n      new DistributionTypes.UserStakeInput[](1);\\n    userStakeInputs[0] = DistributionTypes.UserStakeInput({\\n      underlyingAsset: address(this),\\n      stakedByUser: balanceOf(staker),\\n      totalStaked: totalSupply()\\n    });\\n    return stakerRewardsToClaim[staker].add(_getUnclaimedRewards(staker, userStakeInputs));\\n  }\\n\\n  /**\\n   * @dev returns the revision of the implementation contract\\n   * @return The revision\\n   */\\n  function getRevision() internal pure override returns (uint256) {\\n    return REVISION;\\n  }\\n}\\n\",\"keccak256\":\"0x14d8b0b9054ef0250237d42fa5551a406c41c92bd39bae3d6a3b3a5114ba1333\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1916,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1922,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1924,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1926,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1928,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1930,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":2445,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_snapshots","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)2439_storage))"},{"astId":2449,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_countsSnapshots","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2452,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"_aaveGovernance","offset":0,"slot":"8","type":"t_contract(ITransferHook)1786"},{"astId":5701,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"lastInitializedRevision","offset":0,"slot":"9","type":"t_uint256"},{"astId":5732,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"______gap","offset":0,"slot":"10","type":"t_array(t_uint256)50_storage"},{"astId":3095,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"assets","offset":0,"slot":"60","type":"t_mapping(t_address,t_struct(AssetData)3084_storage)"},{"astId":3751,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"stakerRewardsToClaim","offset":0,"slot":"61","type":"t_mapping(t_address,t_uint256)"},{"astId":3755,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"stakersCooldowns","offset":0,"slot":"62","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_contract(ITransferHook)1786":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)2439_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct ERC20WithSnapshot.Snapshot))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Snapshot)2439_storage)"},"t_mapping(t_address,t_struct(AssetData)3084_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AaveDistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)3084_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Snapshot)2439_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC20WithSnapshot.Snapshot)","numberOfBytes":"32","value":"t_struct(Snapshot)2439_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetData)3084_storage":{"encoding":"inplace","label":"struct AaveDistributionManager.AssetData","members":[{"astId":3075,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint128"},{"astId":3077,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"lastUpdateTimestamp","offset":16,"slot":"0","type":"t_uint128"},{"astId":3079,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"index","offset":0,"slot":"1","type":"t_uint256"},{"astId":3083,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"users","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"96"},"t_struct(Snapshot)2439_storage":{"encoding":"inplace","label":"struct ERC20WithSnapshot.Snapshot","members":[{"astId":2436,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"blockNumber","offset":0,"slot":"0","type":"t_uint128"},{"astId":2438,"contract":"@aave/safety-module/contracts/stake/StakedToken.sol:StakedToken","label":"value","offset":16,"slot":"0","type":"t_uint128"}],"numberOfBytes":"32"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"REWARDS_VAULT()":{"notice":"Address to pull from the rewards, needs to have approved this contract"},"UNSTAKE_WINDOW()":{"notice":"Seconds available to redeem once the cooldown period is fullfilled"}},"notice":"Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract","version":1}}},"@aave/safety-module/contracts/stake/StakedTokenV2.sol":{"StakedTokenV2":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"stakedToken","type":"address"},{"internalType":"contract IERC20","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"cooldownSeconds","type":"uint256"},{"internalType":"uint256","name":"unstakeWindow","type":"uint256"},{"internalType":"address","name":"rewardsVault","type":"address"},{"internalType":"address","name":"emissionManager","type":"address"},{"internalType":"uint128","name":"distributionDuration","type":"uint128"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"governance","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"emission","type":"uint256"}],"name":"AssetConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"AssetIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"Cooldown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"DelegatedPowerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsAccrued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"UserIndexUpdated","type":"event"},{"inputs":[],"name":"COOLDOWN_SECONDS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELEGATE_BY_TYPE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELEGATE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISTRIBUTION_END","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIP712_REVISION","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMISSION_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARDS_VAULT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REWARD_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKED_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UNSTAKE_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_aaveGovernance","outputs":[{"internalType":"contract ITransferHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_votingSnapshots","outputs":[{"internalType":"uint128","name":"blockNumber","type":"uint128"},{"internalType":"uint128","name":"value","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_votingSnapshotsCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"assets","outputs":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint128","name":"lastUpdateTimestamp","type":"uint128"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint128","name":"emissionPerSecond","type":"uint128"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"address","name":"underlyingAsset","type":"address"}],"internalType":"struct DistributionTypes.AssetConfigInput[]","name":"assetsConfigInput","type":"tuple[]"}],"name":"configureAssets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"delegateByType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateByTypeBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegator","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getDelegateeByType","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"fromCooldownTimestamp","type":"uint256"},{"internalType":"uint256","name":"amountToReceive","type":"uint256"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"toBalance","type":"uint256"}],"name":"getNextCooldownTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum IGovernancePowerDelegationToken.DelegationType","name":"delegationType","type":"uint8"}],"name":"getPowerCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getTotalRewardsBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getUserAssetData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakerRewardsToClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakersCooldowns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"claimRewards(address,uint256)":{"details":"Claims an `amount` of `REWARD_TOKEN` to the address `to`","params":{"amount":"Amount to stake*","to":"Address to stake for"}},"configureAssets((uint128,uint256,address)[])":{"details":"Configures the distribution of rewards for a list of assets","params":{"assetsConfigInput":"The list of configurations to apply*"}},"cooldown()":{"details":"Activates the cooldown period to unstake - It can't be called if the user is not staking*"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{"details":"delegates all the powers to a specific user","params":{"delegatee":"the user to which the power will be delegated*"}},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Delegates power from signatory to `delegatee`","params":{"delegatee":"The address to delegate votes to","expiry":"The time at which to expire the signature","nonce":"The contract state required to match the signature","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"delegateByType(address,uint8)":{"details":"delegates one specific power to a delegatee","params":{"delegatee":"the user which delegated power has changed","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*"}},"delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Delegates power from signatory to `delegatee`","params":{"delegatee":"The address to delegate votes to","delegationType":"the type of delegation (VOTING_POWER, PROPOSITION_POWER)","expiry":"The time at which to expire the signature","nonce":"The contract state required to match the signature","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"getDelegateeByType(address,uint8)":{"details":"returns the delegatee of an user","params":{"delegator":"the address of the delegator*"}},"getNextCooldownTimestamp(uint256,uint256,address,uint256)":{"details":"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \"better\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \"worse\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0","params":{"amountToReceive":"Amount","fromCooldownTimestamp":"Cooldown timestamp of the sender","toAddress":"Address of the recipient","toBalance":"Current balance of the receiver"},"returns":{"_0":"The new cooldown timestamp*"}},"getPowerAtBlock(address,uint256,uint8)":{"details":"returns the delegated power of a user at a certain block","params":{"user":"the user*"}},"getPowerCurrent(address,uint8)":{"details":"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot","params":{"user":"the user*"}},"getTotalRewardsBalance(address)":{"details":"Return the total rewards pending to claim by an staker","params":{"staker":"The staker address"},"returns":{"_0":"The rewards"}},"getUserAssetData(address,address)":{"details":"Returns the data of an user on a distribution","params":{"asset":"The address of the reference asset of the distribution","user":"Address of the user"},"returns":{"_0":"The new index*"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"initialize()":{"details":"Called by the proxy contract*"},"name()":{"details":"Returns the name of the token."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md","params":{"deadline":"the deadline timestamp, type(uint256).max for no deadline","owner":"the owner of the funds","r":"signature param","s":"signature param","spender":"the spender","v":"signature param","value":"the amount"}},"redeem(address,uint256)":{"details":"Redeems staked tokens, and stop earning rewards","params":{"amount":"Amount to redeem*","to":"Address to redeem to"}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"totalSupplyAt(uint256)":{"details":"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*"},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"stateVariables":{"REVISION":{"details":"Start of Storage layout from StakedToken v1"},"_nonces":{"details":"owner => next valid nonce to submit with permit()"},"_votingDelegates":{"details":"To see the voting mappings, go to GovernancePowerWithSnapshot.sol"}},"title":"StakedToken","version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2793:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:28","statements":[{"nodeType":"YulAssignment","src":"86:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:28"},"nodeType":"YulFunctionCall","src":"95:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:28"}]},{"body":{"nodeType":"YulBlock","src":"171:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:28"},"nodeType":"YulFunctionCall","src":"173:12:28"},"nodeType":"YulExpressionStatement","src":"173:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:28"},"nodeType":"YulFunctionCall","src":"152:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:28"},"nodeType":"YulFunctionCall","src":"148:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:28"},"nodeType":"YulFunctionCall","src":"137:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:28"},"nodeType":"YulFunctionCall","src":"127:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:28"},"nodeType":"YulFunctionCall","src":"120:50:28"},"nodeType":"YulIf","src":"117:2:28"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:28","type":""}],"src":"14:179:28"},{"body":{"nodeType":"YulBlock","src":"264:813:28","statements":[{"body":{"nodeType":"YulBlock","src":"313:24:28","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"322:5:28"},{"name":"array","nodeType":"YulIdentifier","src":"329:5:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"315:6:28"},"nodeType":"YulFunctionCall","src":"315:20:28"},"nodeType":"YulExpressionStatement","src":"315:20:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"292:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:28"},"nodeType":"YulFunctionCall","src":"288:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"307:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"284:3:28"},"nodeType":"YulFunctionCall","src":"284:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"277:6:28"},"nodeType":"YulFunctionCall","src":"277:35:28"},"nodeType":"YulIf","src":"274:2:28"},{"nodeType":"YulVariableDeclaration","src":"346:27:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"366:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"360:5:28"},"nodeType":"YulFunctionCall","src":"360:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"350:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"382:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"400:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"404:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"396:3:28"},"nodeType":"YulFunctionCall","src":"396:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"408:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"392:3:28"},"nodeType":"YulFunctionCall","src":"392:18:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"386:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"437:13:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"439:7:28"},"nodeType":"YulFunctionCall","src":"439:9:28"},"nodeType":"YulExpressionStatement","src":"439:9:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"425:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"433:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"422:2:28"},"nodeType":"YulFunctionCall","src":"422:14:28"},"nodeType":"YulIf","src":"419:2:28"},{"nodeType":"YulVariableDeclaration","src":"459:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"479:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"473:5:28"},"nodeType":"YulFunctionCall","src":"473:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"463:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"491:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"501:4:28","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"495:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"514:71:28","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"540:6:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"556:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"564:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:28"},"nodeType":"YulFunctionCall","src":"552:17:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"575:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"571:3:28"},"nodeType":"YulFunctionCall","src":"571:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"548:3:28"},"nodeType":"YulFunctionCall","src":"548:31:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"536:3:28"},"nodeType":"YulFunctionCall","src":"536:44:28"},{"name":"_2","nodeType":"YulIdentifier","src":"582:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"532:3:28"},"nodeType":"YulFunctionCall","src":"532:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"518:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"644:13:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"646:7:28"},"nodeType":"YulFunctionCall","src":"646:9:28"},"nodeType":"YulExpressionStatement","src":"646:9:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"603:10:28"},{"name":"_1","nodeType":"YulIdentifier","src":"615:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"600:2:28"},"nodeType":"YulFunctionCall","src":"600:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"623:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"635:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"620:2:28"},"nodeType":"YulFunctionCall","src":"620:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"597:2:28"},"nodeType":"YulFunctionCall","src":"597:46:28"},"nodeType":"YulIf","src":"594:2:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"673:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"677:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"666:6:28"},"nodeType":"YulFunctionCall","src":"666:22:28"},"nodeType":"YulExpressionStatement","src":"666:22:28"},{"nodeType":"YulAssignment","src":"697:15:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"706:6:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"697:5:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"728:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"736:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"721:6:28"},"nodeType":"YulFunctionCall","src":"721:22:28"},"nodeType":"YulExpressionStatement","src":"721:22:28"},{"body":{"nodeType":"YulBlock","src":"793:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"802:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"805:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"795:6:28"},"nodeType":"YulFunctionCall","src":"795:12:28"},"nodeType":"YulExpressionStatement","src":"795:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"766:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"774:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:28"},"nodeType":"YulFunctionCall","src":"762:19:28"},{"name":"_2","nodeType":"YulIdentifier","src":"783:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:28"},"nodeType":"YulFunctionCall","src":"758:28:28"},{"name":"end","nodeType":"YulIdentifier","src":"788:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"755:2:28"},"nodeType":"YulFunctionCall","src":"755:37:28"},"nodeType":"YulIf","src":"752:2:28"},{"nodeType":"YulVariableDeclaration","src":"818:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"827:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"822:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"887:87:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"916:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"924:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"912:3:28"},"nodeType":"YulFunctionCall","src":"912:14:28"},{"name":"_2","nodeType":"YulIdentifier","src":"928:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"908:3:28"},"nodeType":"YulFunctionCall","src":"908:23:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"947:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"955:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"943:3:28"},"nodeType":"YulFunctionCall","src":"943:14:28"},{"name":"_2","nodeType":"YulIdentifier","src":"959:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"939:3:28"},"nodeType":"YulFunctionCall","src":"939:23:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"933:5:28"},"nodeType":"YulFunctionCall","src":"933:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"901:6:28"},"nodeType":"YulFunctionCall","src":"901:63:28"},"nodeType":"YulExpressionStatement","src":"901:63:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"848:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"851:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"845:2:28"},"nodeType":"YulFunctionCall","src":"845:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"859:19:28","statements":[{"nodeType":"YulAssignment","src":"861:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"870:1:28"},{"name":"_2","nodeType":"YulIdentifier","src":"873:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"866:3:28"},"nodeType":"YulFunctionCall","src":"866:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"861:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"841:3:28","statements":[]},"src":"837:137:28"},{"body":{"nodeType":"YulBlock","src":"1008:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1037:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"1045:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1033:3:28"},"nodeType":"YulFunctionCall","src":"1033:19:28"},{"name":"_2","nodeType":"YulIdentifier","src":"1054:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1029:3:28"},"nodeType":"YulFunctionCall","src":"1029:28:28"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1022:6:28"},"nodeType":"YulFunctionCall","src":"1022:39:28"},"nodeType":"YulExpressionStatement","src":"1022:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"989:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"992:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"986:2:28"},"nodeType":"YulFunctionCall","src":"986:13:28"},"nodeType":"YulIf","src":"983:2:28"}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"238:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"246:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"254:5:28","type":""}],"src":"198:879:28"},{"body":{"nodeType":"YulBlock","src":"1144:117:28","statements":[{"nodeType":"YulAssignment","src":"1154:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1169:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1163:5:28"},"nodeType":"YulFunctionCall","src":"1163:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1154:5:28"}]},{"body":{"nodeType":"YulBlock","src":"1239:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1248:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1251:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1241:6:28"},"nodeType":"YulFunctionCall","src":"1241:12:28"},"nodeType":"YulExpressionStatement","src":"1241:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1198:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1209:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1224:3:28","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"1229:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1220:3:28"},"nodeType":"YulFunctionCall","src":"1220:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1233:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1216:3:28"},"nodeType":"YulFunctionCall","src":"1216:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1205:3:28"},"nodeType":"YulFunctionCall","src":"1205:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1195:2:28"},"nodeType":"YulFunctionCall","src":"1195:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1188:6:28"},"nodeType":"YulFunctionCall","src":"1188:50:28"},"nodeType":"YulIf","src":"1185:2:28"}]},"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1123:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:28","type":""}],"src":"1082:179:28"},{"body":{"nodeType":"YulBlock","src":"1326:102:28","statements":[{"nodeType":"YulAssignment","src":"1336:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1351:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1345:5:28"},"nodeType":"YulFunctionCall","src":"1345:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1336:5:28"}]},{"body":{"nodeType":"YulBlock","src":"1406:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1418:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1408:6:28"},"nodeType":"YulFunctionCall","src":"1408:12:28"},"nodeType":"YulExpressionStatement","src":"1408:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1380:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1391:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1398:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1387:3:28"},"nodeType":"YulFunctionCall","src":"1387:16:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1377:2:28"},"nodeType":"YulFunctionCall","src":"1377:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1370:6:28"},"nodeType":"YulFunctionCall","src":"1370:35:28"},"nodeType":"YulIf","src":"1367:2:28"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1305:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1316:5:28","type":""}],"src":"1266:162:28"},{"body":{"nodeType":"YulBlock","src":"1733:1058:28","statements":[{"body":{"nodeType":"YulBlock","src":"1780:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1789:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"1797:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1782:6:28"},"nodeType":"YulFunctionCall","src":"1782:22:28"},"nodeType":"YulExpressionStatement","src":"1782:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1754:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1763:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1750:3:28"},"nodeType":"YulFunctionCall","src":"1750:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1775:3:28","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1746:3:28"},"nodeType":"YulFunctionCall","src":"1746:33:28"},"nodeType":"YulIf","src":"1743:2:28"},{"nodeType":"YulAssignment","src":"1815:52:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1825:31:28"},"nodeType":"YulFunctionCall","src":"1825:42:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1815:6:28"}]},{"nodeType":"YulAssignment","src":"1876:61:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1922:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1933:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:28"},"nodeType":"YulFunctionCall","src":"1918:18:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1886:31:28"},"nodeType":"YulFunctionCall","src":"1886:51:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1876:6:28"}]},{"nodeType":"YulAssignment","src":"1946:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1966:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:28"},"nodeType":"YulFunctionCall","src":"1962:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1956:5:28"},"nodeType":"YulFunctionCall","src":"1956:25:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1946:6:28"}]},{"nodeType":"YulAssignment","src":"1990:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2010:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2021:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2006:3:28"},"nodeType":"YulFunctionCall","src":"2006:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2000:5:28"},"nodeType":"YulFunctionCall","src":"2000:25:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1990:6:28"}]},{"nodeType":"YulAssignment","src":"2034:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2080:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2091:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2076:3:28"},"nodeType":"YulFunctionCall","src":"2076:19:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2044:31:28"},"nodeType":"YulFunctionCall","src":"2044:52:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2034:6:28"}]},{"nodeType":"YulAssignment","src":"2105:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2151:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2162:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2147:3:28"},"nodeType":"YulFunctionCall","src":"2147:19:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2115:31:28"},"nodeType":"YulFunctionCall","src":"2115:52:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2105:6:28"}]},{"nodeType":"YulAssignment","src":"2176:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2233:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:28"},"nodeType":"YulFunctionCall","src":"2218:19:28"}],"functionName":{"name":"abi_decode_t_uint128_fromMemory","nodeType":"YulIdentifier","src":"2186:31:28"},"nodeType":"YulFunctionCall","src":"2186:52:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2176:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2247:40:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2271:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2282:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2267:3:28"},"nodeType":"YulFunctionCall","src":"2267:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2261:5:28"},"nodeType":"YulFunctionCall","src":"2261:26:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2251:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2330:26:28","statements":[{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"2339:6:28"},{"name":"value7","nodeType":"YulIdentifier","src":"2347:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2332:6:28"},"nodeType":"YulFunctionCall","src":"2332:22:28"},"nodeType":"YulExpressionStatement","src":"2332:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2302:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2318:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2322:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2314:3:28"},"nodeType":"YulFunctionCall","src":"2314:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2326:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2310:3:28"},"nodeType":"YulFunctionCall","src":"2310:18:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2299:2:28"},"nodeType":"YulFunctionCall","src":"2299:30:28"},"nodeType":"YulIf","src":"2296:2:28"},{"nodeType":"YulAssignment","src":"2365:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2410:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2421:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2406:3:28"},"nodeType":"YulFunctionCall","src":"2406:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2430:7:28"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"2375:30:28"},"nodeType":"YulFunctionCall","src":"2375:63:28"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2365:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2447:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2473:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2484:3:28","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:28"},"nodeType":"YulFunctionCall","src":"2469:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2463:5:28"},"nodeType":"YulFunctionCall","src":"2463:26:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2451:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2534:26:28","statements":[{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"2543:6:28"},{"name":"value8","nodeType":"YulIdentifier","src":"2551:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2536:6:28"},"nodeType":"YulFunctionCall","src":"2536:22:28"},"nodeType":"YulExpressionStatement","src":"2536:22:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2504:8:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2522:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2526:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2518:3:28"},"nodeType":"YulFunctionCall","src":"2518:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2530:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2514:3:28"},"nodeType":"YulFunctionCall","src":"2514:18:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2501:2:28"},"nodeType":"YulFunctionCall","src":"2501:32:28"},"nodeType":"YulIf","src":"2498:2:28"},{"nodeType":"YulAssignment","src":"2569:75:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2614:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2625:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2610:3:28"},"nodeType":"YulFunctionCall","src":"2610:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2636:7:28"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"2579:30:28"},"nodeType":"YulFunctionCall","src":"2579:65:28"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"2569:6:28"}]},{"nodeType":"YulAssignment","src":"2653:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2697:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2708:3:28","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2693:3:28"},"nodeType":"YulFunctionCall","src":"2693:19:28"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"2663:29:28"},"nodeType":"YulFunctionCall","src":"2663:50:28"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"2653:6:28"}]},{"nodeType":"YulAssignment","src":"2722:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2769:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2780:3:28","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2765:3:28"},"nodeType":"YulFunctionCall","src":"2765:19:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2733:31:28"},"nodeType":"YulFunctionCall","src":"2733:52:28"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"2722:7:28"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1618:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1629:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1641:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1649:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1657:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1665:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1673:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1681:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1689:6:28","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1697:6:28","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1705:6:28","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1713:6:28","type":""},{"name":"value10","nodeType":"YulTypedName","src":"1721:7:28","type":""}],"src":"1433:1358:28"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let length := mload(offset)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let _2 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), not(31))), _2)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, _2) }\n        {\n            mstore(add(add(memPtr, i), _2), mload(add(add(offset, i), _2)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(memPtr, length), _2), 0)\n        }\n    }\n    function abi_decode_t_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(128, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1724t_contract$_IERC20_$1724t_uint256t_uint256t_addresst_addresst_uint128t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(value4, value4) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_t_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_t_uint128_fromMemory(add(headStart, 192))\n        let offset := mload(add(headStart, 224))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(value7, value7) }\n        value7 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 256))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(value8, value8) }\n        value8 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value9 := abi_decode_t_uint8_fromMemory(add(headStart, 288))\n        value10 := abi_decode_t_address_fromMemory(add(headStart, 320))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405260006009553480156200001757600080fd5b5060405162004aed38038062004aed8339810160408190526200003a916200032d565b85856001600160801b0316858581600390805190602001906200005f92919062000197565b5080516200007590600490602084019062000197565b505060058054601260ff19909116179055506200009f42826200011f602090811b62001e8717901c565b60805250606090811b6001600160601b031990811660a0528c821b811660c0528b821b811660e0526101008b90526101208a90529088901b1661014052600880546001600160a01b0319166001600160a01b0383161790556200010e8262000181602090811b62001efb17901c565b505050505050505050505062000434565b6000828201838110156200017a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001cf57600085556200021a565b82601f10620001ea57805160ff19168380011785556200021a565b828001600101855582156200021a579182015b828111156200021a578251825591602001919060010190620001fd565b50620002289291506200022c565b5090565b5b808211156200022857600081556001016200022d565b80516001600160a01b03811681146200025b57600080fd5b919050565b600082601f83011262000271578081fd5b81516001600160401b03808211156200028657fe5b6040516020601f8401601f1916820181018381118382101715620002a657fe5b80604052508194508382528681858801011115620002c357600080fd5b600092505b83831015620002e75785830181015182840182015291820191620002c8565b83831115620002f95760008185840101525b5050505092915050565b80516001600160801b03811681146200025b57600080fd5b805160ff811681146200025b57600080fd5b60008060008060008060008060008060006101608c8e0312156200034f578687fd5b6200035a8c62000243565b9a506200036a60208d0162000243565b995060408c0151985060608c015197506200038860808d0162000243565b96506200039860a08d0162000243565b9550620003a860c08d0162000303565b60e08d01519095506001600160401b03811115620003c4578485fd5b620003d28e828f0162000260565b6101008e015190955090506001600160401b03811115620003f1578384fd5b620003ff8e828f0162000260565b935050620004116101208d016200031b565b9150620004226101408d0162000243565b90509295989b509295989b9093969950565b60805160a05160601c60c05160601c60e05160601c61010051610120516101405160601c614618620004d560003980610f4f52806110ff5250806108115280610ad15280611bbe5250806107b352806108395280610c2a5280611be3525080610ffc52806110c852508061090c5280610a67528061138a52508061142752806118b4525080610f2b528061389252806138d7528061390452506146186000f3fe608060405234801561001057600080fd5b50600436106103365760003560e01c8063919cd40f116101b2578063b2f4201d116100f9578063d505accf116100a2578063dde43cba1161007c578063dde43cba14610623578063f11b81881461062b578063f1cc432a1461064d578063f713d8a81461066057610336565b8063d505accf146105ea578063dc937e1c146105fd578063dd62ed3e1461061057610336565b8063c3863ada116100d3578063c3863ada146105c7578063c3cda520146105cf578063cbcbb507146105e257610336565b8063b2f4201d1461058e578063b9844d8d146105a1578063c2ffbb91146105b457610336565b8063a457c2d71161015b578063aaf5eb6811610135578063aaf5eb6814610560578063adc9772e14610568578063b2a5dbfa1461057b57610336565b8063a457c2d714610532578063a9059cbb14610545578063aa9fbe021461055857610336565b8063981b24d01161018c578063981b24d01461050457806399248ea7146105175780639a99b4f01461051f57610336565b8063919cd40f146104ec578063946776cd146104f457806395d89b41146104fc57610336565b8063395093511161028157806372b49d631161022a5780637bb73c97116102045780637bb73c97146104ab5780637e90d7ef146104be5780638129fc1c146104d15780638dbefee2146104d957610336565b806372b49d6314610493578063781603761461049b578063787a08a6146104a357610336565b80635c19a95c1161025b5780635c19a95c1461045a5780636f50458d1461046d57806370a082311461048057610336565b8063395093511461041e57806341cbf54a146104315780635b3cc0cf1461043957610336565b806330adf81f116102e35780633373ee4c116102bd5780633373ee4c146103fb578063359c4a961461040e5780633644e5151461041657610336565b806330adf81f146103c9578063312f6b83146103d1578063313ce567146103e657610336565b806318160ddd1161031457806318160ddd146103995780631e9a6950146103a157806323b872dd146103b657610336565b806306fdde031461033b578063091030c314610359578063095ea7b314610379575b600080fd5b610343610673565b60405161035091906141a8565b60405180910390f35b61036c610367366004613c82565b610727565b604051610350919061409d565b61038c610387366004613dcc565b610739565b6040516103509190614092565b61036c610757565b6103b46103af366004613dcc565b61075d565b005b61038c6103c4366004613cce565b61099f565b61036c610a41565b6103d9610a65565b604051610350919061401a565b6103ee610a89565b6040516103509190614417565b61036c610409366004613c9c565b610a92565b61036c610acf565b61036c610af3565b61038c61042c366004613dcc565b610af9565b61036c610b54565b61044c610447366004613dcc565b610b78565b6040516103509291906143c7565b6103b4610468366004613c82565b610bbf565b6103d961047b366004613d72565b610bda565b61036c61048e366004613c82565b610bfc565b61036c610c28565b610343610c4c565b6103b4610c85565b61036c6104b9366004613c82565b610cfe565b61036c6104cc366004613c82565b610d10565b6103b4610d22565b61036c6104e7366004613c82565b610e60565b61036c610f29565b6103d9610f4d565b610343610f71565b61036c610512366004613f27565b610ff0565b6103d9610ffa565b6103b461052d366004613dcc565b61101e565b61038c610540366004613dcc565b611190565b61038c610553366004613dcc565b611205565b61036c611219565b6103ee61123d565b6103b4610576366004613dcc565b611242565b6103b4610589366004613e87565b61140f565b61036c61059c366004613d72565b611631565b61036c6105af366004613c82565b611659565b61036c6105c2366004613df5565b61166b565b6103d9611694565b6103b46105dd366004613e30565b6116b0565b6103d96118b2565b6103b46105f8366004613d09565b6118d6565b6103b461060b366004613d72565b611af2565b61036c61061e366004613c9c565b611b01565b61036c611b39565b61063e610639366004613c82565b611b3e565b604051610350939291906143ea565b61036c61065b366004613f3f565b611b82565b6103b461066e366004613d9b565b611c84565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061074d610746611f2f565b8484611f33565b5060015b92915050565b60025490565b8061079d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b60405180910390fd5b336000908152603e60205260409020546107d7817f0000000000000000000000000000000000000000000000000000000000000000611e87565b421161080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614229565b7f000000000000000000000000000000000000000000000000000000000000000061086461085d837f0000000000000000000000000000000000000000000000000000000000000000611e87565b429061207a565b111561089c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061433c565b60006108a733610bfc565b905060008184116108b857836108ba565b815b90506108c8338360016120bc565b506108d3338261217a565b6108dd828261207a565b6108f257336000908152603e60205260408120555b61093373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836122c4565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d983604051610990919061409d565b60405180910390a35050505050565b60006109ac848484612351565b610a36846109b8611f2f565b610a31856040518060600160405280602881526020016144d46028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610a03611f2f565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919061245e565b611f33565b5060015b9392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60435481565b600061074d610b06611f2f565b84610a318560016000610b17611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490611e87565b7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b610bcb3382600061250f565b610bd73382600161250f565b50565b600080610be683612692565b92505050610bf484826126cc565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b610c8e33610bfc565b610cc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614373565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b60076020526000908152604090205481565b603d6020526000908152604090205481565b6000610d2c612704565b90506009548111610d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806144fc602e913960400191505060405180910390fd5b6009819055467f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610db7610673565b8051602091820120604080518082018252600181527f31000000000000000000000000000000000000000000000000000000000000009084015251610e2393927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101614151565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206043555050565b60408051600180825281830190925260009160609190816020015b610e83613bf0565b815260200190600190039081610e7b57905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610ec885610bfc565b8152602001610ed5610757565b81525081600081518110610ee557fe5b6020026020010181905250610a3a610efd8483612709565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d602052604090205490611e87565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b6000610751610757565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006110343361102d33610bfc565b60006120bc565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83146110655782611067565b815b90506110b3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e540000000000000000000000000000000000008152508461245e9092919063ffffffff16565b336000908152603d60205260409020556111257f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051611182919061409d565b60405180910390a350505050565b600061074d61119d611f2f565b84610a31856040518060600160405280602581526020016145be60259139600160006111c7611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919061245e565b600061074d611212611f2f565b8484612351565b7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b601281565b80611279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b600061128483610bfc565b9050600061129b843084611296610757565b6128cc565b90508015611333577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7684826040516112d492919061406c565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d602052604090205461130c9082611e87565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b6113406000848685611b82565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e602052604090205561137084846129a5565b6113b273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051611182919061409d565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461147e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906142ce565b60005b8181101561162c576000603c600085858581811061149b57fe5b90506060020160400160208101906114b39190613c82565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506115328484848181106114fe57fe5b90506060020160400160208101906115169190613c82565b8286868681811061152357fe5b90506060020160200135612ad6565b5083838381811061153f57fe5b6115559260206060909202019081019150613ef7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061159d57fe5b90506060020160400160208101906115b59190613c82565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106115f857fe5b61160e9260206060909202019081019150613ef7565b60405161161b91906143aa565b60405180910390a250600101611481565b505050565b600080600061163f84612692565b509150915061165082828743612bd5565b95945050505050565b60446020526000908152604090205481565b600080600061167984612692565b509150915061168a82828888612bd5565b9695505050505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60007f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d8787876040516020016116e994939291906140e7565b604051602081830303815290604052805190602001209050600060435482604051602001611718929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611755949392919061418a565b6020604051602081039080840390855afa158015611777573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166117ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b8642111561188f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b61189b818a600061250f565b6118a7818a600161250f565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff8716611923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614305565b8342111561195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b73ffffffffffffffffffffffffffffffffffffffff871660009081526044602090815260408083205460435491519093926119c4917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918d918d918d9189918e91016140a6565b604051602081830303815290604052805190602001206040516020016119eb929190613fe4565b60405160208183030381529060405280519060200120905060018186868660405160008152602001604052604051611a26949392919061418a565b6020604051602081039080840390855afa158015611a48573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b611ac1826001611e87565b73ffffffffffffffffffffffffffffffffffffffff8a166000908152604460205260409020556118a7898989611f33565b611afd33838361250f565b5050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600281565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e602052604081205480611bb7576000915050610bf4565b6000611c0d7f0000000000000000000000000000000000000000000000000000000000000000611c07427f000000000000000000000000000000000000000000000000000000000000000061207a565b9061207a565b905081811115611c205760009150611c7a565b6000878211611c2f5787611c31565b425b905082811015611c4657829350505050610bf4565b611c76611c538887611e87565b611c70611c608887612f22565b611c6a8b86612f22565b90611e87565b90612f95565b9250505b5095945050505050565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611cb457fe5b8888604051602001611cca959493929190614118565b604051602081830303815290604052805190602001209050600060435482604051602001611cf9929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611d36949392919061418a565b6020604051602081039080840390855afa158015611d58573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b86421115611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b611e7b818b8b61250f565b50505050505050505050565b600082820183811015610a3a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806145706024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661200b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061446b6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000610a3a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061245e565b6000806120cd853086611296610757565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d6020526040812054919250906121019083611e87565b905081156116505783156121385773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76868360405161216992919061406c565b60405180910390a195945050505050565b73ffffffffffffffffffffffffffffffffffffffff82166121e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061452a6021913960400191505060405180910390fd5b6121f282600083612fd7565b61223c816040518060600160405280602281526020016144496022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205560025461226f908261207a565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261162c90849061315b565b600061235c84610bfc565b905061236a848260016120bc565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461244d5760006123a984610bfc565b90506123b7848260016120bc565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e60205260409020546123ea81858785611b82565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e6020526040902055828414801561241e57508015155b1561244a5773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b612458848484613399565b50505050565b60008184841115612507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124cc5781810151838201526020016124b4565b50505050905090810190601f1680156124f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b73ffffffffffffffffffffffffffffffffffffffff821661259157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f44454c454741544545000000000000000000000000000000604482015290519081900360640190fd5b600061259c82612692565b9250505060006125ab85610bfc565b905060006125b986846126cc565b73ffffffffffffffffffffffffffffffffffffffff878116600090815260208690526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918816919091179055905061261a81868487613569565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd866040518082600181111561267a57fe5b815260200191505060405180910390a3505050505050565b60008080808460018111156126a357fe5b14156126b957506006915060079050603f6126c5565b50604091506041905060425b9193909250565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526020839052604081205490911680610a3a5783915050610751565b600290565b600080805b835181101561282f576000603c600086848151811061272957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160009081206001810154815488519294506127b4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a90889081106127a357fe5b602002602001015160400151613861565b905061282361281c8785815181106127c857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613975565b8590611e87565b9350505060010161270e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261245890859061315b565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280612914888588612ad6565b90508083146129995786156129315761292e878285613975565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b9061299090859061409d565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216612a2757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612a3360008383612fd7565b600254612a409082611e87565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054612a739082611e87565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415612b1757509050610a3a565b8454600090612b3b9084906fffffffffffffffffffffffffffffffff168488613861565b9050828114612b9c578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051612b93919061409d565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b600043821115612c4657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e56414c49445f424c4f434b5f4e554d424552000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020859052604090205480612c8257612c7a84610bfc565b915050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850184529091529020546fffffffffffffffffffffffffffffffff168310612d6a5773ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909401835292905220546fffffffffffffffffffffffffffffffff700100000000000000000000000000000000909104169050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083208380529091529020546fffffffffffffffffffffffffffffffff16831015612dbc576000915050610bf4565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b81811115612ec1576002828203048103612dfa613c27565b5073ffffffffffffffffffffffffffffffffffffffff8716600090815260208a815260408083208484528252918290208251808401909352546fffffffffffffffffffffffffffffffff8082168085527001000000000000000000000000000000009092041691830191909152871415612e9057602001516fffffffffffffffffffffffffffffffff169450610bf49350505050565b80516fffffffffffffffffffffffffffffffff16871115612eb357819350612eba565b6001820392505b5050612de2565b5073ffffffffffffffffffffffffffffffffffffffff851660009081526020888152604080832093835292905220546fffffffffffffffffffffffffffffffff70010000000000000000000000000000000090910416915050949350505050565b600082612f3157506000610751565b82820282848281612f3e57fe5b0414610a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144b36021913960400191505060405180910390fd5b6000610a3a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613997565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603f6020526040808220548584168352912054908216911681613015578491505b73ffffffffffffffffffffffffffffffffffffffff81166130335750825b6130408282856000613569565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526042602052604080822054878416835291205490821691168161307e578691505b73ffffffffffffffffffffffffffffffffffffffff811661309c5750845b6130a98282876001613569565b60085473ffffffffffffffffffffffffffffffffffffffff168015613151576040517f4a39314900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690634a3931499061311e908b908b908b9060040161403b565b600060405180830381600087803b15801561313857600080fd5b505af115801561314c573d6000803e3d6000fd5b505050505b5050505050505050565b61317a8273ffffffffffffffffffffffffffffffffffffffff16613a16565b6131e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061324e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613211565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146132b0576040519150601f19603f3d011682016040523d82523d6000602084013e6132b5565b606091505b50915091508161332657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156124585780806020019051602081101561334257600080fd5b5051612458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614594602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316613405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061454b6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216613471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806144266023913960400191505060405180910390fd5b61347c838383612fd7565b6134c68160405180606001604052806026815260200161448d6026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546135029082611e87565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156135a257612458565b6000806135ae83612692565b50909250905073ffffffffffffffffffffffffffffffffffffffff8616156137095773ffffffffffffffffffffffffffffffffffffffff8616600090815260208290526040812054801561367a5773ffffffffffffffffffffffffffffffffffffffff88166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169150613686565b61368388610bfc565b91505b61369c84848a85613697818c61207a565b613a4f565b73ffffffffffffffffffffffffffffffffffffffff88167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f6136de848961207a565b87604051808381526020018260018111156136f557fe5b81526020019250505060405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8516156138595773ffffffffffffffffffffffffffffffffffffffff851660009081526020829052604081205480156137cf5773ffffffffffffffffffffffffffffffffffffffff87166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1691506137db565b6137d887610bfc565b91505b6137ec84848985613697818c611e87565b73ffffffffffffffffffffffffffffffffffffffff87167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f61382e8489611e87565b876040518083815260200182600181111561384557fe5b81526020019250505060405180910390a250505b505050505050565b600083158061386e575081155b8061388a575042836fffffffffffffffffffffffffffffffff16145b806138c757507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156138d3575083610bf4565b60007f000000000000000000000000000000000000000000000000000000000000000042116139025742613924565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000613944826fffffffffffffffffffffffffffffffff871661207a565b905061396a87611c6a86611c70670de0b6b3a76400006139648c88612f22565b90612f22565b979650505050505050565b6000610bf4670de0b6b3a7640000611c70613990868661207a565b8790612f22565b60008183613a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156124cc5781810151838201526020016124b4565b506000838581613a0c57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610bf4575050151592915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020858152604080832054918890529091204391908115801590613ad457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82016000908152602082905260409020546fffffffffffffffffffffffffffffffff8481169116145b15613b3d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201600090815260208290526040902080546fffffffffffffffffffffffffffffffff808716700100000000000000000000000000000000029116179055613151565b6040805180820182526fffffffffffffffffffffffffffffffff8086168252868116602080840191825260008781528682528581209451855493518516700100000000000000000000000000000000029085167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909416939093179093169190911790925573ffffffffffffffffffffffffffffffffffffffff8916815290899052206001830190555050505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c2357600080fd5b803560028110610c2357600080fd5b803560ff81168114610c2357600080fd5b600060208284031215613c93578081fd5b610a3a82613c3e565b60008060408385031215613cae578081fd5b613cb783613c3e565b9150613cc560208401613c3e565b90509250929050565b600080600060608486031215613ce2578081fd5b613ceb84613c3e565b9250613cf960208501613c3e565b9150604084013590509250925092565b600080600080600080600060e0888a031215613d23578283fd5b613d2c88613c3e565b9650613d3a60208901613c3e565b95506040880135945060608801359350613d5660808901613c71565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215613d84578182fd5b613d8d83613c3e565b9150613cc560208401613c62565b600080600080600080600060e0888a031215613db5578283fd5b613dbe88613c3e565b9650613d3a60208901613c62565b60008060408385031215613dde578182fd5b613de783613c3e565b946020939093013593505050565b600080600060608486031215613e09578283fd5b613e1284613c3e565b925060208401359150613e2760408501613c62565b90509250925092565b60008060008060008060c08789031215613e48578182fd5b613e5187613c3e565b95506020870135945060408701359350613e6d60608801613c71565b92506080870135915060a087013590509295509295509295565b60008060208385031215613e99578182fd5b823567ffffffffffffffff80821115613eb0578384fd5b818501915085601f830112613ec3578384fd5b813581811115613ed1578485fd5b866020606083028501011115613ee5578485fd5b60209290920196919550909350505050565b600060208284031215613f08578081fd5b81356fffffffffffffffffffffffffffffffff81168114610a3a578182fd5b600060208284031215613f38578081fd5b5035919050565b60008060008060808587031215613f54578182fd5b8435935060208501359250613f6b60408601613c3e565b9396929550929360600135925050565b60008151808452815b81811015613fa057602081850181015186830182015201613f84565b81811115613fb15782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b90815260200190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845273ffffffffffffffffffffffffffffffffffffffff9290921660208401526040830152606082015260800190565b94855273ffffffffffffffffffffffffffffffffffffffff93909316602085015260408401919091526060830152608082015260a00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252610a3a6020830184613f7b565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f45585049524154494f4e0000000000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4e4f4e434500000000000000000000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4f574e455200000000000000000000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122056b5555bacaae1562ed6be2c504831bb08ff42a5655f21035cc1d7f6f36f33d264736f6c63430007050033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4AED CODESIZE SUB DUP1 PUSH3 0x4AED DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x32D JUMP JUMPDEST DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x5F SWAP3 SWAP2 SWAP1 PUSH3 0x197 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x75 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x197 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x12 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH3 0x9F TIMESTAMP DUP3 PUSH3 0x11F PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x1E87 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0xA0 MSTORE DUP13 DUP3 SHL DUP2 AND PUSH1 0xC0 MSTORE DUP12 DUP3 SHL DUP2 AND PUSH1 0xE0 MSTORE PUSH2 0x100 DUP12 SWAP1 MSTORE PUSH2 0x120 DUP11 SWAP1 MSTORE SWAP1 DUP9 SWAP1 SHL AND PUSH2 0x140 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x10E DUP3 PUSH3 0x181 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x1EFB OR SWAP1 SHR JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x434 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x17A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1CF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x21A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1EA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x21A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x21A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x21A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1FD JUMP JUMPDEST POP PUSH3 0x228 SWAP3 SWAP2 POP PUSH3 0x22C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x228 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x22D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x271 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x286 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x2A6 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP2 SWAP5 POP DUP4 DUP3 MSTORE DUP7 DUP2 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x2E7 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x2C8 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH3 0x34F JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH3 0x35A DUP13 PUSH3 0x243 JUMP JUMPDEST SWAP11 POP PUSH3 0x36A PUSH1 0x20 DUP14 ADD PUSH3 0x243 JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD MLOAD SWAP9 POP PUSH1 0x60 DUP13 ADD MLOAD SWAP8 POP PUSH3 0x388 PUSH1 0x80 DUP14 ADD PUSH3 0x243 JUMP JUMPDEST SWAP7 POP PUSH3 0x398 PUSH1 0xA0 DUP14 ADD PUSH3 0x243 JUMP JUMPDEST SWAP6 POP PUSH3 0x3A8 PUSH1 0xC0 DUP14 ADD PUSH3 0x303 JUMP JUMPDEST PUSH1 0xE0 DUP14 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3C4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x3D2 DUP15 DUP3 DUP16 ADD PUSH3 0x260 JUMP JUMPDEST PUSH2 0x100 DUP15 ADD MLOAD SWAP1 SWAP6 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3F1 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x3FF DUP15 DUP3 DUP16 ADD PUSH3 0x260 JUMP JUMPDEST SWAP4 POP POP PUSH3 0x411 PUSH2 0x120 DUP14 ADD PUSH3 0x31B JUMP JUMPDEST SWAP2 POP PUSH3 0x422 PUSH2 0x140 DUP14 ADD PUSH3 0x243 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x4618 PUSH3 0x4D5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xF4F MSTORE DUP1 PUSH2 0x10FF MSTORE POP DUP1 PUSH2 0x811 MSTORE DUP1 PUSH2 0xAD1 MSTORE DUP1 PUSH2 0x1BBE MSTORE POP DUP1 PUSH2 0x7B3 MSTORE DUP1 PUSH2 0x839 MSTORE DUP1 PUSH2 0xC2A MSTORE DUP1 PUSH2 0x1BE3 MSTORE POP DUP1 PUSH2 0xFFC MSTORE DUP1 PUSH2 0x10C8 MSTORE POP DUP1 PUSH2 0x90C MSTORE DUP1 PUSH2 0xA67 MSTORE DUP1 PUSH2 0x138A MSTORE POP DUP1 PUSH2 0x1427 MSTORE DUP1 PUSH2 0x18B4 MSTORE POP DUP1 PUSH2 0xF2B MSTORE DUP1 PUSH2 0x3892 MSTORE DUP1 PUSH2 0x38D7 MSTORE DUP1 PUSH2 0x3904 MSTORE POP PUSH2 0x4618 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x336 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919CD40F GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB2F4201D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDDE43CBA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xF713D8A8 EQ PUSH2 0x660 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xDC937E1C EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x610 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xC3863ADA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x5E2 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xB2F4201D EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0xB9844D8D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xC2FFBB91 EQ PUSH2 0x5B4 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x57B JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xAA9FBE02 EQ PUSH2 0x558 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x981B24D0 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x51F JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x919CD40F EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4FC JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x281 JUMPI DUP1 PUSH4 0x72B49D63 GT PUSH2 0x22A JUMPI DUP1 PUSH4 0x7BB73C97 GT PUSH2 0x204 JUMPI DUP1 PUSH4 0x7BB73C97 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x4D9 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x78160376 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x4A3 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x5C19A95C GT PUSH2 0x25B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x6F50458D EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x480 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x41CBF54A EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x5B3CC0CF EQ PUSH2 0x439 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x3373EE4C GT PUSH2 0x2BD JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x416 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x314 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x343 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH2 0x38C PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x757 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CCE JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH2 0x36C PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x401A JUMP JUMPDEST PUSH2 0x3EE PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4417 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xACF JUMP JUMPDEST PUSH2 0x36C PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x36C PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x343 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x343 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F27 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH2 0x38C PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x123D JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E87 JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST PUSH2 0x36C PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF5 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3E30 JUMP JUMPDEST PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x63E PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43EA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x65B CALLDATASIZE PUSH1 0x4 PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x700 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x746 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D7 DUP2 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4229 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x864 PUSH2 0x85D DUP4 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x207A JUMP JUMPDEST GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A7 CALLER PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x8B8 JUMPI DUP4 PUSH2 0x8BA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x8C8 CALLER DUP4 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH2 0x8D3 CALLER DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH2 0x8DD DUP3 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x8F2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x933 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x22C4 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH2 0xA36 DUP5 PUSH2 0x9B8 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44D4 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA03 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0xB06 PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xB17 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH2 0xBCB CALLER DUP3 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0xBD7 CALLER DUP3 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE6 DUP4 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBF4 DUP5 DUP3 PUSH2 0x26CC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xC8E CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4373 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2C PUSH2 0x2704 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44FC PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE CHAINID PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0xDB7 PUSH2 0x673 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP5 ADD MSTORE MLOAD PUSH2 0xE23 SWAP4 SWAP3 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 DUP7 SWAP2 ADDRESS SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x43 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE83 PUSH2 0x3BF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE7B JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC8 DUP6 PUSH2 0xBFC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED5 PUSH2 0x757 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEE5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0xA3A PUSH2 0xEFD DUP5 DUP4 PUSH2 0x2709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x751 PUSH2 0x757 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 CALLER PUSH2 0x102D CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0x1065 JUMPI DUP3 PUSH2 0x1067 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x10B3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x245E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1125 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x119D PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45BE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x11C7 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x1212 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1284 DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x129B DUP5 ADDRESS DUP5 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x28CC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12D4 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x130C SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1340 PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1370 DUP5 DUP5 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x13B2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x42CE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x149B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1532 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x14FE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1516 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1523 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2AD6 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x153F JUMPI INVALID JUMPDEST PUSH2 0x1555 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x159D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x15F8 JUMPI INVALID JUMPDEST PUSH2 0x160E SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x43AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x1481 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x163F DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1650 DUP3 DUP3 DUP8 NUMBER PUSH2 0x2BD5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1679 DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x168A DUP3 DUP3 DUP9 DUP9 PUSH2 0x2BD5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1718 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1755 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x189B DUP2 DUP11 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x18A7 DUP2 DUP11 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4305 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x43 SLOAD SWAP2 MLOAD SWAP1 SWAP4 SWAP3 PUSH2 0x19C4 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP10 SWAP2 DUP15 SWAP2 ADD PUSH2 0x40A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19EB SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH2 0x1AC1 DUP3 PUSH1 0x1 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18A7 DUP10 DUP10 DUP10 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x1AFD CALLER DUP4 DUP4 PUSH2 0x250F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1BB7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D PUSH32 0x0 PUSH2 0x1C07 TIMESTAMP PUSH32 0x0 PUSH2 0x207A JUMP JUMPDEST SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x1C2F JUMPI DUP8 PUSH2 0x1C31 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1C46 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x1C53 DUP9 DUP8 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1C70 PUSH2 0x1C60 DUP9 DUP8 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x1C6A DUP12 DUP7 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 PUSH2 0x2F95 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP9 DUP9 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CB4 JUMPI INVALID JUMPDEST DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CCA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D36 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1DD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1E36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x1E7B DUP2 DUP12 DUP12 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4570 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x200B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x446B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20CD DUP6 ADDRESS DUP7 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x2101 SWAP1 DUP4 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1650 JUMPI DUP4 ISZERO PUSH2 0x2138 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2169 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x21E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x452A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21F2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4449 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x226F SWAP1 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x162C SWAP1 DUP5 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x236A DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x244D JUMPI PUSH1 0x0 PUSH2 0x23A9 DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x23B7 DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23EA DUP2 DUP6 DUP8 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x241E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x244A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x2458 DUP5 DUP5 DUP5 PUSH2 0x3399 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2591 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F44454C454741544545000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x259C DUP3 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 PUSH2 0x25AB DUP6 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25B9 DUP7 DUP5 PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x261A DUP2 DUP7 DUP5 DUP8 PUSH2 0x3569 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D51C8E11BD570DB1734C8EC775785330E77007FEED45C43B608EF33FF914BD DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x267A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x26B9 JUMPI POP PUSH1 0x6 SWAP2 POP PUSH1 0x7 SWAP1 POP PUSH1 0x3F PUSH2 0x26C5 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH1 0x41 SWAP1 POP PUSH1 0x42 JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0xA3A JUMPI DUP4 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x282F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2729 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x27B4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x27A3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 PUSH2 0x281C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x27C8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3975 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x270E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2458 SWAP1 DUP6 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x2914 DUP9 DUP6 DUP9 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x2999 JUMPI DUP7 ISZERO PUSH2 0x2931 JUMPI PUSH2 0x292E DUP8 DUP3 DUP6 PUSH2 0x3975 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x2990 SWAP1 DUP6 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2A27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2A33 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A40 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A73 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x2B17 JUMPI POP SWAP1 POP PUSH2 0xA3A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B3B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x2B9C JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B93 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 GT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F424C4F434B5F4E554D424552000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x2C82 JUMPI PUSH2 0x2C7A DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT PUSH2 0x2D6A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP1 POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x2DBC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB DIV DUP2 SUB PUSH2 0x2DFA PUSH2 0x3C27 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP6 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 EQ ISZERO PUSH2 0x2E90 JUMPI PUSH1 0x20 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP PUSH2 0xBF4 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x2EB3 JUMPI DUP2 SWAP4 POP PUSH2 0x2EBA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x2DE2 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F31 JUMPI POP PUSH1 0x0 PUSH2 0x751 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2F3E JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44B3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x3997 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3F PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x3015 JUMPI DUP5 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3033 JUMPI POP DUP3 JUMPDEST PUSH2 0x3040 DUP3 DUP3 DUP6 PUSH1 0x0 PUSH2 0x3569 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP8 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x307E JUMPI DUP7 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x309C JUMPI POP DUP5 JUMPDEST PUSH2 0x30A9 DUP3 DUP3 DUP8 PUSH1 0x1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x3151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4A39314900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x4A393149 SWAP1 PUSH2 0x311E SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x403B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x317A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A16 JUMP JUMPDEST PUSH2 0x31E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x324E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3211 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3326 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2458 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4594 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x3405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x454B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x3471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4426 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347C DUP4 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x34C6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x448D PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3502 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35A2 JUMPI PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35AE DUP4 PUSH2 0x2692 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO PUSH2 0x3709 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x367A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x3683 DUP9 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x369C DUP5 DUP5 DUP11 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x3A4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x36DE DUP5 DUP10 PUSH2 0x207A JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x36F5 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x3859 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x37CF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x37D8 DUP8 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x37EC DUP5 DUP5 DUP10 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x382E DUP5 DUP10 PUSH2 0x1E87 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3845 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x386E JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x388A JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x38C7 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x38D3 JUMPI POP DUP4 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x3902 JUMPI TIMESTAMP PUSH2 0x3924 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3944 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x207A JUMP JUMPDEST SWAP1 POP PUSH2 0x396A DUP8 PUSH2 0x1C6A DUP7 PUSH2 0x1C70 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3964 DUP13 DUP9 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x2F22 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C70 PUSH2 0x3990 DUP7 DUP7 PUSH2 0x207A JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3A00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x3A0C JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xBF4 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP9 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3AD4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x3B3D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR SWAP1 SSTORE PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP7 DUP3 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD SWAP4 MLOAD DUP6 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP2 MSTORE SWAP1 DUP10 SWAP1 MSTORE KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C93 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA3A DUP3 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CAE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CB7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CE2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CEB DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH2 0x3CF9 PUSH1 0x20 DUP6 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D23 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3D2C DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3D56 PUSH1 0x80 DUP10 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D84 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3D8D DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3DB5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3DBE DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DDE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3DE7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E09 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3E12 DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3E27 PUSH1 0x40 DUP6 ADD PUSH2 0x3C62 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3E48 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3E51 DUP8 PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3E6D PUSH1 0x60 DUP9 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E99 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3EB0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3EC3 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3ED1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x3EE5 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA3A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F38 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F54 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x3F6B PUSH1 0x40 DUP7 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FA0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3F84 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3FB1 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F7B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F45585049524154494F4E0000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4E4F4E434500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F574E455200000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 JUMP 0xB5 SSTORE JUMPDEST 0xAC 0xAA 0xE1 JUMP 0x2E 0xD6 0xBE 0x2C POP 0x48 BALANCE 0xBB ADDMOD SELFDESTRUCT TIMESTAMP 0xA5 PUSH6 0x5F21035CC1D7 0xF6 RETURN PUSH16 0x33D264736F6C63430007050033000000 ","sourceMap":"908:16142:24:-:0;;;924:1:25;881:44;;2928:657:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3282:15;3299:20;-1:-1:-1;;;;;1068:185:20;3244:4:24;3250:6;2080:4:4;2072:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2094:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2120:9:4;:14;;2132:2;-1:-1:-1;;2120:14:4;;;;;;-1:-1:-1;1167:41:20;:15;1187:20;1167:19;;;;;;;:41;;:::i;:::-;1148:60;;-1:-1:-1;1214:34:20;;;;-1:-1:-1;;;;;;1214:34:20;;;;;3327:26:24;;;;;::::2;::::0;3359;;;;;::::2;::::0;3391:34:::2;::::0;;;3431:30:::2;::::0;;;3467:28;;;;;::::2;::::0;3501:15:::2;:43:::0;;-1:-1:-1;;;;;;3501:43:24::2;-1:-1:-1::0;;;;;3501:43:24;::::2;;::::0;;3550:30:::2;3571:8:::0;3550:20:::2;;::::0;;::::2;;;:30:::0;::::2;:::i;:::-;2928:657:::0;;;;;;;;;;;908:16142;;913:162:19;971:7;998:5;;;1017:6;;;;1009:46;;;;;-1:-1:-1;;;1009:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:1;913:162;-1:-1:-1;;;913:162:19:o;10009:88:4:-;10069:9;:21;;-1:-1:-1;;10069:21:4;;;;;;;;;;;;10009:88::o;908:16142:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;908:16142:24;;;-1:-1:-1;908:16142:24;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:28;95:13;;-1:-1:-1;;;;;137:31:28;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:879::-;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;360:13;;-1:-1:-1;;;;;422:14:28;;;419:2;;;439:9;419:2;479;473:9;501:4;575:2;552:17;;-1:-1:-1;;548:31:28;536:44;;532:53;;600:18;;;620:22;;;597:46;594:2;;;646:9;594:2;677:10;673:2;666:22;;706:6;697:15;;736:6;728;721:22;788:3;783:2;774:6;766;762:19;758:28;755:37;752:2;;;805:1;802;795:12;752:2;827:1;818:10;;837:137;851:6;848:1;845:13;837:137;;;943:14;;;939:23;;933:30;912:14;;;908:23;;901:63;866:10;;;;837:137;;;992:6;989:1;986:13;983:2;;;1059:1;1054:2;1045:6;1037;1033:19;1029:28;1022:39;983:2;;;;;264:813;;;;:::o;1082:179::-;1163:13;;-1:-1:-1;;;;;1205:31:28;;1195:42;;1185:2;;1251:1;1248;1241:12;1266:162;1345:13;;1398:4;1387:16;;1377:27;;1367:2;;1418:1;1415;1408:12;1433:1358;;;;;;;;;;;;1775:3;1763:9;1754:7;1750:23;1746:33;1743:2;;;1797:6;1789;1782:22;1743:2;1825:42;1857:9;1825:42;:::i;:::-;1815:52;;1886:51;1933:2;1922:9;1918:18;1886:51;:::i;:::-;1876:61;;1977:2;1966:9;1962:18;1956:25;1946:35;;2021:2;2010:9;2006:18;2000:25;1990:35;;2044:52;2091:3;2080:9;2076:19;2044:52;:::i;:::-;2034:62;;2115:52;2162:3;2151:9;2147:19;2115:52;:::i;:::-;2105:62;;2186:52;2233:3;2222:9;2218:19;2186:52;:::i;:::-;2282:3;2267:19;;2261:26;2176:62;;-1:-1:-1;;;;;;2299:30:28;;2296:2;;;2347:6;2339;2332:22;2296:2;2375:63;2430:7;2421:6;2410:9;2406:22;2375:63;:::i;:::-;2484:3;2469:19;;2463:26;2365:73;;-1:-1:-1;2463:26:28;-1:-1:-1;;;;;;2501:32:28;;2498:2;;;2551:6;2543;2536:22;2498:2;2579:65;2636:7;2625:8;2614:9;2610:24;2579:65;:::i;:::-;2569:75;;;2663:50;2708:3;2697:9;2693:19;2663:50;:::i;:::-;2653:60;;2733:52;2780:3;2769:9;2765:19;2733:52;:::i;:::-;2722:63;;1733:1058;;;;;;;;;;;;;;:::o;:::-;908:16142:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15994:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:147:28","statements":[{"nodeType":"YulAssignment","src":"75:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:28"},"nodeType":"YulFunctionCall","src":"84:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:28"}]},{"body":{"nodeType":"YulBlock","src":"190:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:28"},"nodeType":"YulFunctionCall","src":"192:12:28"},"nodeType":"YulExpressionStatement","src":"192:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"144:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:28"},"nodeType":"YulFunctionCall","src":"133:54:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:28"},"nodeType":"YulFunctionCall","src":"123:65:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:28"},"nodeType":"YulFunctionCall","src":"116:73:28"},"nodeType":"YulIf","src":"113:2:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:28","type":""}],"src":"14:198:28"},{"body":{"nodeType":"YulBlock","src":"281:94:28","statements":[{"nodeType":"YulAssignment","src":"291:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"313:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"300:12:28"},"nodeType":"YulFunctionCall","src":"300:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"291:5:28"}]},{"body":{"nodeType":"YulBlock","src":"353:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"362:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"365:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"355:6:28"},"nodeType":"YulFunctionCall","src":"355:12:28"},"nodeType":"YulExpressionStatement","src":"355:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"342:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"349:1:28","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"339:2:28"},"nodeType":"YulFunctionCall","src":"339:12:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"332:6:28"},"nodeType":"YulFunctionCall","src":"332:20:28"},"nodeType":"YulIf","src":"329:2:28"}]},"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"260:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"271:5:28","type":""}],"src":"217:158:28"},{"body":{"nodeType":"YulBlock","src":"429:109:28","statements":[{"nodeType":"YulAssignment","src":"439:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"461:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"448:12:28"},"nodeType":"YulFunctionCall","src":"448:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"439:5:28"}]},{"body":{"nodeType":"YulBlock","src":"516:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:28"},"nodeType":"YulFunctionCall","src":"518:12:28"},"nodeType":"YulExpressionStatement","src":"518:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"490:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"501:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"508:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"497:3:28"},"nodeType":"YulFunctionCall","src":"497:16:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"487:2:28"},"nodeType":"YulFunctionCall","src":"487:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"480:6:28"},"nodeType":"YulFunctionCall","src":"480:35:28"},"nodeType":"YulIf","src":"477:2:28"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"419:5:28","type":""}],"src":"380:158:28"},{"body":{"nodeType":"YulBlock","src":"613:128:28","statements":[{"body":{"nodeType":"YulBlock","src":"659:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"668:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"676:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"661:6:28"},"nodeType":"YulFunctionCall","src":"661:22:28"},"nodeType":"YulExpressionStatement","src":"661:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"634:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"630:3:28"},"nodeType":"YulFunctionCall","src":"630:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"655:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"626:3:28"},"nodeType":"YulFunctionCall","src":"626:32:28"},"nodeType":"YulIf","src":"623:2:28"},{"nodeType":"YulAssignment","src":"694:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"725:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"704:20:28"},"nodeType":"YulFunctionCall","src":"704:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"694:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"579:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"590:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"602:6:28","type":""}],"src":"543:198:28"},{"body":{"nodeType":"YulBlock","src":"833:187:28","statements":[{"body":{"nodeType":"YulBlock","src":"879:26:28","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"888:6:28"},{"name":"value1","nodeType":"YulIdentifier","src":"896:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"881:6:28"},"nodeType":"YulFunctionCall","src":"881:22:28"},"nodeType":"YulExpressionStatement","src":"881:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"854:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"850:3:28"},"nodeType":"YulFunctionCall","src":"850:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"875:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"846:3:28"},"nodeType":"YulFunctionCall","src":"846:32:28"},"nodeType":"YulIf","src":"843:2:28"},{"nodeType":"YulAssignment","src":"914:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"945:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"924:20:28"},"nodeType":"YulFunctionCall","src":"924:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"914:6:28"}]},{"nodeType":"YulAssignment","src":"964:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"999:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1010:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"995:3:28"},"nodeType":"YulFunctionCall","src":"995:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"974:20:28"},"nodeType":"YulFunctionCall","src":"974:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"964:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"791:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"802:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"814:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"822:6:28","type":""}],"src":"746:274:28"},{"body":{"nodeType":"YulBlock","src":"1129:238:28","statements":[{"body":{"nodeType":"YulBlock","src":"1175:26:28","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1184:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"1192:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1177:6:28"},"nodeType":"YulFunctionCall","src":"1177:22:28"},"nodeType":"YulExpressionStatement","src":"1177:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1150:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1146:3:28"},"nodeType":"YulFunctionCall","src":"1146:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1171:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1142:3:28"},"nodeType":"YulFunctionCall","src":"1142:32:28"},"nodeType":"YulIf","src":"1139:2:28"},{"nodeType":"YulAssignment","src":"1210:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1220:20:28"},"nodeType":"YulFunctionCall","src":"1220:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:28"}]},{"nodeType":"YulAssignment","src":"1260:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1295:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1306:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1291:3:28"},"nodeType":"YulFunctionCall","src":"1291:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1270:20:28"},"nodeType":"YulFunctionCall","src":"1270:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1260:6:28"}]},{"nodeType":"YulAssignment","src":"1319:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1346:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1357:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1342:3:28"},"nodeType":"YulFunctionCall","src":"1342:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1329:12:28"},"nodeType":"YulFunctionCall","src":"1329:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1319:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1079:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1090:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1102:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1110:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1118:6:28","type":""}],"src":"1025:342:28"},{"body":{"nodeType":"YulBlock","src":"1542:452:28","statements":[{"body":{"nodeType":"YulBlock","src":"1589:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1598:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"1606:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1591:6:28"},"nodeType":"YulFunctionCall","src":"1591:22:28"},"nodeType":"YulExpressionStatement","src":"1591:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1563:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1572:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1559:3:28"},"nodeType":"YulFunctionCall","src":"1559:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1584:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1555:3:28"},"nodeType":"YulFunctionCall","src":"1555:33:28"},"nodeType":"YulIf","src":"1552:2:28"},{"nodeType":"YulAssignment","src":"1624:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1655:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1634:20:28"},"nodeType":"YulFunctionCall","src":"1634:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1624:6:28"}]},{"nodeType":"YulAssignment","src":"1674:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1709:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1720:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:28"},"nodeType":"YulFunctionCall","src":"1705:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1684:20:28"},"nodeType":"YulFunctionCall","src":"1684:40:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1674:6:28"}]},{"nodeType":"YulAssignment","src":"1733:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1760:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1771:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1756:3:28"},"nodeType":"YulFunctionCall","src":"1756:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1743:12:28"},"nodeType":"YulFunctionCall","src":"1743:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1733:6:28"}]},{"nodeType":"YulAssignment","src":"1784:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1811:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1822:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1807:3:28"},"nodeType":"YulFunctionCall","src":"1807:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1794:12:28"},"nodeType":"YulFunctionCall","src":"1794:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1784:6:28"}]},{"nodeType":"YulAssignment","src":"1835:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1868:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1879:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:28"},"nodeType":"YulFunctionCall","src":"1864:19:28"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"1845:18:28"},"nodeType":"YulFunctionCall","src":"1845:39:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1835:6:28"}]},{"nodeType":"YulAssignment","src":"1893:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1920:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1931:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1916:3:28"},"nodeType":"YulFunctionCall","src":"1916:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1903:12:28"},"nodeType":"YulFunctionCall","src":"1903:33:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1893:6:28"}]},{"nodeType":"YulAssignment","src":"1945:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1972:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1983:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1968:3:28"},"nodeType":"YulFunctionCall","src":"1968:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1955:12:28"},"nodeType":"YulFunctionCall","src":"1955:33:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1945:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1460:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1471:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1483:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1491:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1499:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1507:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1515:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1523:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1531:6:28","type":""}],"src":"1372:622:28"},{"body":{"nodeType":"YulBlock","src":"2103:200:28","statements":[{"body":{"nodeType":"YulBlock","src":"2149:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2158:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2166:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2151:6:28"},"nodeType":"YulFunctionCall","src":"2151:22:28"},"nodeType":"YulExpressionStatement","src":"2151:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2124:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2133:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2120:3:28"},"nodeType":"YulFunctionCall","src":"2120:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2145:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2116:3:28"},"nodeType":"YulFunctionCall","src":"2116:32:28"},"nodeType":"YulIf","src":"2113:2:28"},{"nodeType":"YulAssignment","src":"2184:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2215:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2194:20:28"},"nodeType":"YulFunctionCall","src":"2194:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2184:6:28"}]},{"nodeType":"YulAssignment","src":"2234:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2293:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:28"},"nodeType":"YulFunctionCall","src":"2278:18:28"}],"functionName":{"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulIdentifier","src":"2244:33:28"},"nodeType":"YulFunctionCall","src":"2244:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2234:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_enum$_DelegationType_$82","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2061:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2072:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2084:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2092:6:28","type":""}],"src":"1999:304:28"},{"body":{"nodeType":"YulBlock","src":"2495:465:28","statements":[{"body":{"nodeType":"YulBlock","src":"2542:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2551:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"2559:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2544:6:28"},"nodeType":"YulFunctionCall","src":"2544:22:28"},"nodeType":"YulExpressionStatement","src":"2544:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2516:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2525:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2512:3:28"},"nodeType":"YulFunctionCall","src":"2512:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2537:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2508:3:28"},"nodeType":"YulFunctionCall","src":"2508:33:28"},"nodeType":"YulIf","src":"2505:2:28"},{"nodeType":"YulAssignment","src":"2577:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2608:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2587:20:28"},"nodeType":"YulFunctionCall","src":"2587:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2577:6:28"}]},{"nodeType":"YulAssignment","src":"2627:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2686:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:28"},"nodeType":"YulFunctionCall","src":"2671:18:28"}],"functionName":{"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulIdentifier","src":"2637:33:28"},"nodeType":"YulFunctionCall","src":"2637:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2627:6:28"}]},{"nodeType":"YulAssignment","src":"2699:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2726:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2737:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2722:3:28"},"nodeType":"YulFunctionCall","src":"2722:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2709:12:28"},"nodeType":"YulFunctionCall","src":"2709:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2699:6:28"}]},{"nodeType":"YulAssignment","src":"2750:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2777:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2773:3:28"},"nodeType":"YulFunctionCall","src":"2773:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2760:12:28"},"nodeType":"YulFunctionCall","src":"2760:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2750:6:28"}]},{"nodeType":"YulAssignment","src":"2801:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2845:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:28"},"nodeType":"YulFunctionCall","src":"2830:19:28"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"2811:18:28"},"nodeType":"YulFunctionCall","src":"2811:39:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2801:6:28"}]},{"nodeType":"YulAssignment","src":"2859:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2886:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2897:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2882:3:28"},"nodeType":"YulFunctionCall","src":"2882:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2869:12:28"},"nodeType":"YulFunctionCall","src":"2869:33:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2859:6:28"}]},{"nodeType":"YulAssignment","src":"2911:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2938:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2949:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2934:3:28"},"nodeType":"YulFunctionCall","src":"2934:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2921:12:28"},"nodeType":"YulFunctionCall","src":"2921:33:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2911:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_enum$_DelegationType_$82t_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2413:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2424:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2436:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2444:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2452:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2460:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2468:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2476:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2484:6:28","type":""}],"src":"2308:652:28"},{"body":{"nodeType":"YulBlock","src":"3052:179:28","statements":[{"body":{"nodeType":"YulBlock","src":"3098:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3107:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3115:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3100:6:28"},"nodeType":"YulFunctionCall","src":"3100:22:28"},"nodeType":"YulExpressionStatement","src":"3100:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3073:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3082:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3069:3:28"},"nodeType":"YulFunctionCall","src":"3069:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3094:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3065:3:28"},"nodeType":"YulFunctionCall","src":"3065:32:28"},"nodeType":"YulIf","src":"3062:2:28"},{"nodeType":"YulAssignment","src":"3133:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3164:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3143:20:28"},"nodeType":"YulFunctionCall","src":"3143:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3133:6:28"}]},{"nodeType":"YulAssignment","src":"3183:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3210:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3221:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3206:3:28"},"nodeType":"YulFunctionCall","src":"3206:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3193:12:28"},"nodeType":"YulFunctionCall","src":"3193:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3183:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3010:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3021:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3033:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3041:6:28","type":""}],"src":"2965:266:28"},{"body":{"nodeType":"YulBlock","src":"3357:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"3403:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3412:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3420:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3405:6:28"},"nodeType":"YulFunctionCall","src":"3405:22:28"},"nodeType":"YulExpressionStatement","src":"3405:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3378:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3387:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3374:3:28"},"nodeType":"YulFunctionCall","src":"3374:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3399:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3370:3:28"},"nodeType":"YulFunctionCall","src":"3370:32:28"},"nodeType":"YulIf","src":"3367:2:28"},{"nodeType":"YulAssignment","src":"3438:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3469:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3448:20:28"},"nodeType":"YulFunctionCall","src":"3448:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3438:6:28"}]},{"nodeType":"YulAssignment","src":"3488:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3515:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3526:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3511:3:28"},"nodeType":"YulFunctionCall","src":"3511:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3498:12:28"},"nodeType":"YulFunctionCall","src":"3498:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3488:6:28"}]},{"nodeType":"YulAssignment","src":"3539:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3598:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:28"},"nodeType":"YulFunctionCall","src":"3583:18:28"}],"functionName":{"name":"abi_decode_t_enum$_DelegationType","nodeType":"YulIdentifier","src":"3549:33:28"},"nodeType":"YulFunctionCall","src":"3549:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3539:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$82","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3307:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3318:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3330:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3338:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3346:6:28","type":""}],"src":"3236:372:28"},{"body":{"nodeType":"YulBlock","src":"3766:392:28","statements":[{"body":{"nodeType":"YulBlock","src":"3813:26:28","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3822:6:28"},{"name":"value4","nodeType":"YulIdentifier","src":"3830:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3815:6:28"},"nodeType":"YulFunctionCall","src":"3815:22:28"},"nodeType":"YulExpressionStatement","src":"3815:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3787:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3783:3:28"},"nodeType":"YulFunctionCall","src":"3783:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3808:3:28","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3779:3:28"},"nodeType":"YulFunctionCall","src":"3779:33:28"},"nodeType":"YulIf","src":"3776:2:28"},{"nodeType":"YulAssignment","src":"3848:41:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3879:9:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3858:20:28"},"nodeType":"YulFunctionCall","src":"3858:31:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3848:6:28"}]},{"nodeType":"YulAssignment","src":"3898:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3925:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3936:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3921:3:28"},"nodeType":"YulFunctionCall","src":"3921:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3908:12:28"},"nodeType":"YulFunctionCall","src":"3908:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3898:6:28"}]},{"nodeType":"YulAssignment","src":"3949:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3987:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3972:3:28"},"nodeType":"YulFunctionCall","src":"3972:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3959:12:28"},"nodeType":"YulFunctionCall","src":"3959:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3949:6:28"}]},{"nodeType":"YulAssignment","src":"4000:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4033:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4044:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4029:3:28"},"nodeType":"YulFunctionCall","src":"4029:18:28"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"4010:18:28"},"nodeType":"YulFunctionCall","src":"4010:38:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4000:6:28"}]},{"nodeType":"YulAssignment","src":"4057:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4095:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4080:3:28"},"nodeType":"YulFunctionCall","src":"4080:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4067:12:28"},"nodeType":"YulFunctionCall","src":"4067:33:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4057:6:28"}]},{"nodeType":"YulAssignment","src":"4109:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4136:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4147:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4132:3:28"},"nodeType":"YulFunctionCall","src":"4132:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4119:12:28"},"nodeType":"YulFunctionCall","src":"4119:33:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4109:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3692:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3703:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3715:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3723:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3731:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3739:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3747:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3755:6:28","type":""}],"src":"3613:545:28"},{"body":{"nodeType":"YulBlock","src":"4304:563:28","statements":[{"body":{"nodeType":"YulBlock","src":"4350:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4359:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4367:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4352:6:28"},"nodeType":"YulFunctionCall","src":"4352:22:28"},"nodeType":"YulExpressionStatement","src":"4352:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4325:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4321:3:28"},"nodeType":"YulFunctionCall","src":"4321:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4317:3:28"},"nodeType":"YulFunctionCall","src":"4317:32:28"},"nodeType":"YulIf","src":"4314:2:28"},{"nodeType":"YulVariableDeclaration","src":"4385:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4412:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4399:12:28"},"nodeType":"YulFunctionCall","src":"4399:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4389:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4431:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4441:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4435:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4486:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4495:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4503:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4488:6:28"},"nodeType":"YulFunctionCall","src":"4488:22:28"},"nodeType":"YulExpressionStatement","src":"4488:22:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4474:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4482:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4471:2:28"},"nodeType":"YulFunctionCall","src":"4471:14:28"},"nodeType":"YulIf","src":"4468:2:28"},{"nodeType":"YulVariableDeclaration","src":"4521:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4535:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4546:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4531:3:28"},"nodeType":"YulFunctionCall","src":"4531:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4525:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4601:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4610:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4618:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4603:6:28"},"nodeType":"YulFunctionCall","src":"4603:22:28"},"nodeType":"YulExpressionStatement","src":"4603:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4580:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4584:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4576:3:28"},"nodeType":"YulFunctionCall","src":"4576:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4591:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4572:3:28"},"nodeType":"YulFunctionCall","src":"4572:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4565:6:28"},"nodeType":"YulFunctionCall","src":"4565:35:28"},"nodeType":"YulIf","src":"4562:2:28"},{"nodeType":"YulVariableDeclaration","src":"4636:30:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4663:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4650:12:28"},"nodeType":"YulFunctionCall","src":"4650:16:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4640:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4693:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4702:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4710:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4695:6:28"},"nodeType":"YulFunctionCall","src":"4695:22:28"},"nodeType":"YulExpressionStatement","src":"4695:22:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4681:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4689:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4678:2:28"},"nodeType":"YulFunctionCall","src":"4678:14:28"},"nodeType":"YulIf","src":"4675:2:28"},{"body":{"nodeType":"YulBlock","src":"4780:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4789:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4797:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4782:6:28"},"nodeType":"YulFunctionCall","src":"4782:22:28"},"nodeType":"YulExpressionStatement","src":"4782:22:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4742:2:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:28","type":"","value":"0x60"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4746:3:28"},"nodeType":"YulFunctionCall","src":"4746:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:28"},"nodeType":"YulFunctionCall","src":"4738:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"4766:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4734:3:28"},"nodeType":"YulFunctionCall","src":"4734:35:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4771:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4731:2:28"},"nodeType":"YulFunctionCall","src":"4731:48:28"},"nodeType":"YulIf","src":"4728:2:28"},{"nodeType":"YulAssignment","src":"4815:21:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4829:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4825:3:28"},"nodeType":"YulFunctionCall","src":"4825:11:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4815:6:28"}]},{"nodeType":"YulAssignment","src":"4845:16:28","value":{"name":"length","nodeType":"YulIdentifier","src":"4855:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4845:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4262:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4273:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4285:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4293:6:28","type":""}],"src":"4163:704:28"},{"body":{"nodeType":"YulBlock","src":"4942:251:28","statements":[{"body":{"nodeType":"YulBlock","src":"4988:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4997:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5005:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4990:6:28"},"nodeType":"YulFunctionCall","src":"4990:22:28"},"nodeType":"YulExpressionStatement","src":"4990:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4963:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4959:3:28"},"nodeType":"YulFunctionCall","src":"4959:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4955:3:28"},"nodeType":"YulFunctionCall","src":"4955:32:28"},"nodeType":"YulIf","src":"4952:2:28"},{"nodeType":"YulVariableDeclaration","src":"5023:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5049:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5036:12:28"},"nodeType":"YulFunctionCall","src":"5036:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5027:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5137:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5146:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5154:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5139:6:28"},"nodeType":"YulFunctionCall","src":"5139:22:28"},"nodeType":"YulExpressionStatement","src":"5139:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5081:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5092:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5099:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5088:3:28"},"nodeType":"YulFunctionCall","src":"5088:46:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5078:2:28"},"nodeType":"YulFunctionCall","src":"5078:57:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5071:6:28"},"nodeType":"YulFunctionCall","src":"5071:65:28"},"nodeType":"YulIf","src":"5068:2:28"},{"nodeType":"YulAssignment","src":"5172:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"5182:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5172:6:28"}]}]},"name":"abi_decode_tuple_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4908:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4919:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4931:6:28","type":""}],"src":"4872:321:28"},{"body":{"nodeType":"YulBlock","src":"5268:120:28","statements":[{"body":{"nodeType":"YulBlock","src":"5314:26:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5323:6:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5331:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5316:6:28"},"nodeType":"YulFunctionCall","src":"5316:22:28"},"nodeType":"YulExpressionStatement","src":"5316:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5289:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5298:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5285:3:28"},"nodeType":"YulFunctionCall","src":"5285:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5310:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5281:3:28"},"nodeType":"YulFunctionCall","src":"5281:32:28"},"nodeType":"YulIf","src":"5278:2:28"},{"nodeType":"YulAssignment","src":"5349:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5372:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5359:12:28"},"nodeType":"YulFunctionCall","src":"5359:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5349:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5234:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5245:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5257:6:28","type":""}],"src":"5198:190:28"},{"body":{"nodeType":"YulBlock","src":"5514:282:28","statements":[{"body":{"nodeType":"YulBlock","src":"5561:26:28","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5570:6:28"},{"name":"value2","nodeType":"YulIdentifier","src":"5578:6:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5563:6:28"},"nodeType":"YulFunctionCall","src":"5563:22:28"},"nodeType":"YulExpressionStatement","src":"5563:22:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5535:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5544:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5531:3:28"},"nodeType":"YulFunctionCall","src":"5531:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5556:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5527:3:28"},"nodeType":"YulFunctionCall","src":"5527:33:28"},"nodeType":"YulIf","src":"5524:2:28"},{"nodeType":"YulAssignment","src":"5596:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5619:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5606:12:28"},"nodeType":"YulFunctionCall","src":"5606:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5596:6:28"}]},{"nodeType":"YulAssignment","src":"5638:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5676:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:28"},"nodeType":"YulFunctionCall","src":"5661:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5648:12:28"},"nodeType":"YulFunctionCall","src":"5648:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5638:6:28"}]},{"nodeType":"YulAssignment","src":"5689:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5724:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5735:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5720:3:28"},"nodeType":"YulFunctionCall","src":"5720:18:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5699:20:28"},"nodeType":"YulFunctionCall","src":"5699:40:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5689:6:28"}]},{"nodeType":"YulAssignment","src":"5748:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5775:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5786:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5771:3:28"},"nodeType":"YulFunctionCall","src":"5771:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5758:12:28"},"nodeType":"YulFunctionCall","src":"5758:32:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5748:6:28"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5456:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5467:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5479:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5487:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5495:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5503:6:28","type":""}],"src":"5393:403:28"},{"body":{"nodeType":"YulBlock","src":"5852:485:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5862:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5882:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5876:5:28"},"nodeType":"YulFunctionCall","src":"5876:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5866:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5904:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"5909:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5897:6:28"},"nodeType":"YulFunctionCall","src":"5897:19:28"},"nodeType":"YulExpressionStatement","src":"5897:19:28"},{"nodeType":"YulVariableDeclaration","src":"5925:12:28","value":{"name":"end","nodeType":"YulIdentifier","src":"5934:3:28"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5929:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5998:110:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6012:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6022:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6016:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6054:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"6059:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6050:3:28"},"nodeType":"YulFunctionCall","src":"6050:11:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6063:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:28"},"nodeType":"YulFunctionCall","src":"6046:20:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6082:5:28"},{"name":"i","nodeType":"YulIdentifier","src":"6089:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:28"},"nodeType":"YulFunctionCall","src":"6078:13:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6093:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6074:3:28"},"nodeType":"YulFunctionCall","src":"6074:22:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6068:5:28"},"nodeType":"YulFunctionCall","src":"6068:29:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6039:6:28"},"nodeType":"YulFunctionCall","src":"6039:59:28"},"nodeType":"YulExpressionStatement","src":"6039:59:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5957:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"5960:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5954:2:28"},"nodeType":"YulFunctionCall","src":"5954:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5968:21:28","statements":[{"nodeType":"YulAssignment","src":"5970:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5979:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5982:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5975:3:28"},"nodeType":"YulFunctionCall","src":"5975:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5970:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5950:3:28","statements":[]},"src":"5946:162:28"},{"body":{"nodeType":"YulBlock","src":"6142:64:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6171:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6176:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6167:3:28"},"nodeType":"YulFunctionCall","src":"6167:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"6185:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6163:3:28"},"nodeType":"YulFunctionCall","src":"6163:27:28"},{"name":"end","nodeType":"YulIdentifier","src":"6192:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6156:6:28"},"nodeType":"YulFunctionCall","src":"6156:40:28"},"nodeType":"YulExpressionStatement","src":"6156:40:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6123:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"6126:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6120:2:28"},"nodeType":"YulFunctionCall","src":"6120:13:28"},"nodeType":"YulIf","src":"6117:2:28"},{"nodeType":"YulAssignment","src":"6215:116:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6230:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6243:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6251:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6239:3:28"},"nodeType":"YulFunctionCall","src":"6239:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"6256:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6235:3:28"},"nodeType":"YulFunctionCall","src":"6235:88:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6226:3:28"},"nodeType":"YulFunctionCall","src":"6226:98:28"},{"kind":"number","nodeType":"YulLiteral","src":"6326:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6222:3:28"},"nodeType":"YulFunctionCall","src":"6222:109:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6215:3:28"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5829:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5836:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5844:3:28","type":""}],"src":"5801:536:28"},{"body":{"nodeType":"YulBlock","src":"6590:196:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6607:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6612:66:28","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6600:6:28"},"nodeType":"YulFunctionCall","src":"6600:79:28"},"nodeType":"YulExpressionStatement","src":"6600:79:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6699:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6704:1:28","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6695:3:28"},"nodeType":"YulFunctionCall","src":"6695:11:28"},{"name":"value0","nodeType":"YulIdentifier","src":"6708:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:28"},"nodeType":"YulFunctionCall","src":"6688:27:28"},"nodeType":"YulExpressionStatement","src":"6688:27:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6735:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6740:2:28","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:28"},"nodeType":"YulFunctionCall","src":"6731:12:28"},{"name":"value1","nodeType":"YulIdentifier","src":"6745:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6724:6:28"},"nodeType":"YulFunctionCall","src":"6724:28:28"},"nodeType":"YulExpressionStatement","src":"6724:28:28"},{"nodeType":"YulAssignment","src":"6761:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6772:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6777:2:28","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6768:3:28"},"nodeType":"YulFunctionCall","src":"6768:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6761:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6558:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6563:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6571:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6582:3:28","type":""}],"src":"6342:444:28"},{"body":{"nodeType":"YulBlock","src":"6892:125:28","statements":[{"nodeType":"YulAssignment","src":"6902:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6914:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6925:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6910:3:28"},"nodeType":"YulFunctionCall","src":"6910:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6902:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6944:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6959:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6967:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6955:3:28"},"nodeType":"YulFunctionCall","src":"6955:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6937:6:28"},"nodeType":"YulFunctionCall","src":"6937:74:28"},"nodeType":"YulExpressionStatement","src":"6937:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6861:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6872:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6883:4:28","type":""}],"src":"6791:226:28"},{"body":{"nodeType":"YulBlock","src":"7179:241:28","statements":[{"nodeType":"YulAssignment","src":"7189:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7201:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7212:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7197:3:28"},"nodeType":"YulFunctionCall","src":"7197:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7189:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"7224:52:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7234:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7228:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7292:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7307:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7315:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7303:3:28"},"nodeType":"YulFunctionCall","src":"7303:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7285:6:28"},"nodeType":"YulFunctionCall","src":"7285:34:28"},"nodeType":"YulExpressionStatement","src":"7285:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7339:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7350:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7335:3:28"},"nodeType":"YulFunctionCall","src":"7335:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7359:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7367:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7355:3:28"},"nodeType":"YulFunctionCall","src":"7355:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7328:6:28"},"nodeType":"YulFunctionCall","src":"7328:43:28"},"nodeType":"YulExpressionStatement","src":"7328:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7391:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7402:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:28"},"nodeType":"YulFunctionCall","src":"7387:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"7407:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7380:6:28"},"nodeType":"YulFunctionCall","src":"7380:34:28"},"nodeType":"YulExpressionStatement","src":"7380:34:28"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7132:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7143:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7151:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7159:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7170:4:28","type":""}],"src":"7022:398:28"},{"body":{"nodeType":"YulBlock","src":"7554:168:28","statements":[{"nodeType":"YulAssignment","src":"7564:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7576:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7587:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:28"},"nodeType":"YulFunctionCall","src":"7572:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7564:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7606:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7621:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7629:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7617:3:28"},"nodeType":"YulFunctionCall","src":"7617:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7599:6:28"},"nodeType":"YulFunctionCall","src":"7599:74:28"},"nodeType":"YulExpressionStatement","src":"7599:74:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7704:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7689:3:28"},"nodeType":"YulFunctionCall","src":"7689:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"7709:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7682:6:28"},"nodeType":"YulFunctionCall","src":"7682:34:28"},"nodeType":"YulExpressionStatement","src":"7682:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7515:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7526:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7534:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7545:4:28","type":""}],"src":"7425:297:28"},{"body":{"nodeType":"YulBlock","src":"7822:92:28","statements":[{"nodeType":"YulAssignment","src":"7832:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7844:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7855:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7840:3:28"},"nodeType":"YulFunctionCall","src":"7840:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7832:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7874:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7899:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7892:6:28"},"nodeType":"YulFunctionCall","src":"7892:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7885:6:28"},"nodeType":"YulFunctionCall","src":"7885:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7867:6:28"},"nodeType":"YulFunctionCall","src":"7867:41:28"},"nodeType":"YulExpressionStatement","src":"7867:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7791:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7802:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7813:4:28","type":""}],"src":"7727:187:28"},{"body":{"nodeType":"YulBlock","src":"8020:76:28","statements":[{"nodeType":"YulAssignment","src":"8030:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8042:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8053:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8038:3:28"},"nodeType":"YulFunctionCall","src":"8038:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8030:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8072:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"8083:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8065:6:28"},"nodeType":"YulFunctionCall","src":"8065:25:28"},"nodeType":"YulExpressionStatement","src":"8065:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7989:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8000:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8011:4:28","type":""}],"src":"7919:177:28"},{"body":{"nodeType":"YulBlock","src":"8342:373:28","statements":[{"nodeType":"YulAssignment","src":"8352:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8364:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8375:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8360:3:28"},"nodeType":"YulFunctionCall","src":"8360:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8352:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8395:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"8406:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8388:6:28"},"nodeType":"YulFunctionCall","src":"8388:25:28"},"nodeType":"YulExpressionStatement","src":"8388:25:28"},{"nodeType":"YulVariableDeclaration","src":"8422:52:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8432:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8426:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8494:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8505:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:28"},"nodeType":"YulFunctionCall","src":"8490:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8514:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8522:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8510:3:28"},"nodeType":"YulFunctionCall","src":"8510:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8483:6:28"},"nodeType":"YulFunctionCall","src":"8483:43:28"},"nodeType":"YulExpressionStatement","src":"8483:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:28"},"nodeType":"YulFunctionCall","src":"8542:18:28"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8566:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8574:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8562:3:28"},"nodeType":"YulFunctionCall","src":"8562:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8535:6:28"},"nodeType":"YulFunctionCall","src":"8535:43:28"},"nodeType":"YulExpressionStatement","src":"8535:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8598:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8609:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8594:3:28"},"nodeType":"YulFunctionCall","src":"8594:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"8614:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8587:6:28"},"nodeType":"YulFunctionCall","src":"8587:34:28"},"nodeType":"YulExpressionStatement","src":"8587:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8652:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:28"},"nodeType":"YulFunctionCall","src":"8637:19:28"},{"name":"value4","nodeType":"YulIdentifier","src":"8658:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8630:6:28"},"nodeType":"YulFunctionCall","src":"8630:35:28"},"nodeType":"YulExpressionStatement","src":"8630:35:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8685:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8696:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8681:3:28"},"nodeType":"YulFunctionCall","src":"8681:19:28"},{"name":"value5","nodeType":"YulIdentifier","src":"8702:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8674:6:28"},"nodeType":"YulFunctionCall","src":"8674:35:28"},"nodeType":"YulExpressionStatement","src":"8674:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8271:9:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8282:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8290:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8298:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8306:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8314:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8322:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8333:4:28","type":""}],"src":"8101:614:28"},{"body":{"nodeType":"YulBlock","src":"8905:255:28","statements":[{"nodeType":"YulAssignment","src":"8915:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8927:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8938:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8923:3:28"},"nodeType":"YulFunctionCall","src":"8923:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8915:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8958:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"8969:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8951:6:28"},"nodeType":"YulFunctionCall","src":"8951:25:28"},"nodeType":"YulExpressionStatement","src":"8951:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8996:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9007:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8992:3:28"},"nodeType":"YulFunctionCall","src":"8992:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9016:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9024:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9012:3:28"},"nodeType":"YulFunctionCall","src":"9012:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8985:6:28"},"nodeType":"YulFunctionCall","src":"8985:83:28"},"nodeType":"YulExpressionStatement","src":"8985:83:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9088:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9099:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9084:3:28"},"nodeType":"YulFunctionCall","src":"9084:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9104:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9077:6:28"},"nodeType":"YulFunctionCall","src":"9077:34:28"},"nodeType":"YulExpressionStatement","src":"9077:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9131:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9142:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9127:3:28"},"nodeType":"YulFunctionCall","src":"9127:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"9147:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9120:6:28"},"nodeType":"YulFunctionCall","src":"9120:34:28"},"nodeType":"YulExpressionStatement","src":"9120:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8850:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8861:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8869:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8877:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8885:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8896:4:28","type":""}],"src":"8720:440:28"},{"body":{"nodeType":"YulBlock","src":"9378:299:28","statements":[{"nodeType":"YulAssignment","src":"9388:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9400:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9411:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:28"},"nodeType":"YulFunctionCall","src":"9396:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9388:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9431:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"9442:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9424:6:28"},"nodeType":"YulFunctionCall","src":"9424:25:28"},"nodeType":"YulExpressionStatement","src":"9424:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9469:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9480:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9465:3:28"},"nodeType":"YulFunctionCall","src":"9465:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9489:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9497:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9485:3:28"},"nodeType":"YulFunctionCall","src":"9485:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9458:6:28"},"nodeType":"YulFunctionCall","src":"9458:83:28"},"nodeType":"YulExpressionStatement","src":"9458:83:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9561:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9572:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9557:3:28"},"nodeType":"YulFunctionCall","src":"9557:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9577:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9550:6:28"},"nodeType":"YulFunctionCall","src":"9550:34:28"},"nodeType":"YulExpressionStatement","src":"9550:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9604:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9615:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9600:3:28"},"nodeType":"YulFunctionCall","src":"9600:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"9620:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9593:6:28"},"nodeType":"YulFunctionCall","src":"9593:34:28"},"nodeType":"YulExpressionStatement","src":"9593:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9647:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9658:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9643:3:28"},"nodeType":"YulFunctionCall","src":"9643:19:28"},{"name":"value4","nodeType":"YulIdentifier","src":"9664:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9636:6:28"},"nodeType":"YulFunctionCall","src":"9636:35:28"},"nodeType":"YulExpressionStatement","src":"9636:35:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9315:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9326:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9334:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9342:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9350:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9358:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9369:4:28","type":""}],"src":"9165:512:28"},{"body":{"nodeType":"YulBlock","src":"9895:299:28","statements":[{"nodeType":"YulAssignment","src":"9905:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9917:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9928:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9913:3:28"},"nodeType":"YulFunctionCall","src":"9913:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9905:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9948:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"9959:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9941:6:28"},"nodeType":"YulFunctionCall","src":"9941:25:28"},"nodeType":"YulExpressionStatement","src":"9941:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9986:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9997:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9982:3:28"},"nodeType":"YulFunctionCall","src":"9982:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"10002:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9975:6:28"},"nodeType":"YulFunctionCall","src":"9975:34:28"},"nodeType":"YulExpressionStatement","src":"9975:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10040:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10025:3:28"},"nodeType":"YulFunctionCall","src":"10025:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"10045:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10018:6:28"},"nodeType":"YulFunctionCall","src":"10018:34:28"},"nodeType":"YulExpressionStatement","src":"10018:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10072:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10083:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10068:3:28"},"nodeType":"YulFunctionCall","src":"10068:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"10088:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:28"},"nodeType":"YulFunctionCall","src":"10061:34:28"},"nodeType":"YulExpressionStatement","src":"10061:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10115:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10126:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10111:3:28"},"nodeType":"YulFunctionCall","src":"10111:19:28"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10136:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10144:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10132:3:28"},"nodeType":"YulFunctionCall","src":"10132:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10104:6:28"},"nodeType":"YulFunctionCall","src":"10104:84:28"},"nodeType":"YulExpressionStatement","src":"10104:84:28"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9832:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9843:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9851:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9859:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9867:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9875:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9886:4:28","type":""}],"src":"9682:512:28"},{"body":{"nodeType":"YulBlock","src":"10380:217:28","statements":[{"nodeType":"YulAssignment","src":"10390:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10402:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10413:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10398:3:28"},"nodeType":"YulFunctionCall","src":"10398:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10390:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10433:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"10444:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10426:6:28"},"nodeType":"YulFunctionCall","src":"10426:25:28"},"nodeType":"YulExpressionStatement","src":"10426:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10482:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10467:3:28"},"nodeType":"YulFunctionCall","src":"10467:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10491:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10499:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10487:3:28"},"nodeType":"YulFunctionCall","src":"10487:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10460:6:28"},"nodeType":"YulFunctionCall","src":"10460:45:28"},"nodeType":"YulExpressionStatement","src":"10460:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10525:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10536:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10521:3:28"},"nodeType":"YulFunctionCall","src":"10521:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"10541:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10514:6:28"},"nodeType":"YulFunctionCall","src":"10514:34:28"},"nodeType":"YulExpressionStatement","src":"10514:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10568:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:28"},"nodeType":"YulFunctionCall","src":"10564:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"10584:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10557:6:28"},"nodeType":"YulFunctionCall","src":"10557:34:28"},"nodeType":"YulExpressionStatement","src":"10557:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10325:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10336:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10344:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10352:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10360:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10371:4:28","type":""}],"src":"10199:398:28"},{"body":{"nodeType":"YulBlock","src":"10721:100:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10738:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10749:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10731:6:28"},"nodeType":"YulFunctionCall","src":"10731:21:28"},"nodeType":"YulExpressionStatement","src":"10731:21:28"},{"nodeType":"YulAssignment","src":"10761:54:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10788:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10800:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10811:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10796:3:28"},"nodeType":"YulFunctionCall","src":"10796:18:28"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"10769:18:28"},"nodeType":"YulFunctionCall","src":"10769:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10761:4:28"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10690:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10701:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10712:4:28","type":""}],"src":"10602:219:28"},{"body":{"nodeType":"YulBlock","src":"10942:125:28","statements":[{"nodeType":"YulAssignment","src":"10952:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10964:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10975:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10960:3:28"},"nodeType":"YulFunctionCall","src":"10960:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10952:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10994:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11009:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11017:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11005:3:28"},"nodeType":"YulFunctionCall","src":"11005:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10987:6:28"},"nodeType":"YulFunctionCall","src":"10987:74:28"},"nodeType":"YulExpressionStatement","src":"10987:74:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10911:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10922:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10933:4:28","type":""}],"src":"10826:241:28"},{"body":{"nodeType":"YulBlock","src":"11195:125:28","statements":[{"nodeType":"YulAssignment","src":"11205:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11217:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11228:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11213:3:28"},"nodeType":"YulFunctionCall","src":"11213:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11205:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11247:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11262:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11270:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11258:3:28"},"nodeType":"YulFunctionCall","src":"11258:55:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11240:6:28"},"nodeType":"YulFunctionCall","src":"11240:74:28"},"nodeType":"YulExpressionStatement","src":"11240:74:28"}]},"name":"abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11164:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11175:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11186:4:28","type":""}],"src":"11072:248:28"},{"body":{"nodeType":"YulBlock","src":"11446:100:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11463:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11474:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11456:6:28"},"nodeType":"YulFunctionCall","src":"11456:21:28"},"nodeType":"YulExpressionStatement","src":"11456:21:28"},{"nodeType":"YulAssignment","src":"11486:54:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11513:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11525:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11536:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11521:3:28"},"nodeType":"YulFunctionCall","src":"11521:18:28"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"11494:18:28"},"nodeType":"YulFunctionCall","src":"11494:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11486:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11415:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11426:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11437:4:28","type":""}],"src":"11325:221:28"},{"body":{"nodeType":"YulBlock","src":"11725:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11742:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11753:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11735:6:28"},"nodeType":"YulFunctionCall","src":"11735:21:28"},"nodeType":"YulExpressionStatement","src":"11735:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11787:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11772:3:28"},"nodeType":"YulFunctionCall","src":"11772:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11792:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11765:6:28"},"nodeType":"YulFunctionCall","src":"11765:30:28"},"nodeType":"YulExpressionStatement","src":"11765:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11815:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11826:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11811:3:28"},"nodeType":"YulFunctionCall","src":"11811:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"11831:21:28","type":"","value":"INVALID_ZERO_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11804:6:28"},"nodeType":"YulFunctionCall","src":"11804:49:28"},"nodeType":"YulExpressionStatement","src":"11804:49:28"},{"nodeType":"YulAssignment","src":"11862:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11874:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11885:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11870:3:28"},"nodeType":"YulFunctionCall","src":"11870:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11862:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11702:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11716:4:28","type":""}],"src":"11551:343:28"},{"body":{"nodeType":"YulBlock","src":"12073:167:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12090:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12101:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12083:6:28"},"nodeType":"YulFunctionCall","src":"12083:21:28"},"nodeType":"YulExpressionStatement","src":"12083:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:28"},"nodeType":"YulFunctionCall","src":"12120:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12140:2:28","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12113:6:28"},"nodeType":"YulFunctionCall","src":"12113:30:28"},"nodeType":"YulExpressionStatement","src":"12113:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12163:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12159:3:28"},"nodeType":"YulFunctionCall","src":"12159:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"12179:19:28","type":"","value":"INVALID_SIGNATURE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12152:6:28"},"nodeType":"YulFunctionCall","src":"12152:47:28"},"nodeType":"YulExpressionStatement","src":"12152:47:28"},{"nodeType":"YulAssignment","src":"12208:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12220:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12231:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:28"},"nodeType":"YulFunctionCall","src":"12216:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12208:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12050:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12064:4:28","type":""}],"src":"11899:341:28"},{"body":{"nodeType":"YulBlock","src":"12419:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12436:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12447:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12429:6:28"},"nodeType":"YulFunctionCall","src":"12429:21:28"},"nodeType":"YulExpressionStatement","src":"12429:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12470:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12481:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12466:3:28"},"nodeType":"YulFunctionCall","src":"12466:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12486:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12459:6:28"},"nodeType":"YulFunctionCall","src":"12459:30:28"},"nodeType":"YulExpressionStatement","src":"12459:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12509:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12520:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12505:3:28"},"nodeType":"YulFunctionCall","src":"12505:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"12525:23:28","type":"","value":"INSUFFICIENT_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12498:6:28"},"nodeType":"YulFunctionCall","src":"12498:51:28"},"nodeType":"YulExpressionStatement","src":"12498:51:28"},{"nodeType":"YulAssignment","src":"12558:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12570:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12581:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12566:3:28"},"nodeType":"YulFunctionCall","src":"12566:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12558:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12396:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12410:4:28","type":""}],"src":"12245:345:28"},{"body":{"nodeType":"YulBlock","src":"12769:168:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12786:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12797:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12779:6:28"},"nodeType":"YulFunctionCall","src":"12779:21:28"},"nodeType":"YulExpressionStatement","src":"12779:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12820:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12831:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12816:3:28"},"nodeType":"YulFunctionCall","src":"12816:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12836:2:28","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12809:6:28"},"nodeType":"YulFunctionCall","src":"12809:30:28"},"nodeType":"YulExpressionStatement","src":"12809:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12859:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12870:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12855:3:28"},"nodeType":"YulFunctionCall","src":"12855:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"12875:20:28","type":"","value":"INVALID_EXPIRATION"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12848:6:28"},"nodeType":"YulFunctionCall","src":"12848:48:28"},"nodeType":"YulExpressionStatement","src":"12848:48:28"},{"nodeType":"YulAssignment","src":"12905:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12917:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12928:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12913:3:28"},"nodeType":"YulFunctionCall","src":"12913:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12905:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12746:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12760:4:28","type":""}],"src":"12595:342:28"},{"body":{"nodeType":"YulBlock","src":"13116:163:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13133:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13144:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13126:6:28"},"nodeType":"YulFunctionCall","src":"13126:21:28"},"nodeType":"YulExpressionStatement","src":"13126:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13167:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13178:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13163:3:28"},"nodeType":"YulFunctionCall","src":"13163:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13183:2:28","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13156:6:28"},"nodeType":"YulFunctionCall","src":"13156:30:28"},"nodeType":"YulExpressionStatement","src":"13156:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13206:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13217:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13202:3:28"},"nodeType":"YulFunctionCall","src":"13202:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"13222:15:28","type":"","value":"INVALID_NONCE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13195:6:28"},"nodeType":"YulFunctionCall","src":"13195:43:28"},"nodeType":"YulExpressionStatement","src":"13195:43:28"},{"nodeType":"YulAssignment","src":"13247:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13259:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13270:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13255:3:28"},"nodeType":"YulFunctionCall","src":"13255:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13247:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13093:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13107:4:28","type":""}],"src":"12942:337:28"},{"body":{"nodeType":"YulBlock","src":"13458:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13475:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13486:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13468:6:28"},"nodeType":"YulFunctionCall","src":"13468:21:28"},"nodeType":"YulExpressionStatement","src":"13468:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13509:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13520:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13505:3:28"},"nodeType":"YulFunctionCall","src":"13505:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13525:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13498:6:28"},"nodeType":"YulFunctionCall","src":"13498:30:28"},"nodeType":"YulExpressionStatement","src":"13498:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13548:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13559:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13544:3:28"},"nodeType":"YulFunctionCall","src":"13544:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"13564:23:28","type":"","value":"ONLY_EMISSION_MANAGER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13537:6:28"},"nodeType":"YulFunctionCall","src":"13537:51:28"},"nodeType":"YulExpressionStatement","src":"13537:51:28"},{"nodeType":"YulAssignment","src":"13597:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13609:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13620:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13605:3:28"},"nodeType":"YulFunctionCall","src":"13605:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13597:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13435:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13449:4:28","type":""}],"src":"13284:345:28"},{"body":{"nodeType":"YulBlock","src":"13808:163:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13825:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13836:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13818:6:28"},"nodeType":"YulFunctionCall","src":"13818:21:28"},"nodeType":"YulExpressionStatement","src":"13818:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13859:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13870:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13855:3:28"},"nodeType":"YulFunctionCall","src":"13855:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13875:2:28","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13848:6:28"},"nodeType":"YulFunctionCall","src":"13848:30:28"},"nodeType":"YulExpressionStatement","src":"13848:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13898:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13909:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13894:3:28"},"nodeType":"YulFunctionCall","src":"13894:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"13914:15:28","type":"","value":"INVALID_OWNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13887:6:28"},"nodeType":"YulFunctionCall","src":"13887:43:28"},"nodeType":"YulExpressionStatement","src":"13887:43:28"},{"nodeType":"YulAssignment","src":"13939:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13951:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13962:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13947:3:28"},"nodeType":"YulFunctionCall","src":"13947:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13939:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13785:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13799:4:28","type":""}],"src":"13634:337:28"},{"body":{"nodeType":"YulBlock","src":"14150:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14167:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14178:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14160:6:28"},"nodeType":"YulFunctionCall","src":"14160:21:28"},"nodeType":"YulExpressionStatement","src":"14160:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14201:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14212:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14197:3:28"},"nodeType":"YulFunctionCall","src":"14197:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14217:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14190:6:28"},"nodeType":"YulFunctionCall","src":"14190:30:28"},"nodeType":"YulExpressionStatement","src":"14190:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14240:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14251:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14236:3:28"},"nodeType":"YulFunctionCall","src":"14236:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"14256:25:28","type":"","value":"UNSTAKE_WINDOW_FINISHED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14229:6:28"},"nodeType":"YulFunctionCall","src":"14229:53:28"},"nodeType":"YulExpressionStatement","src":"14229:53:28"},{"nodeType":"YulAssignment","src":"14291:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14303:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14314:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14299:3:28"},"nodeType":"YulFunctionCall","src":"14299:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14291:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14127:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14141:4:28","type":""}],"src":"13976:347:28"},{"body":{"nodeType":"YulBlock","src":"14502:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14519:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14530:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14512:6:28"},"nodeType":"YulFunctionCall","src":"14512:21:28"},"nodeType":"YulExpressionStatement","src":"14512:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14553:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14564:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14549:3:28"},"nodeType":"YulFunctionCall","src":"14549:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14569:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14542:6:28"},"nodeType":"YulFunctionCall","src":"14542:30:28"},"nodeType":"YulExpressionStatement","src":"14542:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14592:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14603:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14588:3:28"},"nodeType":"YulFunctionCall","src":"14588:18:28"},{"kind":"string","nodeType":"YulLiteral","src":"14608:29:28","type":"","value":"INVALID_BALANCE_ON_COOLDOWN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14581:6:28"},"nodeType":"YulFunctionCall","src":"14581:57:28"},"nodeType":"YulExpressionStatement","src":"14581:57:28"},{"nodeType":"YulAssignment","src":"14647:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14659:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14670:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14655:3:28"},"nodeType":"YulFunctionCall","src":"14655:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14647:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14479:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14493:4:28","type":""}],"src":"14328:351:28"},{"body":{"nodeType":"YulBlock","src":"14785:117:28","statements":[{"nodeType":"YulAssignment","src":"14795:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:28"},"nodeType":"YulFunctionCall","src":"14803:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14795:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14837:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14852:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"14860:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14848:3:28"},"nodeType":"YulFunctionCall","src":"14848:47:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14830:6:28"},"nodeType":"YulFunctionCall","src":"14830:66:28"},"nodeType":"YulExpressionStatement","src":"14830:66:28"}]},"name":"abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14754:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14765:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14776:4:28","type":""}],"src":"14684:218:28"},{"body":{"nodeType":"YulBlock","src":"15036:190:28","statements":[{"nodeType":"YulAssignment","src":"15046:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15058:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15069:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15054:3:28"},"nodeType":"YulFunctionCall","src":"15054:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15046:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"15081:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15091:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15085:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15141:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15156:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15164:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15152:3:28"},"nodeType":"YulFunctionCall","src":"15152:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15134:6:28"},"nodeType":"YulFunctionCall","src":"15134:34:28"},"nodeType":"YulExpressionStatement","src":"15134:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15188:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15199:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15184:3:28"},"nodeType":"YulFunctionCall","src":"15184:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15208:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15216:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15204:3:28"},"nodeType":"YulFunctionCall","src":"15204:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15177:6:28"},"nodeType":"YulFunctionCall","src":"15177:43:28"},"nodeType":"YulExpressionStatement","src":"15177:43:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14997:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15008:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15016:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15027:4:28","type":""}],"src":"14907:319:28"},{"body":{"nodeType":"YulBlock","src":"15388:233:28","statements":[{"nodeType":"YulAssignment","src":"15398:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15410:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15421:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15406:3:28"},"nodeType":"YulFunctionCall","src":"15406:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15398:4:28"}]},{"nodeType":"YulVariableDeclaration","src":"15433:44:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15443:34:28","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15437:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15493:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15508:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15516:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15504:3:28"},"nodeType":"YulFunctionCall","src":"15504:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15486:6:28"},"nodeType":"YulFunctionCall","src":"15486:34:28"},"nodeType":"YulExpressionStatement","src":"15486:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15540:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15551:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15536:3:28"},"nodeType":"YulFunctionCall","src":"15536:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15560:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15568:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15556:3:28"},"nodeType":"YulFunctionCall","src":"15556:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15529:6:28"},"nodeType":"YulFunctionCall","src":"15529:43:28"},"nodeType":"YulExpressionStatement","src":"15529:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15592:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15603:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15588:3:28"},"nodeType":"YulFunctionCall","src":"15588:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"15608:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15581:6:28"},"nodeType":"YulFunctionCall","src":"15581:34:28"},"nodeType":"YulExpressionStatement","src":"15581:34:28"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15341:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15352:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15360:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15368:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15379:4:28","type":""}],"src":"15231:390:28"},{"body":{"nodeType":"YulBlock","src":"15727:76:28","statements":[{"nodeType":"YulAssignment","src":"15737:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15749:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15760:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15745:3:28"},"nodeType":"YulFunctionCall","src":"15745:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15737:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15779:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"15790:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15772:6:28"},"nodeType":"YulFunctionCall","src":"15772:25:28"},"nodeType":"YulExpressionStatement","src":"15772:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15696:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15707:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15718:4:28","type":""}],"src":"15626:177:28"},{"body":{"nodeType":"YulBlock","src":"15905:87:28","statements":[{"nodeType":"YulAssignment","src":"15915:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15927:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15938:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15923:3:28"},"nodeType":"YulFunctionCall","src":"15923:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15915:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15957:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15972:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"15980:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15968:3:28"},"nodeType":"YulFunctionCall","src":"15968:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15950:6:28"},"nodeType":"YulFunctionCall","src":"15950:36:28"},"nodeType":"YulExpressionStatement","src":"15950:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15874:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15885:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15896:4:28","type":""}],"src":"15808:184:28"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_enum$_DelegationType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n    function abi_decode_t_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_enum$_DelegationType_$82(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_enum$_DelegationType(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_enum$_DelegationType_$82t_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_enum$_DelegationType(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_enum$_DelegationType_$82(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_enum$_DelegationType(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_t_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_AssetConfigInput_$1884_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 0x60)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1724__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_ITransferHook_$1786__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_33d2eb294587ef7b32eb48e48695ebfec45a9c8922ec7d1c444cfad1fb208e8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"INVALID_ZERO_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_SIGNATURE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66cceaab4b8a6f427cff5482a526862a61c3ef92948b70aceb4a8f720a8f0ead__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"INSUFFICIENT_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9fe3e5cf49f72bf8a6a8455c3e990f8479f5dfa09ac808886f330a39b0029c2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"INVALID_EXPIRATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a19e25beaf00f467d35fbe7e167b5794fca796dbfd417dd2accc8f5303300b99__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"INVALID_NONCE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a28d34ff463a8cc689c6ec4b8c995983f85d0a40987242bc4cc3cec37303c18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ONLY_EMISSION_MANAGER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a30e2b4f22d955e30086ae3aef0adfd87eec9d0d3f055d6aa9af61f522dda886__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"INVALID_OWNER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6959acf2335419e4a75195e2fb1c276a96baa5b7fab6be19b14b9420a4bd962__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UNSTAKE_WINDOW_FINISHED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e5f9ee9777b2bbd505a43328a4cc6b61e9df46610a556d5402b9bc072df973d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"INVALID_BALANCE_ON_COOLDOWN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint256__to_t_uint128_t_uint128_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3086":[{"length":32,"start":3883},{"length":32,"start":14482},{"length":32,"start":14551},{"length":32,"start":14596}],"3088":[{"length":32,"start":5159},{"length":32,"start":6324}],"4494":[{"length":32,"start":2316},{"length":32,"start":2663},{"length":32,"start":5002}],"4496":[{"length":32,"start":4092},{"length":32,"start":4296}],"4498":[{"length":32,"start":1971},{"length":32,"start":2105},{"length":32,"start":3114},{"length":32,"start":7139}],"4501":[{"length":32,"start":2065},{"length":32,"start":2769},{"length":32,"start":7102}],"4504":[{"length":32,"start":3919},{"length":32,"start":4351}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106103365760003560e01c8063919cd40f116101b2578063b2f4201d116100f9578063d505accf116100a2578063dde43cba1161007c578063dde43cba14610623578063f11b81881461062b578063f1cc432a1461064d578063f713d8a81461066057610336565b8063d505accf146105ea578063dc937e1c146105fd578063dd62ed3e1461061057610336565b8063c3863ada116100d3578063c3863ada146105c7578063c3cda520146105cf578063cbcbb507146105e257610336565b8063b2f4201d1461058e578063b9844d8d146105a1578063c2ffbb91146105b457610336565b8063a457c2d71161015b578063aaf5eb6811610135578063aaf5eb6814610560578063adc9772e14610568578063b2a5dbfa1461057b57610336565b8063a457c2d714610532578063a9059cbb14610545578063aa9fbe021461055857610336565b8063981b24d01161018c578063981b24d01461050457806399248ea7146105175780639a99b4f01461051f57610336565b8063919cd40f146104ec578063946776cd146104f457806395d89b41146104fc57610336565b8063395093511161028157806372b49d631161022a5780637bb73c97116102045780637bb73c97146104ab5780637e90d7ef146104be5780638129fc1c146104d15780638dbefee2146104d957610336565b806372b49d6314610493578063781603761461049b578063787a08a6146104a357610336565b80635c19a95c1161025b5780635c19a95c1461045a5780636f50458d1461046d57806370a082311461048057610336565b8063395093511461041e57806341cbf54a146104315780635b3cc0cf1461043957610336565b806330adf81f116102e35780633373ee4c116102bd5780633373ee4c146103fb578063359c4a961461040e5780633644e5151461041657610336565b806330adf81f146103c9578063312f6b83146103d1578063313ce567146103e657610336565b806318160ddd1161031457806318160ddd146103995780631e9a6950146103a157806323b872dd146103b657610336565b806306fdde031461033b578063091030c314610359578063095ea7b314610379575b600080fd5b610343610673565b60405161035091906141a8565b60405180910390f35b61036c610367366004613c82565b610727565b604051610350919061409d565b61038c610387366004613dcc565b610739565b6040516103509190614092565b61036c610757565b6103b46103af366004613dcc565b61075d565b005b61038c6103c4366004613cce565b61099f565b61036c610a41565b6103d9610a65565b604051610350919061401a565b6103ee610a89565b6040516103509190614417565b61036c610409366004613c9c565b610a92565b61036c610acf565b61036c610af3565b61038c61042c366004613dcc565b610af9565b61036c610b54565b61044c610447366004613dcc565b610b78565b6040516103509291906143c7565b6103b4610468366004613c82565b610bbf565b6103d961047b366004613d72565b610bda565b61036c61048e366004613c82565b610bfc565b61036c610c28565b610343610c4c565b6103b4610c85565b61036c6104b9366004613c82565b610cfe565b61036c6104cc366004613c82565b610d10565b6103b4610d22565b61036c6104e7366004613c82565b610e60565b61036c610f29565b6103d9610f4d565b610343610f71565b61036c610512366004613f27565b610ff0565b6103d9610ffa565b6103b461052d366004613dcc565b61101e565b61038c610540366004613dcc565b611190565b61038c610553366004613dcc565b611205565b61036c611219565b6103ee61123d565b6103b4610576366004613dcc565b611242565b6103b4610589366004613e87565b61140f565b61036c61059c366004613d72565b611631565b61036c6105af366004613c82565b611659565b61036c6105c2366004613df5565b61166b565b6103d9611694565b6103b46105dd366004613e30565b6116b0565b6103d96118b2565b6103b46105f8366004613d09565b6118d6565b6103b461060b366004613d72565b611af2565b61036c61061e366004613c9c565b611b01565b61036c611b39565b61063e610639366004613c82565b611b3e565b604051610350939291906143ea565b61036c61065b366004613f3f565b611b82565b6103b461066e366004613d9b565b611c84565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b603e6020526000908152604090205481565b600061074d610746611f2f565b8484611f33565b5060015b92915050565b60025490565b8061079d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b60405180910390fd5b336000908152603e60205260409020546107d7817f0000000000000000000000000000000000000000000000000000000000000000611e87565b421161080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614229565b7f000000000000000000000000000000000000000000000000000000000000000061086461085d837f0000000000000000000000000000000000000000000000000000000000000000611e87565b429061207a565b111561089c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061433c565b60006108a733610bfc565b905060008184116108b857836108ba565b815b90506108c8338360016120bc565b506108d3338261217a565b6108dd828261207a565b6108f257336000908152603e60205260408120555b61093373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001686836122c4565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d983604051610990919061409d565b60405180910390a35050505050565b60006109ac848484612351565b610a36846109b8611f2f565b610a31856040518060600160405280602881526020016144d46028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610a03611f2f565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919061245e565b611f33565b5060015b9392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152603c60209081526040808320938616835260029093019052205492915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60435481565b600061074d610b06611f2f565b84610a318560016000610b17611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490611e87565b7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b610bcb3382600061250f565b610bd73382600161250f565b50565b600080610be683612692565b92505050610bf484826126cc565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b610c8e33610bfc565b610cc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614373565b336000818152603e6020526040808220429055517ff52f50426b32362d3e6bb8cb36b7074756b224622def6352a59eac7f66ebe6e89190a2565b60076020526000908152604090205481565b603d6020526000908152604090205481565b6000610d2c612704565b90506009548111610d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806144fc602e913960400191505060405180910390fd5b6009819055467f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610db7610673565b8051602091820120604080518082018252600181527f31000000000000000000000000000000000000000000000000000000000000009084015251610e2393927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101614151565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206043555050565b60408051600180825281830190925260009160609190816020015b610e83613bf0565b815260200190600190039081610e7b57905050905060405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001610ec885610bfc565b8152602001610ed5610757565b81525081600081518110610ee557fe5b6020026020010181905250610a3a610efd8483612709565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d602052604090205490611e87565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561071d5780601f106106f25761010080835404028352916020019161071d565b6000610751610757565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006110343361102d33610bfc565b60006120bc565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83146110655782611067565b815b90506110b3816040518060400160405280600e81526020017f494e56414c49445f414d4f554e540000000000000000000000000000000000008152508461245e9092919063ffffffff16565b336000908152603d60205260409020556111257f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000008684612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c783604051611182919061409d565b60405180910390a350505050565b600061074d61119d611f2f565b84610a31856040518060600160405280602581526020016145be60259139600160006111c7611f2f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919061245e565b600061074d611212611f2f565b8484612351565b7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b601281565b80611279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141bb565b600061128483610bfc565b9050600061129b843084611296610757565b6128cc565b90508015611333577f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a7684826040516112d492919061406c565b60405180910390a173ffffffffffffffffffffffffffffffffffffffff84166000908152603d602052604090205461130c9082611e87565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603d60205260409020555b6113406000848685611b82565b73ffffffffffffffffffffffffffffffffffffffff85166000908152603e602052604090205561137084846129a5565b6113b273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333086612837565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051611182919061409d565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461147e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906142ce565b60005b8181101561162c576000603c600085858581811061149b57fe5b90506060020160400160208101906114b39190613c82565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506115328484848181106114fe57fe5b90506060020160400160208101906115169190613c82565b8286868681811061152357fe5b90506060020160200135612ad6565b5083838381811061153f57fe5b6115559260206060909202019081019150613ef7565b81547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9190911617815583838381811061159d57fe5b90506060020160400160208101906115b59190613c82565b73ffffffffffffffffffffffffffffffffffffffff167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8585858181106115f857fe5b61160e9260206060909202019081019150613ef7565b60405161161b91906143aa565b60405180910390a250600101611481565b505050565b600080600061163f84612692565b509150915061165082828743612bd5565b95945050505050565b60446020526000908152604090205481565b600080600061167984612692565b509150915061168a82828888612bd5565b9695505050505050565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60007f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d8787876040516020016116e994939291906140e7565b604051602081830303815290604052805190602001209050600060435482604051602001611718929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611755949392919061418a565b6020604051602081039080840390855afa158015611777573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166117ef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b8642111561188f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b61189b818a600061250f565b6118a7818a600161250f565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff8716611923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614305565b8342111561195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b73ffffffffffffffffffffffffffffffffffffffff871660009081526044602090815260408083205460435491519093926119c4917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918d918d918d9189918e91016140a6565b604051602081830303815290604052805190602001206040516020016119eb929190613fe4565b60405160208183030381529060405280519060200120905060018186868660405160008152602001604052604051611a26949392919061418a565b6020604051602081039080840390855afa158015611a48573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b611ac1826001611e87565b73ffffffffffffffffffffffffffffffffffffffff8a166000908152604460205260409020556118a7898989611f33565b611afd33838361250f565b5050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600281565b603c60205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff808316927001000000000000000000000000000000009004169083565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603e602052604081205480611bb7576000915050610bf4565b6000611c0d7f0000000000000000000000000000000000000000000000000000000000000000611c07427f000000000000000000000000000000000000000000000000000000000000000061207a565b9061207a565b905081811115611c205760009150611c7a565b6000878211611c2f5787611c31565b425b905082811015611c4657829350505050610bf4565b611c76611c538887611e87565b611c70611c608887612f22565b611c6a8b86612f22565b90611e87565b90612f95565b9250505b5095945050505050565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611cb457fe5b8888604051602001611cca959493929190614118565b604051602081830303815290604052805190602001209050600060435482604051602001611cf9929190613fe4565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051611d36949392919061418a565b6020604051602081039080840390855afa158015611d58573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610794906141f2565b73ffffffffffffffffffffffffffffffffffffffff811660009081526044602052604090208054600181019091558814611e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614297565b86421115611e70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490614260565b611e7b818b8b61250f565b50505050505050505050565b600082820183811015610a3a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316611f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806145706024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661200b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061446b6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000610a3a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061245e565b6000806120cd853086611296610757565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603d6020526040812054919250906121019083611e87565b905081156116505783156121385773ffffffffffffffffffffffffffffffffffffffff86166000908152603d602052604090208190555b7f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76868360405161216992919061406c565b60405180910390a195945050505050565b73ffffffffffffffffffffffffffffffffffffffff82166121e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061452a6021913960400191505060405180910390fd5b6121f282600083612fd7565b61223c816040518060600160405280602281526020016144496022913973ffffffffffffffffffffffffffffffffffffffff8516600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205560025461226f908261207a565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261162c90849061315b565b600061235c84610bfc565b905061236a848260016120bc565b508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461244d5760006123a984610bfc565b90506123b7848260016120bc565b5073ffffffffffffffffffffffffffffffffffffffff85166000908152603e60205260409020546123ea81858785611b82565b73ffffffffffffffffffffffffffffffffffffffff86166000908152603e6020526040902055828414801561241e57508015155b1561244a5773ffffffffffffffffffffffffffffffffffffffff86166000908152603e60205260408120555b50505b612458848484613399565b50505050565b60008184841115612507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156124cc5781810151838201526020016124b4565b50505050905090810190601f1680156124f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b73ffffffffffffffffffffffffffffffffffffffff821661259157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f44454c454741544545000000000000000000000000000000604482015290519081900360640190fd5b600061259c82612692565b9250505060006125ab85610bfc565b905060006125b986846126cc565b73ffffffffffffffffffffffffffffffffffffffff878116600090815260208690526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918816919091179055905061261a81868487613569565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd866040518082600181111561267a57fe5b815260200191505060405180910390a3505050505050565b60008080808460018111156126a357fe5b14156126b957506006915060079050603f6126c5565b50604091506041905060425b9193909250565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526020839052604081205490911680610a3a5783915050610751565b600290565b600080805b835181101561282f576000603c600086848151811061272957fe5b6020908102919091018101515173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160009081206001810154815488519294506127b4926fffffffffffffffffffffffffffffffff80831692700100000000000000000000000000000000900416908a90889081106127a357fe5b602002602001015160400151613861565b905061282361281c8785815181106127c857fe5b602002602001015160200151838560020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613975565b8590611e87565b9350505060010161270e565b509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261245890859061315b565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603c602090815260408083209388168352600284019091528120549091908280612914888588612ad6565b90508083146129995786156129315761292e878285613975565b91505b73ffffffffffffffffffffffffffffffffffffffff808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b9061299090859061409d565b60405180910390a35b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216612a2757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612a3360008383612fd7565b600254612a409082611e87565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054612a739082611e87565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600182015482546000919070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1642811415612b1757509050610a3a565b8454600090612b3b9084906fffffffffffffffffffffffffffffffff168488613861565b9050828114612b9c578086600101819055508673ffffffffffffffffffffffffffffffffffffffff167f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc82604051612b93919061409d565b60405180910390a25b85546fffffffffffffffffffffffffffffffff428116700100000000000000000000000000000000029116178655925050509392505050565b600043821115612c4657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e56414c49445f424c4f434b5f4e554d424552000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020859052604090205480612c8257612c7a84610bfc565b915050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850184529091529020546fffffffffffffffffffffffffffffffff168310612d6a5773ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909401835292905220546fffffffffffffffffffffffffffffffff700100000000000000000000000000000000909104169050610bf4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602087815260408083208380529091529020546fffffffffffffffffffffffffffffffff16831015612dbc576000915050610bf4565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b81811115612ec1576002828203048103612dfa613c27565b5073ffffffffffffffffffffffffffffffffffffffff8716600090815260208a815260408083208484528252918290208251808401909352546fffffffffffffffffffffffffffffffff8082168085527001000000000000000000000000000000009092041691830191909152871415612e9057602001516fffffffffffffffffffffffffffffffff169450610bf49350505050565b80516fffffffffffffffffffffffffffffffff16871115612eb357819350612eba565b6001820392505b5050612de2565b5073ffffffffffffffffffffffffffffffffffffffff851660009081526020888152604080832093835292905220546fffffffffffffffffffffffffffffffff70010000000000000000000000000000000090910416915050949350505050565b600082612f3157506000610751565b82820282848281612f3e57fe5b0414610a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144b36021913960400191505060405180910390fd5b6000610a3a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613997565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152603f6020526040808220548584168352912054908216911681613015578491505b73ffffffffffffffffffffffffffffffffffffffff81166130335750825b6130408282856000613569565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526042602052604080822054878416835291205490821691168161307e578691505b73ffffffffffffffffffffffffffffffffffffffff811661309c5750845b6130a98282876001613569565b60085473ffffffffffffffffffffffffffffffffffffffff168015613151576040517f4a39314900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690634a3931499061311e908b908b908b9060040161403b565b600060405180830381600087803b15801561313857600080fd5b505af115801561314c573d6000803e3d6000fd5b505050505b5050505050505050565b61317a8273ffffffffffffffffffffffffffffffffffffffff16613a16565b6131e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061324e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613211565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146132b0576040519150601f19603f3d011682016040523d82523d6000602084013e6132b5565b606091505b50915091508161332657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156124585780806020019051602081101561334257600080fd5b5051612458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614594602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316613405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061454b6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216613471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806144266023913960400191505060405180910390fd5b61347c838383612fd7565b6134c68160405180606001604052806026815260200161448d6026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919061245e565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546135029082611e87565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156135a257612458565b6000806135ae83612692565b50909250905073ffffffffffffffffffffffffffffffffffffffff8616156137095773ffffffffffffffffffffffffffffffffffffffff8616600090815260208290526040812054801561367a5773ffffffffffffffffffffffffffffffffffffffff88166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169150613686565b61368388610bfc565b91505b61369c84848a85613697818c61207a565b613a4f565b73ffffffffffffffffffffffffffffffffffffffff88167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f6136de848961207a565b87604051808381526020018260018111156136f557fe5b81526020019250505060405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8516156138595773ffffffffffffffffffffffffffffffffffffffff851660009081526020829052604081205480156137cf5773ffffffffffffffffffffffffffffffffffffffff87166000908152602085815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501845290915290205470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1691506137db565b6137d887610bfc565b91505b6137ec84848985613697818c611e87565b73ffffffffffffffffffffffffffffffffffffffff87167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f61382e8489611e87565b876040518083815260200182600181111561384557fe5b81526020019250505060405180910390a250505b505050505050565b600083158061386e575081155b8061388a575042836fffffffffffffffffffffffffffffffff16145b806138c757507f0000000000000000000000000000000000000000000000000000000000000000836fffffffffffffffffffffffffffffffff1610155b156138d3575083610bf4565b60007f000000000000000000000000000000000000000000000000000000000000000042116139025742613924565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000613944826fffffffffffffffffffffffffffffffff871661207a565b905061396a87611c6a86611c70670de0b6b3a76400006139648c88612f22565b90612f22565b979650505050505050565b6000610bf4670de0b6b3a7640000611c70613990868661207a565b8790612f22565b60008183613a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156124cc5781810151838201526020016124b4565b506000838581613a0c57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610bf4575050151592915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020858152604080832054918890529091204391908115801590613ad457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82016000908152602082905260409020546fffffffffffffffffffffffffffffffff8481169116145b15613b3d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201600090815260208290526040902080546fffffffffffffffffffffffffffffffff808716700100000000000000000000000000000000029116179055613151565b6040805180820182526fffffffffffffffffffffffffffffffff8086168252868116602080840191825260008781528682528581209451855493518516700100000000000000000000000000000000029085167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909416939093179093169190911790925573ffffffffffffffffffffffffffffffffffffffff8916815290899052206001830190555050505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c2357600080fd5b803560028110610c2357600080fd5b803560ff81168114610c2357600080fd5b600060208284031215613c93578081fd5b610a3a82613c3e565b60008060408385031215613cae578081fd5b613cb783613c3e565b9150613cc560208401613c3e565b90509250929050565b600080600060608486031215613ce2578081fd5b613ceb84613c3e565b9250613cf960208501613c3e565b9150604084013590509250925092565b600080600080600080600060e0888a031215613d23578283fd5b613d2c88613c3e565b9650613d3a60208901613c3e565b95506040880135945060608801359350613d5660808901613c71565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215613d84578182fd5b613d8d83613c3e565b9150613cc560208401613c62565b600080600080600080600060e0888a031215613db5578283fd5b613dbe88613c3e565b9650613d3a60208901613c62565b60008060408385031215613dde578182fd5b613de783613c3e565b946020939093013593505050565b600080600060608486031215613e09578283fd5b613e1284613c3e565b925060208401359150613e2760408501613c62565b90509250925092565b60008060008060008060c08789031215613e48578182fd5b613e5187613c3e565b95506020870135945060408701359350613e6d60608801613c71565b92506080870135915060a087013590509295509295509295565b60008060208385031215613e99578182fd5b823567ffffffffffffffff80821115613eb0578384fd5b818501915085601f830112613ec3578384fd5b813581811115613ed1578485fd5b866020606083028501011115613ee5578485fd5b60209290920196919550909350505050565b600060208284031215613f08578081fd5b81356fffffffffffffffffffffffffffffffff81168114610a3a578182fd5b600060208284031215613f38578081fd5b5035919050565b60008060008060808587031215613f54578182fd5b8435935060208501359250613f6b60408601613c3e565b9396929550929360600135925050565b60008151808452815b81811015613fa057602081850181015186830182015201613f84565b81811115613fb15782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b90815260200190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845273ffffffffffffffffffffffffffffffffffffffff9290921660208401526040830152606082015260800190565b94855273ffffffffffffffffffffffffffffffffffffffff93909316602085015260408401919091526060830152608082015260a00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252610a3a6020830184613f7b565b60208082526013908201527f494e56414c49445f5a45524f5f414d4f554e5400000000000000000000000000604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b60208082526015908201527f494e53554646494349454e545f434f4f4c444f574e0000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f45585049524154494f4e0000000000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4e4f4e434500000000000000000000000000000000000000604082015260600190565b60208082526015908201527f4f4e4c595f454d495353494f4e5f4d414e414745520000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f4f574e455200000000000000000000000000000000000000604082015260600190565b60208082526017908201527f554e5354414b455f57494e444f575f46494e4953484544000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e0000000000604082015260600190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6fffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122056b5555bacaae1562ed6be2c504831bb08ff42a5655f21035cc1d7f6f36f33d264736f6c63430007050033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x336 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919CD40F GT PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xB2F4201D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDDE43CBA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDE43CBA EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0xF11B8188 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xF1CC432A EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xF713D8A8 EQ PUSH2 0x660 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xDC937E1C EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x610 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xC3863ADA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xC3863ADA EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xCBCBB507 EQ PUSH2 0x5E2 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xB2F4201D EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0xB9844D8D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xC2FFBB91 EQ PUSH2 0x5B4 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x135 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xB2A5DBFA EQ PUSH2 0x57B JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xAA9FBE02 EQ PUSH2 0x558 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x981B24D0 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x9A99B4F0 EQ PUSH2 0x51F JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x919CD40F EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x946776CD EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4FC JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x281 JUMPI DUP1 PUSH4 0x72B49D63 GT PUSH2 0x22A JUMPI DUP1 PUSH4 0x7BB73C97 GT PUSH2 0x204 JUMPI DUP1 PUSH4 0x7BB73C97 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x7E90D7EF EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x8DBEFEE2 EQ PUSH2 0x4D9 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x72B49D63 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x78160376 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x4A3 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x5C19A95C GT PUSH2 0x25B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x6F50458D EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x480 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x41CBF54A EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x5B3CC0CF EQ PUSH2 0x439 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x3373EE4C GT PUSH2 0x2BD JUMPI DUP1 PUSH4 0x3373EE4C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x359C4A96 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x416 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x312F6B83 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x314 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x1E9A6950 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B6 JUMPI PUSH2 0x336 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x91030C3 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x343 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH2 0x38C PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x757 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CCE JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH2 0x36C PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x401A JUMP JUMPDEST PUSH2 0x3EE PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x4417 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xACF JUMP JUMPDEST PUSH2 0x36C PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x36C PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x343 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x36C PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xF4D JUMP JUMPDEST PUSH2 0x343 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F27 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH2 0x38C PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x38C PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x123D JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x589 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E87 JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST PUSH2 0x36C PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DF5 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3E30 JUMP JUMPDEST PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D09 JUMP JUMPDEST PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3D72 JUMP JUMPDEST PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9C JUMP JUMPDEST PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x63E PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C82 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43EA JUMP JUMPDEST PUSH2 0x36C PUSH2 0x65B CALLDATASIZE PUSH1 0x4 PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x700 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x746 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D7 DUP2 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4229 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x864 PUSH2 0x85D DUP4 PUSH32 0x0 PUSH2 0x1E87 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x207A JUMP JUMPDEST GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A7 CALLER PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 GT PUSH2 0x8B8 JUMPI DUP4 PUSH2 0x8BA JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x8C8 CALLER DUP4 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH2 0x8D3 CALLER DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH2 0x8DD DUP3 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x8F2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x933 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP7 DUP4 PUSH2 0x22C4 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD12200EFA34901B99367694174C3B0D32C99585FDF37C7C26892136DDD0836D9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH2 0xA36 DUP5 PUSH2 0x9B8 PUSH2 0x1F2F JUMP JUMPDEST PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44D4 PUSH1 0x28 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA03 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH2 0x1F33 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0xB06 PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xB17 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH2 0xBCB CALLER DUP3 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0xBD7 CALLER DUP3 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE6 DUP4 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xBF4 DUP5 DUP3 PUSH2 0x26CC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xC8E CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4373 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xF52F50426B32362D3E6BB8CB36B7074756B224622DEF6352A59EAC7F66EBE6E8 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2C PUSH2 0x2704 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44FC PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE CHAINID PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0xDB7 PUSH2 0x673 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP5 ADD MSTORE MLOAD PUSH2 0xE23 SWAP4 SWAP3 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 DUP7 SWAP2 ADDRESS SWAP2 ADD PUSH2 0x4151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x43 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE83 PUSH2 0x3BF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE7B JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC8 DUP6 PUSH2 0xBFC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED5 PUSH2 0x757 JUMP JUMPDEST DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEE5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0xA3A PUSH2 0xEFD DUP5 DUP4 PUSH2 0x2709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x751 PUSH2 0x757 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 CALLER PUSH2 0x102D CALLER PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH2 0x1065 JUMPI DUP3 PUSH2 0x1067 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x10B3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E56414C49445F414D4F554E54000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x245E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1125 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 DUP7 DUP5 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9310CCFCB8DE723F578A9E4282EA9F521F05AE40DC08F3068DFAD528A65EE3C7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x119D PUSH2 0x1F2F JUMP JUMPDEST DUP5 PUSH2 0xA31 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x45BE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x11C7 PUSH2 0x1F2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x1212 PUSH2 0x1F2F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2351 JUMP JUMPDEST PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST DUP1 PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1284 DUP4 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x129B DUP5 ADDRESS DUP5 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x28CC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12D4 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x130C SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1340 PUSH1 0x0 DUP5 DUP7 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1370 DUP5 DUP5 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x13B2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x2837 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5DAC0C1B1112564A045BA943C9D50270893E8E826C49BE8E7073ADC713AB7BD7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x42CE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x149B JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1532 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x14FE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1516 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST DUP3 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1523 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2AD6 JUMP JUMPDEST POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x153F JUMPI INVALID JUMPDEST PUSH2 0x1555 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x159D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x87FA03892A0556CB6B8F97E6D533A150D4D55FCBF275FFF5FA003FA636BCC7FA DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x15F8 JUMPI INVALID JUMPDEST PUSH2 0x160E SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x3EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x43AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x1481 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x163F DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1650 DUP3 DUP3 DUP8 NUMBER PUSH2 0x2BD5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1679 DUP5 PUSH2 0x2692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x168A DUP3 DUP3 DUP9 DUP9 PUSH2 0x2BD5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9A9A49B990BA9BB39F8048C490A40AB25C18F55D208D5FBCF958261A9B48716D DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1718 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1755 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x189B DUP2 DUP11 PUSH1 0x0 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x18A7 DUP2 DUP11 PUSH1 0x1 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4305 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x43 SLOAD SWAP2 MLOAD SWAP1 SWAP4 SWAP3 PUSH2 0x19C4 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP10 SWAP2 DUP15 SWAP2 ADD PUSH2 0x40A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19EB SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH2 0x1AC1 DUP3 PUSH1 0x1 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18A7 DUP10 DUP10 DUP10 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x1AFD CALLER DUP4 DUP4 PUSH2 0x250F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1BB7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D PUSH32 0x0 PUSH2 0x1C07 TIMESTAMP PUSH32 0x0 PUSH2 0x207A JUMP JUMPDEST SWAP1 PUSH2 0x207A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP3 GT PUSH2 0x1C2F JUMPI DUP8 PUSH2 0x1C31 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1C46 JUMPI DUP3 SWAP4 POP POP POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x1C53 DUP9 DUP8 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1C70 PUSH2 0x1C60 DUP9 DUP8 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x1C6A DUP12 DUP7 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 PUSH2 0x2F95 JUMP JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x10D8D059343739EFCE7DAD10D09F0806DA52B252B3E6A7951920D2D6EC4102E5 DUP9 DUP9 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CB4 JUMPI INVALID JUMPDEST DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CCA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x43 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D36 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1DD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x41F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 EQ PUSH2 0x1E36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4297 JUMP JUMPDEST DUP7 TIMESTAMP GT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH2 0x1E7B DUP2 DUP12 DUP12 PUSH2 0x250F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4570 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x200B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x446B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20CD DUP6 ADDRESS DUP7 PUSH2 0x1296 PUSH2 0x757 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x2101 SWAP1 DUP4 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1650 JUMPI DUP4 ISZERO PUSH2 0x2138 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x2468F9268C60AD90E2D49EDB0032C8A001E733AE888B3AB8E982EDF535BE1A76 DUP7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2169 SWAP3 SWAP2 SWAP1 PUSH2 0x406C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x21E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x452A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21F2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4449 PUSH1 0x22 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x226F SWAP1 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x162C SWAP1 DUP5 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x236A DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x244D JUMPI PUSH1 0x0 PUSH2 0x23A9 DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH2 0x23B7 DUP5 DUP3 PUSH1 0x1 PUSH2 0x20BC JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23EA DUP2 DUP6 DUP8 DUP6 PUSH2 0x1B82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 DUP5 EQ DUP1 ISZERO PUSH2 0x241E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x244A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST POP POP JUMPDEST PUSH2 0x2458 DUP5 DUP5 DUP5 PUSH2 0x3399 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2591 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F44454C454741544545000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x259C DUP3 PUSH2 0x2692 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 PUSH2 0x25AB DUP6 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25B9 DUP7 DUP5 PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x261A DUP2 DUP7 DUP5 DUP8 PUSH2 0x3569 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D51C8E11BD570DB1734C8EC775785330E77007FEED45C43B608EF33FF914BD DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x267A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26A3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x26B9 JUMPI POP PUSH1 0x6 SWAP2 POP PUSH1 0x7 SWAP1 POP PUSH1 0x3F PUSH2 0x26C5 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH1 0x41 SWAP1 POP PUSH1 0x42 JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0xA3A JUMPI DUP4 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x282F JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2729 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP9 MLOAD SWAP3 SWAP5 POP PUSH2 0x27B4 SWAP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP3 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV AND SWAP1 DUP11 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x27A3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 PUSH2 0x281C DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x27C8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3975 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x1 ADD PUSH2 0x270E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x2458 SWAP1 DUP6 SWAP1 PUSH2 0x315B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 DUP1 PUSH2 0x2914 DUP9 DUP6 DUP9 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x2999 JUMPI DUP7 ISZERO PUSH2 0x2931 JUMPI PUSH2 0x292E DUP8 DUP3 DUP6 PUSH2 0x3975 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 DUP11 AND SWAP2 PUSH32 0xBB123B5C06D5408BBEA3C4FEF481578175CFB432E3B482C6186F02ED9086585B SWAP1 PUSH2 0x2990 SWAP1 DUP6 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2A27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2A33 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2A40 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A73 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP DUP2 EQ ISZERO PUSH2 0x2B17 JUMPI POP SWAP1 POP PUSH2 0xA3A JUMP JUMPDEST DUP5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B3B SWAP1 DUP5 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP9 PUSH2 0x3861 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 EQ PUSH2 0x2B9C JUMPI DUP1 DUP7 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5777CA300DFE5BEAD41006FBCE4389794DBC0ED8D6CCCEBFAF94630AA04184BC DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B93 SWAP2 SWAP1 PUSH2 0x409D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR DUP7 SSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 GT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F424C4F434B5F4E554D424552000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x2C82 JUMPI PUSH2 0x2C7A DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT PUSH2 0x2D6A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP1 POP PUSH2 0xBF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x2DBC JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB DIV DUP2 SUB PUSH2 0x2DFA PUSH2 0x3C27 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP11 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP6 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 EQ ISZERO PUSH2 0x2E90 JUMPI PUSH1 0x20 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP PUSH2 0xBF4 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x2EB3 JUMPI DUP2 SWAP4 POP PUSH2 0x2EBA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x2DE2 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F31 JUMPI POP PUSH1 0x0 PUSH2 0x751 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2F3E JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x44B3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x3997 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3F PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x3015 JUMPI DUP5 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3033 JUMPI POP DUP3 JUMPDEST PUSH2 0x3040 DUP3 DUP3 DUP6 PUSH1 0x0 PUSH2 0x3569 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP8 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 DUP3 AND SWAP2 AND DUP2 PUSH2 0x307E JUMPI DUP7 SWAP2 POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x309C JUMPI POP DUP5 JUMPDEST PUSH2 0x30A9 DUP3 DUP3 DUP8 PUSH1 0x1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x3151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4A39314900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x4A393149 SWAP1 PUSH2 0x311E SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x403B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x317A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A16 JUMP JUMPDEST PUSH2 0x31E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x324E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3211 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x32B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3326 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2458 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4594 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x3405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x454B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x3471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4426 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x347C DUP4 DUP4 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x34C6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x448D PUSH1 0x26 SWAP2 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3502 SWAP1 DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35A2 JUMPI PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35AE DUP4 PUSH2 0x2692 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO PUSH2 0x3709 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x367A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x3683 DUP9 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x369C DUP5 DUP5 DUP11 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x3A4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x36DE DUP5 DUP10 PUSH2 0x207A JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x36F5 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x3859 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x37CF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x37D8 DUP8 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x37EC DUP5 DUP5 DUP10 DUP6 PUSH2 0x3697 DUP2 DUP13 PUSH2 0x1E87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH32 0xA0A19463EE116110C9B282012D9B65CC5522DC38A9520340CBAF3142E550127F PUSH2 0x382E DUP5 DUP10 PUSH2 0x1E87 JUMP JUMPDEST DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3845 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x386E JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x388A JUMPI POP TIMESTAMP DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x38C7 JUMPI POP PUSH32 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x38D3 JUMPI POP DUP4 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x3902 JUMPI TIMESTAMP PUSH2 0x3924 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3944 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x207A JUMP JUMPDEST SWAP1 POP PUSH2 0x396A DUP8 PUSH2 0x1C6A DUP7 PUSH2 0x1C70 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3964 DUP13 DUP9 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x2F22 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C70 PUSH2 0x3990 DUP7 DUP7 PUSH2 0x207A JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3A00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x24CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B4 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x3A0C JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xBF4 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP9 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 NUMBER SWAP2 SWAP1 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3AD4 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x3B3D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP2 AND OR SWAP1 SSTORE PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE DUP7 DUP3 MSTORE DUP6 DUP2 KECCAK256 SWAP5 MLOAD DUP6 SLOAD SWAP4 MLOAD DUP6 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP2 MSTORE SWAP1 DUP10 SWAP1 MSTORE KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C93 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA3A DUP3 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CAE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CB7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CE2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3CEB DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH2 0x3CF9 PUSH1 0x20 DUP6 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3D23 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3D2C DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3D56 PUSH1 0x80 DUP10 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D84 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3D8D DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC5 PUSH1 0x20 DUP5 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3DB5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3DBE DUP9 PUSH2 0x3C3E JUMP JUMPDEST SWAP7 POP PUSH2 0x3D3A PUSH1 0x20 DUP10 ADD PUSH2 0x3C62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DDE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3DE7 DUP4 PUSH2 0x3C3E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E09 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3E12 DUP5 PUSH2 0x3C3E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3E27 PUSH1 0x40 DUP6 ADD PUSH2 0x3C62 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3E48 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3E51 DUP8 PUSH2 0x3C3E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3E6D PUSH1 0x60 DUP9 ADD PUSH2 0x3C71 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E99 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3EB0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3EC3 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3ED1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x3EE5 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA3A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F38 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F54 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x3F6B PUSH1 0x40 DUP7 ADD PUSH2 0x3C3E JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FA0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3F84 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3FB1 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F7B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F414D4F554E5400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F434F4F4C444F574E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F45585049524154494F4E0000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4E4F4E434500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F454D495353494F4E5F4D414E414745520000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F574E455200000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x554E5354414B455F57494E444F575F46494E4953484544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E43455F4F4E5F434F4F4C444F574E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x436F6E747261 PUSH4 0x7420696E PUSH20 0x74616E63652068617320616C7265616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A656445524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 JUMP 0xB5 SSTORE JUMPDEST 0xAC 0xAA 0xE1 JUMP 0x2E 0xD6 0xBE 0x2C POP 0x48 BALANCE 0xBB ADDMOD SELFDESTRUCT TIMESTAMP 0xA5 PUSH6 0x5F21035CC1D7 0xF6 RETURN PUSH16 0x33D264736F6C63430007050033000000 ","sourceMap":"908:16142:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1631:51:24;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4242:166:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3249:98::-;;;:::i;4881:971:24:-;;;;;;:::i;:::-;;:::i;:::-;;4868:317:4;;;;;;:::i;:::-;;:::i;2339:141:24:-;;;:::i;1193:36::-;;;:::i;:::-;;;;;;;:::i;3108:81:4:-;;;:::i;:::-;;;;;;;:::i;7914:128:20:-;;;;;;:::i;:::-;;:::i;1400:39:24:-;;;:::i;2105:31::-;;;:::i;5580:215:4:-;;;;;;:::i;:::-;;:::i;717:121:6:-;;;:::i;809:72:17:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1491:211:6:-;;;;;;:::i;:::-;;:::i;1813:291::-;;;;;;:::i;:::-;;:::i;3405:117:4:-;;;;;;:::i;:::-;;:::i;1273:41:24:-;;;:::i;2140:50::-;;;:::i;5973:230::-;;;:::i;885:57:17:-;;;;;;:::i;:::-;;:::i;1572:55:24:-;;;;;;:::i;:::-;;:::i;3641:349::-;;;:::i;10715:468::-;;;;;;:::i;:::-;;:::i;666:41:20:-;;;:::i;1529:38:24:-;;;:::i;2400:85:4:-;;;:::i;3605:122:6:-;;;;;;:::i;:::-;;:::i;1233:36:24:-;;;:::i;6358:490::-;;;;;;:::i;:::-;;:::i;6282:266:4:-;;;;;;:::i;:::-;;:::i;3725:172::-;;;;;;:::i;:::-;;:::i;564:148:6:-;;;:::i;758:36:20:-;;;:::i;3994:740:24:-;;;;;;:::i;:::-;;:::i;1406:709:20:-;;;;;;:::i;:::-;;:::i;2283:406:6:-;;;;;;:::i;:::-;;:::i;2546:42:24:-;;;;;;:::i;:::-;;:::i;2799:424:6:-;;;;;;:::i;:::-;;:::i;1228:36:17:-;;;:::i;16336:712:24:-;;;;;;:::i;:::-;;:::i;712:41:20:-;;;:::i;11809:742:24:-;;;;;;:::i;:::-;;:::i;1195:157:6:-;;;;;;:::i;:::-;;:::i;3955:149:4:-;;;;;;:::i;:::-;;:::i;1152:36:24:-;;;:::i;799:43:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;9546:1025:24:-;;;;;;:::i;:::-;;:::i;15218:718::-;;;;;;:::i;:::-;;:::i;2206:81:4:-;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2243:13;;2268:12;;2275:5;;2268:12;;2275:5;2268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:81;:::o;1631:51:24:-;;;;;;;;;;;;;:::o;4242:166:4:-;4325:4;4341:39;4350:12;:10;:12::i;:::-;4364:7;4373:6;4341:8;:39::i;:::-;-1:-1:-1;4397:4:4;4242:166;;;;;:::o;3249:98::-;3328:12;;3249:98;:::o;4881:971:24:-;4957:11;4949:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;5079:10;5029:30;5062:28;;;:16;:28;;;;;;5129:44;5062:28;5156:16;5129:26;:44::i;:::-;5111:15;:62;5096:114;;;;;;;;;;;;:::i;:::-;5300:14;5231:65;5251:44;:22;5278:16;5251:26;:44::i;:::-;5231:15;;:19;:65::i;:::-;:83;;5216:137;;;;;;;;;;;;:::i;:::-;5359:30;5392:21;5402:10;5392:9;:21::i;:::-;5359:54;;5420:22;5455;5446:6;:31;5445:67;;5506:6;5445:67;;;5481:22;5445:67;5420:92;;5519:72;5550:10;5562:22;5586:4;5519:30;:72::i;:::-;;5598:33;5604:10;5616:14;5598:5;:33::i;:::-;5642:42;:22;5669:14;5642:26;:42::i;:::-;5638:100;;5716:10;5730:1;5699:28;;;:16;:28;;;;;:32;5638:100;5744:53;:33;5751:12;5744:33;5778:2;5782:14;5744:33;:53::i;:::-;5828:2;5809:38;;5816:10;5809:38;;;5832:14;5809:38;;;;;;:::i;:::-;;;;;;;;4881:971;;;;;:::o;4868:317:4:-;4974:4;4990:36;5000:6;5008:9;5019:6;4990:9;:36::i;:::-;5036:121;5045:6;5053:12;:10;:12::i;:::-;5067:89;5105:6;5067:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5087:12;:10;:12::i;:::-;5067:33;;;;;;;;;;;;;-1:-1:-1;5067:33:4;;;:89;:37;:89::i;:::-;5036:8;:121::i;:::-;-1:-1:-1;5174:4:4;4868:317;;;;;;:::o;2339:141:24:-;2385:95;2339:141;:::o;1193:36::-;;;:::o;3108:81:4:-;3173:9;;;;3108:81;:::o;7914:128:20:-;8012:13;;;;7990:7;8012:13;;;:6;:13;;;;;;;;:25;;;;;:19;;;;:25;;;;7914:128;;;;:::o;1400:39:24:-;;;:::o;2105:31::-;;;;:::o;5580:215:4:-;5668:4;5684:83;5693:12;:10;:12::i;:::-;5707:7;5716:50;5755:10;5716:11;:25;5728:12;:10;:12::i;:::-;5716:25;;;;;;;;;;;;;;;;;;-1:-1:-1;5716:25:4;;;:34;;;;;;;;;;;:38;:50::i;717:121:6:-;761:77;717:121;:::o;809:72:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1491:211:6:-;1552:67;1568:10;1580:9;1591:27;1552:15;:67::i;:::-;1625:72;1641:10;1653:9;1664:32;1625:15;:72::i;:::-;1491:211;:::o;1813:291::-;1939:7;1961:45;2010:40;2035:14;2010:24;:40::i;:::-;1956:94;;;;2064:35;2078:9;2089;2064:13;:35::i;:::-;2057:42;1813:291;-1:-1:-1;;;;1813:291:6:o;3405:117:4:-;3497:18;;;3471:7;3497:18;;;;;;;;;;;3405:117;;;;:::o;1273:41:24:-;;;:::o;2140:50::-;2180:10;;;;;;;;;;;;;;;;;2140:50;:::o;5973:230::-;6025:21;6035:10;6025:9;:21::i;:::-;6017:66;;;;;;;;;;;;:::i;:::-;6137:10;6120:28;;;;:16;:28;;;;;;6151:15;6120:46;;6178:20;;;6120:28;6178:20;5973:230::o;885:57:17:-;;;;;;;;;;;;;:::o;1572:55:24:-;;;;;;;;;;;;;:::o;3641:349::-;1040:16:25;1059:13;:11;:13::i;:::-;1040:32;;1097:23;;1086:8;:34;1078:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:23;:34;;;3771:9:24::1;2240:95;3887:6;:4;:6::i;:::-;3871:24:::0;;::::1;::::0;;::::1;::::0;2180:10:::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;3828:151;::::1;::::0;;3905:26;;3941:7;;3966:4:::1;::::0;3828:151:::1;;:::i;:::-;;::::0;;;;;::::1;::::0;;;;;;3811:174;;3828:151:::1;3811:174:::0;;::::1;::::0;3792:16:::1;:193:::0;-1:-1:-1;;3641:349:24:o;10715:468::-;10867:41;;;10906:1;10867:41;;;;;;;;;10786:7;;10801:57;;10867:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10801:107;;10935:151;;;;;;;;11001:4;10935:151;;;;;;11028:17;11038:6;11028:9;:17::i;:::-;10935:151;;;;11066:13;:11;:13::i;:::-;10935:151;;;10914:15;10930:1;10914:18;;;;;;;;;;;;;:172;;;;11099:79;11132:45;11153:6;11161:15;11132:20;:45::i;:::-;11099:28;;;;;;;:20;:28;;;;;;;:32;:79::i;666:41:20:-;;;:::o;1529:38:24:-;;;:::o;2400:85:4:-;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:13;;2464:14;;2471:7;;2464:14;;2471:7;2464:14;;;;;;;;;;;;;;;;;;;;;;;;3605:122:6;3681:7;3703:19;:17;:19::i;1233:36:24:-;;;:::o;6358:490::-;6432:23;6464:72;6495:10;6507:21;6517:10;6507:9;:21::i;:::-;6530:5;6464:30;:72::i;:::-;6432:104;;6542:21;6577:17;6567:6;:27;6566:56;;6616:6;6566:56;;;6598:15;6566:56;6542:80;;6664:52;6684:13;6664:52;;;;;;;;;;;;;;;;;:15;:19;;:52;;;;;:::i;:::-;6650:10;6629:32;;;;:20;:32;;;;;:87;6723:63;:12;6629:32;6723:29;6753:13;6768:2;6772:13;6723:29;:63::i;:::-;6825:2;6798:45;;6813:10;6798:45;;;6829:13;6798:45;;;;;;:::i;:::-;;;;;;;;6358:490;;;;:::o;6282:266:4:-;6375:4;6391:129;6400:12;:10;:12::i;:::-;6414:7;6423:96;6462:15;6423:96;;;;;;;;;;;;;;;;;:11;:25;6435:12;:10;:12::i;:::-;6423:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3725:172::-;3811:4;3827:42;3837:12;:10;:12::i;:::-;3851:9;3862:6;3827:9;:42::i;564:148:6:-;616:96;564:148;:::o;758:36:20:-;792:2;758:36;:::o;3994:740:24:-;4077:11;4069:43;;;;;;;;;;;;:::i;:::-;4118:21;4142;4152:10;4142:9;:21::i;:::-;4118:45;;4170:22;4201:81;4226:10;4246:4;4253:13;4268;:11;:13::i;:::-;4201:24;:81::i;:::-;4170:112;-1:-1:-1;4292:19:24;;4288:182;;4326:42;4341:10;4353:14;4326:42;;;;;;;:::i;:::-;;;;;;;;4411:32;;;;;;;:20;:32;;;;;;:52;;4448:14;4411:36;:52::i;:::-;4376:32;;;;;;;:20;:32;;;;;:87;4288:182;4507:62;4532:1;4535:6;4543:10;4555:13;4507:24;:62::i;:::-;4476:28;;;;;;;:16;:28;;;;;:93;4576:25;4493:10;4594:6;4576:5;:25::i;:::-;4607:72;:37;4614:12;4607:37;4645:10;4665:4;4672:6;4607:37;:72::i;:::-;4710:10;4691:38;;4698:10;4691:38;;;4722:6;4691:38;;;;;;:::i;1406:709:20:-;1538:10;:30;1552:16;1538:30;;1530:64;;;;;;;;;;;;:::i;:::-;1606:9;1601:510;1621:28;;;1601:510;;;1664:29;1696:6;:44;1703:17;;1721:1;1703:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1696:44;;;;;;;;;;;;;;;1664:76;;1749:142;1784:17;;1802:1;1784:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1830:11;1851:17;;1869:1;1851:20;;;;;;;;;;;;:32;;;1749:25;:142::i;:::-;;1932:17;;1950:1;1932:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;1932:38:20;:::i;:::-;1900:70;;;;;;;;;;;;2012:17;;2030:1;2012:20;;;;;;;;;;;;:36;;;;;;;;;;:::i;:::-;1984:120;;;2058:17;;2076:1;2058:20;;;;;;;:38;;;:20;;;;;:38;;;;-1:-1:-1;2058:38:20;:::i;:::-;1984:120;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1651:3:20;;1601:510;;;;1406:709;;:::o;2283:406:6:-;2401:7;2426:66;2500:51;2562:40;2587:14;2562:24;:40::i;:::-;2418:184;;;;;2616:68;2637:9;2648:15;2665:4;2671:12;2616:20;:68::i;:::-;2609:75;2283:406;-1:-1:-1;;;;;2283:406:6:o;2546:42:24:-;;;;;;;;;;;;;:::o;2799:424:6:-;2938:7;2961:66;3035:51;3097:40;3122:14;3097:24;:40::i;:::-;2953:184;;;;;3151:67;3172:9;3183:15;3200:4;3206:11;3151:20;:67::i;:::-;3144:74;2799:424;-1:-1:-1;;;;;;2799:424:6:o;1228:36:17:-;;;;;;:::o;16336:712:24:-;16481:18;761:77:6;16542:9:24;16553:5;16560:6;16512:55;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16502:66;;;;;;16481:87;;16574:14;16630:16;;16648:10;16601:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16591:69;;;;;;16574:86;;16666:17;16686:26;16696:6;16704:1;16707;16710;16686:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16686:26:24;;;;;;-1:-1:-1;;16726:23:24;;;16718:53;;;;;;;;;;;;:::i;:::-;16794:18;;;;;;;:7;:18;;;;;:20;;;;;;;;16785:29;;16777:55;;;;;;;;;;;;:::i;:::-;16865:6;16846:15;:25;;16838:56;;;;;;;;;;;;:::i;:::-;16900:66;16916:9;16927;16938:27;16900:15;:66::i;:::-;16972:71;16988:9;16999;17010:32;16972:15;:71::i;:::-;16336:712;;;;;;;;;:::o;712:41:20:-;;;:::o;11809:742:24:-;11976:19;;;11968:45;;;;;;;;;;;;:::i;:::-;12077:8;12058:15;:27;;12050:58;;;;;;;;;;;;:::i;:::-;12142:14;;;12114:25;12142:14;;;:7;:14;;;;;;;;;12254:16;;12292:79;;12142:14;;12114:25;12292:79;;2385:95;;12150:5;;12327:7;;12336:5;;12142:14;;12362:8;;12292:79;;:::i;:::-;;;;;;;;;;;;;12282:90;;;;;;12204:178;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12185:205;;;;;;12162:228;;12414:26;12424:6;12432:1;12435;12438;12414:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12405:35;;:5;:35;;;12397:65;;;;;;;;;;;;:::i;:::-;12485:24;:17;12507:1;12485:21;:24::i;:::-;12468:14;;;;;;;:7;:14;;;;;:41;12515:31;12476:5;12531:7;12540:5;12515:8;:31::i;1195:157:6:-;1293:54;1309:10;1321:9;1332:14;1293:15;:54::i;:::-;1195:157;;:::o;3955:149:4:-;4070:18;;;;4044:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3955:149::o;1152:36:24:-;1187:1;1152:36;:::o;799:43:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9546:1025:24:-;9760:27;;;9715:7;9760:27;;;:16;:27;;;;;;9797:24;9793:53;;9838:1;9831:8;;;;;9793:53;9852:37;9898:57;9940:14;9898:37;:15;9918:16;9898:19;:37::i;:::-;:41;;:57::i;:::-;9852:103;;9998:19;9966:29;:51;9962:573;;;10049:1;10027:23;;9962:573;;;10071:29;10144:21;10112:29;:53;10111:117;;10207:21;10111:117;;;10179:15;10111:117;10071:157;;10265:19;10241:21;:43;10237:292;;;10303:19;10296:26;;;;;;;10237:292;10369:151;10489:30;:15;10509:9;10489:19;:30::i;:::-;10381:82;10428:34;:9;10442:19;10428:13;:34::i;:::-;10381:42;:15;10401:21;10381:19;:42::i;:::-;:46;;:82::i;:::-;10369:119;;:151::i;:::-;10347:173;;9962:573;;-1:-1:-1;10547:19:24;9546:1025;-1:-1:-1;;;;;9546:1025:24:o;15218:718::-;15404:18;616:96:6;15488:9:24;15507:14;15499:23;;;;;;;;15524:5;15531:6;15450:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15431:115;;;;;;15404:142;;15552:14;15608:16;;15626:10;15579:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15569:69;;;;;;15552:86;;15644:17;15664:26;15674:6;15682:1;15685;15688;15664:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15664:26:24;;;;;;-1:-1:-1;;15704:23:24;;;15696:53;;;;;;;;;;;;:::i;:::-;15772:18;;;;;;;:7;:18;;;;;:20;;;;;;;;15763:29;;15755:55;;;;;;;;;;;;:::i;:::-;15843:6;15824:15;:25;;15816:56;;;;;;;;;;;;:::i;:::-;15878:53;15894:9;15905;15916:14;15878:15;:53::i;:::-;15218:718;;;;;;;;;;:::o;913:162:19:-;971:7;998:5;;;1017:6;;;;1009:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10009:88:4;10069:9;:21;;;;;;;;;;;;;;;10009:88::o;590:104:3:-;677:10;590:104;:::o;9346:340:4:-;9447:19;;;9439:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9525:21;;;9517:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9596:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9647:32;;;;;;;;;;;;;;;;;9346:340;;;:::o;1319:128:19:-;1377:7;1399:43;1403:1;1406;1399:43;;;;;;;;;;;;;;;;;:3;:43::i;8217:539:24:-;8346:7;8361:22;8392:73;8417:4;8431;8438:11;8451:13;:11;:13::i;8392:73::-;8498:26;;;8471:24;8498:26;;;:20;:26;;;;;;8361:104;;-1:-1:-1;8471:24:24;8498:46;;8361:104;8498:30;:46::i;:::-;8471:73;-1:-1:-1;8555:19:24;;8551:171;;8588:13;8584:83;;;8613:26;;;;;;;:20;:26;;;;;:45;;;8584:83;8679:36;8694:4;8700:14;8679:36;;;;;;;:::i;:::-;;;;;;;;8735:16;8217:539;-1:-1:-1;;;;;8217:539:24:o;8511:410:4:-;8594:21;;;8586:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8664:49;8685:7;8702:1;8706:6;8664:20;:49::i;:::-;8745:68;8768:6;8745:68;;;;;;;;;;;;;;;;;:18;;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;8724:18;;;:9;:18;;;;;;;;;;:89;8838:12;;:24;;8855:6;8838:16;:24::i;:::-;8823:12;:39;8877:37;;;;;;;;8903:1;;8877:37;;;;;;;;;;;;;8511:410;;:::o;790:184:18:-;910:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:23;910:58;;;884:85;;903:5;;884:18;:85::i;7049:822:24:-;7150:21;7174:15;7184:4;7174:9;:15::i;:::-;7150:39;;7209:57;7240:4;7246:13;7261:4;7209:30;:57::i;:::-;;7302:2;7294:10;;:4;:10;;;7290:537;;7314:19;7336:13;7346:2;7336:9;:13::i;:::-;7314:35;;7357:53;7388:2;7392:11;7405:4;7357:30;:53::i;:::-;-1:-1:-1;7452:22:24;;;7419:30;7452:22;;;:16;:22;;;;;;7505:113;7452:22;7571:6;7587:2;7599:11;7505:24;:113::i;:::-;7482:20;;;;;;;:16;:20;;;;;:136;7720:23;;;:54;;;;-1:-1:-1;7747:27:24;;;7720:54;7716:105;;;7786:22;;;7811:1;7786:22;;;:16;:22;;;;;:26;7716:105;7290:537;;;7833:33;7849:4;7855:2;7859:6;7833:15;:33::i;:::-;7049:822;;;;:::o;1692:187:5:-;1778:7;1813:12;1805:6;;;;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:5;;;1692:187::o;3947:602:6:-;4080:23;;;4072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4137:45;4186:40;4211:14;4186:24;:40::i;:::-;4132:94;;;;4233:24;4260:20;4270:9;4260;:20::i;:::-;4233:47;;4287:25;4315:35;4329:9;4340;4315:13;:35::i;:::-;4357:20;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;4287:63;-1:-1:-1;4396:84:6;4287:63;4357:32;4447:16;4465:14;4396:20;:84::i;:::-;4518:9;4491:53;;4507:9;4491:53;;;4529:14;4491:53;;;;;;;;;;;;;;;;;;;;;;;;;;3947:602;;;;;;:::o;14122:612:24:-;14242:56;;;;14451:14;:45;;;;;;;;;14447:283;;;-1:-1:-1;14514:16:24;;-1:-1:-1;14532:22:24;;-1:-1:-1;14556:16:24;14506:67;;14447:283;-1:-1:-1;14611:26:24;;-1:-1:-1;14647:32:24;;-1:-1:-1;14689:26:24;14447:283;14122:612;;;;;:::o;9994:299:6:-;10163:20;;;;10118:7;10163:20;;;;;;;;;;;10118:7;;10163:20;10194:31;10190:68;;10242:9;10235:16;;;;;11287:90:24;1187:1;11287:90;:::o;5299:675:20:-;5428:7;;;5478:465;5502:6;:13;5498:1;:17;5478:465;;;5530:29;5562:6;:33;5569:6;5576:1;5569:9;;;;;;;;;;;;;;;;;;;:25;5562:33;;;;;;;;;;;;5569:25;5562:33;;;5658:17;;;;5687:29;;5771:9;;5562:33;;-1:-1:-1;5632:170:20;;5687:29;;;;;5728:31;;;;;5771:6;;5778:1;;5771:9;;;;;;;;;;;;:21;;;5632:14;:170::i;:::-;5603:199;;5828:108;5856:72;5868:6;5875:1;5868:9;;;;;;;;;;;;;;:22;;;5892:10;5904:11;:17;;:23;5922:4;5904:23;;;;;;;;;;;;;;;;5856:11;:72::i;:::-;5828:14;;:18;:108::i;:::-;5811:125;-1:-1:-1;;;5517:3:20;;5478:465;;;-1:-1:-1;5955:14:20;5299:675;-1:-1:-1;;;5299:675:20:o;978:216:18:-;1120:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:27;1120:68;;;1094:95;;1113:5;;1094:18;:95::i;3620:641:20:-;3809:13;;;;3764:7;3809:13;;;:6;:13;;;;;;;;3848:21;;;;;:15;;;:21;;;;;;3764:7;;3809:13;3764:7;;3927:56;3816:5;3809:13;3971:11;3927:25;:56::i;:::-;3908:75;;4007:8;3994:9;:21;3990:239;;4029:17;;4025:105;;4075:46;4087:12;4101:8;4111:9;4075:11;:46::i;:::-;4058:63;;4025:105;4138:21;;;;;;;;:15;;;:21;;;;;;;:32;;;4183:39;;;;;;;;;4162:8;;4183:39;:::i;:::-;;;;;;;;3990:239;-1:-1:-1;4242:14:20;3620:641;-1:-1:-1;;;;;;;3620:641:20:o;7822:370:4:-;7905:21;;;7897:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7973:49;8002:1;8006:7;8015:6;7973:20;:49::i;:::-;8048:12;;:24;;8065:6;8048:16;:24::i;:::-;8033:12;:39;8103:18;;;:9;:18;;;;;;;;;;;:30;;8126:6;8103:22;:30::i;:::-;8082:18;;;:9;:18;;;;;;;;;;;:51;;;;8148:37;;;;;;;8082:18;;:9;;8148:37;;;;;;;;;;7822:370;;:::o;2526:689:20:-;2706:17;;;;2759:31;;2672:7;;2706:17;2759:31;;;;;2801:15;:38;;2797:74;;;-1:-1:-1;2856:8:20;-1:-1:-1;2849:15:20;;2797:74;2927:29;;2877:16;;2902:89;;2917:8;;2927:29;;2958:19;2979:11;2902:14;:89::i;:::-;2877:114;;3014:8;3002;:20;2998:126;;3052:8;3032:11;:17;;:28;;;;3091:15;3073:44;;;3108:8;3073:44;;;;;;:::i;:::-;;;;;;;;2998:126;3130:58;;;3172:15;3130:58;;;;;;;;;3202:8;-1:-1:-1;;;2526:689:20;;;;;:::o;6585:1211:6:-;6814:7;6852:12;6837:11;:27;;6829:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6921:21;;;6896:22;6921:21;;;;;;;;;;;6953:19;6949:62;;6989:15;6999:4;6989:9;:15::i;:::-;6982:22;;;;;6949:62;7060:15;;;;;;;;;;;;;;;7076:18;;;7060:35;;;;;;;:47;;;:62;-1:-1:-1;7056:131:6;;7139:15;;;;;;;;;;;;;;;7155:18;;;;7139:35;;;;;;:41;;;;;;;;-1:-1:-1;7132:48:6;;7056:131;7237:15;;;;;;;;;;;;;;;:18;;;;;;;;:30;;;:44;-1:-1:-1;7233:73:6;;;7298:1;7291:8;;;;;7233:73;7312:13;7351:18;;;7375:376;7390:5;7382;:13;7375:376;;;7448:1;7431:13;;;7430:19;7422:27;;7484:24;;:::i;:::-;-1:-1:-1;7511:15:6;;;;;;;;;;;;;;;:23;;;;;;;;;7484:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;7546:35;;7542:203;;;7600:14;;;7593:21;;;-1:-1:-1;7593:21:6;;-1:-1:-1;;;;7593:21:6;7542:203;7633:20;;:34;;;-1:-1:-1;7629:116:6;;;7687:6;7679:14;;7629:116;;;7735:1;7726:6;:10;7718:18;;7629:116;7375:376;;;;;-1:-1:-1;7763:15:6;;;;;;;;;;;;;;;:22;;;;;;;:28;;;;;;;;-1:-1:-1;;6585:1211:6;;;;;;:::o;2120:419:19:-;2178:7;2403:6;2399:35;;-1:-1:-1;2426:1:19;2419:8;;2399:35;2452:5;;;2456:1;2452;:5;:1;2471:5;;;;;:10;2463:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:124;3028:7;3050:39;3054:1;3057;3050:39;;;;;;;;;;;;;;;;;:3;:39::i;12906:1212:24:-;13048:22;;;;13018:27;13048:22;;;:16;:22;;;;;;;13104:20;;;;;;;;13048:22;;;;13104:20;13135:33;13131:80;;13200:4;13178:26;;13131:80;13220:31;;;13216:74;;-1:-1:-1;13281:2:24;13216:74;13296:127;13324:19;13351:17;13376:6;13390:27;13296:20;:127::i;:::-;13463:32;;;;13430:30;13463:32;;;:26;:32;;;;;;;13532:30;;;;;;;;13463:32;;;;13532:30;13573:36;13569:86;;13644:4;13619:29;;13569:86;13664:34;;;13660:80;;-1:-1:-1;13731:2:24;13660:80;13746:138;13774:22;13804:20;13832:6;13846:32;13746:20;:138::i;:::-;13995:15;;;;14020:34;;14016:98;;14064:43;;;;;:25;;;;;;:43;;14090:4;;14096:2;;14100:6;;14064:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14016:98;12906:1212;;;;;;;;:::o;1547:555:18:-;1630:27;1638:5;1630:25;;;:27::i;:::-;1622:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:12;1770:23;1805:5;1797:19;;1817:4;1797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:67;;;;1836:7;1828:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:17;;:21;1887:211;;2025:10;2014:30;;;;;;;;;;;;;;;-1:-1:-1;2014:30:18;2006:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7022:530:4;7127:20;;;7119:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7207:23;;;7199:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7281:47;7302:6;7310:9;7321:6;7281:20;:47::i;:::-;7359:71;7381:6;7359:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7339:17;;;;:9;:17;;;;;;;;;;;:91;;;;7463:20;;;;;;;:32;;7488:6;7463:24;:32::i;:::-;7440:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7510:35;;;;;;;7440:20;;7510:35;;;;;;;;;;;;;7022:530;;;:::o;4892:1390:6:-;5042:2;5034:10;;:4;:10;;;5030:37;;;5054:7;;5030:37;5081:66;5155:51;5217:40;5242:14;5217:24;:40::i;:::-;-1:-1:-1;5073:184:6;;-1:-1:-1;5073:184:6;-1:-1:-1;5268:18:6;;;;5264:514;;5353:21;;;5296:16;5353:21;;;;;;;;;;;5387:23;;5383:155;;5433:15;;;;;;;;;;;;;;;5449:22;;;5433:39;;;;;;;:45;;;;;;;-1:-1:-1;5383:155:6;;;5514:15;5524:4;5514:9;:15::i;:::-;5503:26;;5383:155;5546:146;5570:9;5589:15;5614:4;5636:8;5663:20;5636:8;5676:6;5663:12;:20::i;:::-;5546:14;:146::i;:::-;5706:65;;;;5734:20;:8;5747:6;5734:12;:20::i;:::-;5756:14;5706:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5264:514;;;5787:16;;;;5783:495;;5868:19;;;5813:16;5868:19;;;;;;;;;;;5899:21;;5895:147;;5943:13;;;;;;;;;;;;;;;5957:20;;;5943:35;;;;;;;:41;;;;;;;-1:-1:-1;5895:147:6;;;6020:13;6030:2;6020:9;:13::i;:::-;6009:24;;5895:147;6050:144;6074:9;6093:15;6118:2;6138:8;6165:20;6138:8;6178:6;6165:12;:20::i;6050:144::-;6208:63;;;;6234:20;:8;6247:6;6234:12;:20::i;:::-;6256:14;6208:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5783:495;;;4892:1390;;;;;;:::o;7011:693:20:-;7178:7;7204:22;;;:49;;-1:-1:-1;7236:17:20;;7204:49;:97;;;;7286:15;7263:19;:38;;;7204:97;:146;;;;7334:16;7311:19;:39;;;;7204:146;7193:198;;;-1:-1:-1;7372:12:20;7365:19;;7193:198;7397:24;7448:16;7430:15;:34;:71;;7486:15;7430:71;;;7467:16;7430:71;7397:104;-1:-1:-1;7507:17:20;7527:41;7397:104;7527:41;;;:20;:41::i;:::-;7507:61;-1:-1:-1;7587:112:20;7679:12;7587:78;7652:12;7587:60;7624:22;7587:32;:17;7507:61;7587:21;:32::i;:::-;:36;;:60::i;:112::-;7574:125;7011:693;-1:-1:-1;;;;;;;7011:693:20:o;6319:239::-;6450:7;6472:81;6530:22;6472:53;6497:27;:12;6514:9;6497:16;:27::i;:::-;6472:20;;:24;:53::i;3545:332:19:-;3647:7;3739:12;3732:5;3724:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:9;3774:1;3770;:5;;;;;;;3545:332;-1:-1:-1;;;;;3545:332:19:o;743:586:12:-;803:4;1242:20;;1089:66;1281:23;;;;;;:42;;-1:-1:-1;;1308:15:12;;;1273:51;-1:-1:-1;;743:586:12:o;8840:813:6:-;9156:22;;;9075:20;9156:22;;;;;;;;;;;;9238:16;;;;;;;9106:12;;9156:22;9323:24;;;;;:101;;-1:-1:-1;9372:23:6;;;9357:39;;;;;;;;;;;:51;:67;;;;:51;;:67;9323:101;9312:337;;;9454:23;;;9439:39;;;;;;;;;;;:56;;;;;;;;;;;;;9312:337;;;9554:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9516:35:6;;;;;;;;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9594:22;;;;;;;;;;9516:70;9619:23;;9594:48;;8840:813;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;14:198:28:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;217:158;300:20;;349:1;339:12;;329:2;;365:1;362;355:12;380:158;448:20;;508:4;497:16;;487:27;;477:2;;528:1;525;518:12;543:198;;655:2;643:9;634:7;630:23;626:32;623:2;;;676:6;668;661:22;623:2;704:31;725:9;704:31;:::i;746:274::-;;;875:2;863:9;854:7;850:23;846:32;843:2;;;896:6;888;881:22;843:2;924:31;945:9;924:31;:::i;:::-;914:41;;974:40;1010:2;999:9;995:18;974:40;:::i;:::-;964:50;;833:187;;;;;:::o;1025:342::-;;;;1171:2;1159:9;1150:7;1146:23;1142:32;1139:2;;;1192:6;1184;1177:22;1139:2;1220:31;1241:9;1220:31;:::i;:::-;1210:41;;1270:40;1306:2;1295:9;1291:18;1270:40;:::i;:::-;1260:50;;1357:2;1346:9;1342:18;1329:32;1319:42;;1129:238;;;;;:::o;1372:622::-;;;;;;;;1584:3;1572:9;1563:7;1559:23;1555:33;1552:2;;;1606:6;1598;1591:22;1552:2;1634:31;1655:9;1634:31;:::i;:::-;1624:41;;1684:40;1720:2;1709:9;1705:18;1684:40;:::i;:::-;1674:50;;1771:2;1760:9;1756:18;1743:32;1733:42;;1822:2;1811:9;1807:18;1794:32;1784:42;;1845:39;1879:3;1868:9;1864:19;1845:39;:::i;:::-;1835:49;;1931:3;1920:9;1916:19;1903:33;1893:43;;1983:3;1972:9;1968:19;1955:33;1945:43;;1542:452;;;;;;;;;;:::o;1999:304::-;;;2145:2;2133:9;2124:7;2120:23;2116:32;2113:2;;;2166:6;2158;2151:22;2113:2;2194:31;2215:9;2194:31;:::i;:::-;2184:41;;2244:53;2293:2;2282:9;2278:18;2244:53;:::i;2308:652::-;;;;;;;;2537:3;2525:9;2516:7;2512:23;2508:33;2505:2;;;2559:6;2551;2544:22;2505:2;2587:31;2608:9;2587:31;:::i;:::-;2577:41;;2637:53;2686:2;2675:9;2671:18;2637:53;:::i;2965:266::-;;;3094:2;3082:9;3073:7;3069:23;3065:32;3062:2;;;3115:6;3107;3100:22;3062:2;3143:31;3164:9;3143:31;:::i;:::-;3133:41;3221:2;3206:18;;;;3193:32;;-1:-1:-1;;;3052:179:28:o;3236:372::-;;;;3399:2;3387:9;3378:7;3374:23;3370:32;3367:2;;;3420:6;3412;3405:22;3367:2;3448:31;3469:9;3448:31;:::i;:::-;3438:41;;3526:2;3515:9;3511:18;3498:32;3488:42;;3549:53;3598:2;3587:9;3583:18;3549:53;:::i;:::-;3539:63;;3357:251;;;;;:::o;3613:545::-;;;;;;;3808:3;3796:9;3787:7;3783:23;3779:33;3776:2;;;3830:6;3822;3815:22;3776:2;3858:31;3879:9;3858:31;:::i;:::-;3848:41;;3936:2;3925:9;3921:18;3908:32;3898:42;;3987:2;3976:9;3972:18;3959:32;3949:42;;4010:38;4044:2;4033:9;4029:18;4010:38;:::i;:::-;4000:48;;4095:3;4084:9;4080:19;4067:33;4057:43;;4147:3;4136:9;4132:19;4119:33;4109:43;;3766:392;;;;;;;;:::o;4163:704::-;;;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;4367:6;4359;4352:22;4314:2;4412:9;4399:23;4441:18;4482:2;4474:6;4471:14;4468:2;;;4503:6;4495;4488:22;4468:2;4546:6;4535:9;4531:22;4521:32;;4591:7;4584:4;4580:2;4576:13;4572:27;4562:2;;4618:6;4610;4603:22;4562:2;4663;4650:16;4689:2;4681:6;4678:14;4675:2;;;4710:6;4702;4695:22;4675:2;4771:7;4766:2;4758:4;4750:6;4746:17;4742:2;4738:26;4734:35;4731:48;4728:2;;;4797:6;4789;4782:22;4728:2;4833;4825:11;;;;;4855:6;;-1:-1:-1;4304:563:28;;-1:-1:-1;;;;4304:563:28:o;4872:321::-;;4984:2;4972:9;4963:7;4959:23;4955:32;4952:2;;;5005:6;4997;4990:22;4952:2;5049:9;5036:23;5099:34;5092:5;5088:46;5081:5;5078:57;5068:2;;5154:6;5146;5139:22;5198:190;;5310:2;5298:9;5289:7;5285:23;5281:32;5278:2;;;5331:6;5323;5316:22;5278:2;-1:-1:-1;5359:23:28;;5268:120;-1:-1:-1;5268:120:28:o;5393:403::-;;;;;5556:3;5544:9;5535:7;5531:23;5527:33;5524:2;;;5578:6;5570;5563:22;5524:2;5619:9;5606:23;5596:33;;5676:2;5665:9;5661:18;5648:32;5638:42;;5699:40;5735:2;5724:9;5720:18;5699:40;:::i;:::-;5514:282;;;;-1:-1:-1;5689:50:28;;5786:2;5771:18;5758:32;;-1:-1:-1;;5514:282:28:o;5801:536::-;;5882:5;5876:12;5909:6;5904:3;5897:19;5934:3;5946:162;5960:6;5957:1;5954:13;5946:162;;;6022:4;6078:13;;;6074:22;;6068:29;6050:11;;;6046:20;;6039:59;5975:12;5946:162;;;6126:6;6123:1;6120:13;6117:2;;;6192:3;6185:4;6176:6;6171:3;6167:16;6163:27;6156:40;6117:2;-1:-1:-1;6251:2:28;6239:15;6256:66;6235:88;6226:98;;;;6326:4;6222:109;;5852:485;-1:-1:-1;;5852:485:28:o;6342:444::-;6612:66;6600:79;;6704:1;6695:11;;6688:27;;;;6740:2;6731:12;;6724:28;6777:2;6768:12;;6590:196::o;6791:226::-;6967:42;6955:55;;;;6937:74;;6925:2;6910:18;;6892:125::o;7022:398::-;7234:42;7303:15;;;7285:34;;7355:15;;;;7350:2;7335:18;;7328:43;7402:2;7387:18;;7380:34;;;;7212:2;7197:18;;7179:241::o;7425:297::-;7629:42;7617:55;;;;7599:74;;7704:2;7689:18;;7682:34;7587:2;7572:18;;7554:168::o;7727:187::-;7892:14;;7885:22;7867:41;;7855:2;7840:18;;7822:92::o;7919:177::-;8065:25;;;8053:2;8038:18;;8020:76::o;8101:614::-;8388:25;;;8432:42;8510:15;;;8505:2;8490:18;;8483:43;8562:15;;;;8557:2;8542:18;;8535:43;8609:2;8594:18;;8587:34;8652:3;8637:19;;8630:35;;;;8696:3;8681:19;;8674:35;8375:3;8360:19;;8342:373::o;8720:440::-;8951:25;;;9024:42;9012:55;;;;9007:2;8992:18;;8985:83;9099:2;9084:18;;9077:34;9142:2;9127:18;;9120:34;8938:3;8923:19;;8905:255::o;9165:512::-;9424:25;;;9497:42;9485:55;;;;9480:2;9465:18;;9458:83;9572:2;9557:18;;9550:34;;;;9615:2;9600:18;;9593:34;9658:3;9643:19;;9636:35;9411:3;9396:19;;9378:299::o;9682:512::-;9941:25;;;9997:2;9982:18;;9975:34;;;;10040:2;10025:18;;10018:34;;;;10083:2;10068:18;;10061:34;10144:42;10132:55;10126:3;10111:19;;10104:84;9928:3;9913:19;;9895:299::o;10199:398::-;10426:25;;;10499:4;10487:17;;;;10482:2;10467:18;;10460:45;10536:2;10521:18;;10514:34;10579:2;10564:18;;10557:34;10413:3;10398:19;;10380:217::o;10602:219::-;;10749:2;10738:9;10731:21;10769:46;10811:2;10800:9;10796:18;10788:6;10769:46;:::i;11551:343::-;11753:2;11735:21;;;11792:2;11772:18;;;11765:30;11831:21;11826:2;11811:18;;11804:49;11885:2;11870:18;;11725:169::o;11899:341::-;12101:2;12083:21;;;12140:2;12120:18;;;12113:30;12179:19;12174:2;12159:18;;12152:47;12231:2;12216:18;;12073:167::o;12245:345::-;12447:2;12429:21;;;12486:2;12466:18;;;12459:30;12525:23;12520:2;12505:18;;12498:51;12581:2;12566:18;;12419:171::o;12595:342::-;12797:2;12779:21;;;12836:2;12816:18;;;12809:30;12875:20;12870:2;12855:18;;12848:48;12928:2;12913:18;;12769:168::o;12942:337::-;13144:2;13126:21;;;13183:2;13163:18;;;13156:30;13222:15;13217:2;13202:18;;13195:43;13270:2;13255:18;;13116:163::o;13284:345::-;13486:2;13468:21;;;13525:2;13505:18;;;13498:30;13564:23;13559:2;13544:18;;13537:51;13620:2;13605:18;;13458:171::o;13634:337::-;13836:2;13818:21;;;13875:2;13855:18;;;13848:30;13914:15;13909:2;13894:18;;13887:43;13962:2;13947:18;;13808:163::o;13976:347::-;14178:2;14160:21;;;14217:2;14197:18;;;14190:30;14256:25;14251:2;14236:18;;14229:53;14314:2;14299:18;;14150:173::o;14328:351::-;14530:2;14512:21;;;14569:2;14549:18;;;14542:30;14608:29;14603:2;14588:18;;14581:57;14670:2;14655:18;;14502:177::o;14684:218::-;14860:34;14848:47;;;;14830:66;;14818:2;14803:18;;14785:117::o;14907:319::-;15091:34;15152:15;;;15134:34;;15204:15;;15199:2;15184:18;;15177:43;15069:2;15054:18;;15036:190::o;15231:390::-;15443:34;15504:15;;;15486:34;;15556:15;;;;15551:2;15536:18;;15529:43;15603:2;15588:18;;15581:34;;;;15421:2;15406:18;;15388:233::o;15808:184::-;15980:4;15968:17;;;;15950:36;;15938:2;15923:18;;15905:87::o"},"gasEstimates":{"creation":{"codeDepositCost":"3588800","executionCost":"infinite","totalCost":"infinite"},"external":{"COOLDOWN_SECONDS()":"infinite","DELEGATE_BY_TYPE_TYPEHASH()":"340","DELEGATE_TYPEHASH()":"319","DISTRIBUTION_END()":"infinite","DOMAIN_SEPARATOR()":"1140","EIP712_REVISION()":"infinite","EMISSION_MANAGER()":"infinite","PERMIT_TYPEHASH()":"297","PRECISION()":"307","REVISION()":"294","REWARDS_VAULT()":"infinite","REWARD_TOKEN()":"infinite","STAKED_TOKEN()":"infinite","UNSTAKE_WINDOW()":"infinite","_aaveGovernance()":"1113","_nonces(address)":"1330","_votingSnapshots(address,uint256)":"1508","_votingSnapshotsCounts(address)":"1307","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","assets(address)":"2241","balanceOf(address)":"infinite","claimRewards(address,uint256)":"infinite","configureAssets((uint128,uint256,address)[])":"infinite","cooldown()":"22402","decimals()":"1159","decreaseAllowance(address,uint256)":"infinite","delegate(address)":"infinite","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","delegateByType(address,uint8)":"infinite","delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)":"infinite","getDelegateeByType(address,uint8)":"infinite","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"infinite","getPowerAtBlock(address,uint256,uint8)":"infinite","getPowerCurrent(address,uint8)":"infinite","getTotalRewardsBalance(address)":"infinite","getUserAssetData(address,address)":"infinite","increaseAllowance(address,uint256)":"infinite","initialize()":"infinite","name()":"infinite","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","redeem(address,uint256)":"infinite","stake(address,uint256)":"infinite","stakerRewardsToClaim(address)":"1329","stakersCooldowns(address)":"1332","symbol()":"infinite","totalSupply()":"1097","totalSupplyAt(uint256)":"1210","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite","_getDelegationDataByType(enum IGovernancePowerDelegationToken.DelegationType)":"116","_transfer(address,address,uint256)":"infinite","_updateCurrentUnclaimedRewards(address,uint256,bool)":"infinite","getRevision()":"15"}},"methodIdentifiers":{"COOLDOWN_SECONDS()":"72b49d63","DELEGATE_BY_TYPE_TYPEHASH()":"aa9fbe02","DELEGATE_TYPEHASH()":"41cbf54a","DISTRIBUTION_END()":"919cd40f","DOMAIN_SEPARATOR()":"3644e515","EIP712_REVISION()":"78160376","EMISSION_MANAGER()":"cbcbb507","PERMIT_TYPEHASH()":"30adf81f","PRECISION()":"aaf5eb68","REVISION()":"dde43cba","REWARDS_VAULT()":"946776cd","REWARD_TOKEN()":"99248ea7","STAKED_TOKEN()":"312f6b83","UNSTAKE_WINDOW()":"359c4a96","_aaveGovernance()":"c3863ada","_nonces(address)":"b9844d8d","_votingSnapshots(address,uint256)":"5b3cc0cf","_votingSnapshotsCounts(address)":"7bb73c97","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assets(address)":"f11b8188","balanceOf(address)":"70a08231","claimRewards(address,uint256)":"9a99b4f0","configureAssets((uint128,uint256,address)[])":"b2a5dbfa","cooldown()":"787a08a6","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegateByType(address,uint8)":"dc937e1c","delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)":"f713d8a8","getDelegateeByType(address,uint8)":"6f50458d","getNextCooldownTimestamp(uint256,uint256,address,uint256)":"f1cc432a","getPowerAtBlock(address,uint256,uint8)":"c2ffbb91","getPowerCurrent(address,uint8)":"b2f4201d","getTotalRewardsBalance(address)":"8dbefee2","getUserAssetData(address,address)":"3373ee4c","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","redeem(address,uint256)":"1e9a6950","stake(address,uint256)":"adc9772e","stakerRewardsToClaim(address)":"7e90d7ef","stakersCooldowns(address)":"091030c3","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldownSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeWindow\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardsVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emissionManager\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"distributionDuration\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"emission\",\"type\":\"uint256\"}],\"name\":\"AssetConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"AssetIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Cooldown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"DelegatedPowerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UserIndexUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COOLDOWN_SECONDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_BY_TYPE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELEGATE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_REVISION\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMISSION_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKED_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_aaveGovernance\",\"outputs\":[{\"internalType\":\"contract ITransferHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_votingSnapshots\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_votingSnapshotsCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"emissionPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAsset\",\"type\":\"address\"}],\"internalType\":\"struct DistributionTypes.AssetConfigInput[]\",\"name\":\"assetsConfigInput\",\"type\":\"tuple[]\"}],\"name\":\"configureAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"delegateByType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateByTypeBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getDelegateeByType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromCooldownTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReceive\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBalance\",\"type\":\"uint256\"}],\"name\":\"getNextCooldownTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IGovernancePowerDelegationToken.DelegationType\",\"name\":\"delegationType\",\"type\":\"uint8\"}],\"name\":\"getPowerCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getTotalRewardsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getUserAssetData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerRewardsToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakersCooldowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimRewards(address,uint256)\":{\"details\":\"Claims an `amount` of `REWARD_TOKEN` to the address `to`\",\"params\":{\"amount\":\"Amount to stake*\",\"to\":\"Address to stake for\"}},\"configureAssets((uint128,uint256,address)[])\":{\"details\":\"Configures the distribution of rewards for a list of assets\",\"params\":{\"assetsConfigInput\":\"The list of configurations to apply*\"}},\"cooldown()\":{\"details\":\"Activates the cooldown period to unstake - It can't be called if the user is not staking*\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"delegates all the powers to a specific user\",\"params\":{\"delegatee\":\"the user to which the power will be delegated*\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates power from signatory to `delegatee`\",\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegateByType(address,uint8)\":{\"details\":\"delegates one specific power to a delegatee\",\"params\":{\"delegatee\":\"the user which delegated power has changed\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)*\"}},\"delegateByTypeBySig(address,uint8,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates power from signatory to `delegatee`\",\"params\":{\"delegatee\":\"The address to delegate votes to\",\"delegationType\":\"the type of delegation (VOTING_POWER, PROPOSITION_POWER)\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getDelegateeByType(address,uint8)\":{\"details\":\"returns the delegatee of an user\",\"params\":{\"delegator\":\"the address of the delegator*\"}},\"getNextCooldownTimestamp(uint256,uint256,address,uint256)\":{\"details\":\"Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient  - Weighted average of from/to cooldown timestamps if:    # The sender doesn't have the cooldown activated (timestamp 0).    # The sender timestamp is expired    # The sender has a \\\"worse\\\" timestamp  - If the receiver's cooldown timestamp expired (too old), the next is 0\",\"params\":{\"amountToReceive\":\"Amount\",\"fromCooldownTimestamp\":\"Cooldown timestamp of the sender\",\"toAddress\":\"Address of the recipient\",\"toBalance\":\"Current balance of the receiver\"},\"returns\":{\"_0\":\"The new cooldown timestamp*\"}},\"getPowerAtBlock(address,uint256,uint8)\":{\"details\":\"returns the delegated power of a user at a certain block\",\"params\":{\"user\":\"the user*\"}},\"getPowerCurrent(address,uint8)\":{\"details\":\"returns the current delegated power of a user. The current power is the power delegated at the time of the last snapshot\",\"params\":{\"user\":\"the user*\"}},\"getTotalRewardsBalance(address)\":{\"details\":\"Return the total rewards pending to claim by an staker\",\"params\":{\"staker\":\"The staker address\"},\"returns\":{\"_0\":\"The rewards\"}},\"getUserAssetData(address,address)\":{\"details\":\"Returns the data of an user on a distribution\",\"params\":{\"asset\":\"The address of the reference asset of the distribution\",\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The new index*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Called by the proxy contract*\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\",\"params\":{\"deadline\":\"the deadline timestamp, type(uint256).max for no deadline\",\"owner\":\"the owner of the funds\",\"r\":\"signature param\",\"s\":\"signature param\",\"spender\":\"the spender\",\"v\":\"signature param\",\"value\":\"the amount\"}},\"redeem(address,uint256)\":{\"details\":\"Redeems staked tokens, and stop earning rewards\",\"params\":{\"amount\":\"Amount to redeem*\",\"to\":\"Address to redeem to\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"returns the total supply at a certain block number used by the voting strategy contracts to calculate the total votes needed for threshold/quorum In this initial implementation with no AAVE minting, simply returns the current supply A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future*\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"REVISION\":{\"details\":\"Start of Storage layout from StakedToken v1\"},\"_nonces\":{\"details\":\"owner => next valid nonce to submit with permit()\"},\"_votingDelegates\":{\"details\":\"To see the voting mappings, go to GovernancePowerWithSnapshot.sol\"}},\"title\":\"StakedToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DELEGATE_BY_TYPE_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"REWARDS_VAULT()\":{\"notice\":\"Address to pull from the rewards, needs to have approved this contract\"},\"UNSTAKE_WINDOW()\":{\"notice\":\"Seconds available to redeem once the cooldown period is fullfilled\"}},\"notice\":\"Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/stake/StakedTokenV2.sol\":\"StakedTokenV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/aave-token/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x388d7e22e4455851ae9d1309dabf9e01ff6849128ef607e89389b7cf8fe4df1d\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/interfaces/IGovernancePowerDelegationToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IGovernancePowerDelegationToken {\\n  \\n  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}\\n\\n  /**\\n   * @dev emitted when a user delegates to another\\n   * @param delegator the delegator\\n   * @param delegatee the delegatee\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegateChanged(\\n    address indexed delegator,\\n    address indexed delegatee,\\n    DelegationType delegationType\\n  );\\n\\n  /**\\n   * @dev emitted when an action changes the delegated power of a user\\n   * @param user the user which delegated power has changed\\n   * @param amount the amount of delegated power for the user\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external virtual;\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external virtual;\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (address);\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    virtual\\n    view\\n    returns (uint256);\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external virtual view returns (uint256);\\n \\n  /**\\n  * @dev returns the total supply at a certain block number\\n  **/\\n  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);\\n}\",\"keccak256\":\"0x82d63f935980041a1fa0cd3a166d5b26695f114214a6e26c01dbd9df4c17400b\",\"license\":\"agpl-3.0\"},\"@aave/aave-token/contracts/open-zeppelin/Address.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\",\"keccak256\":\"0xc19932d20c723586b172a7f30d47b1696bd15daf0a0ebfe61519c90ab0d830ca\"},\"@aave/aave-token/contracts/open-zeppelin/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x9cb4309084f3282a5d21c242396eef9cc756180ba06e54eebfa5c447770df160\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.5;\\n\\nimport \\\"./Context.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string internal _name;\\n    string internal _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name, string memory symbol) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20};\\n     *\\n     * Requirements:\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\",\"keccak256\":\"0x291b3f5f85cf723a515eccae8471ac99b93817d8d8f7151a5a99e13c09587e33\",\"license\":\"MIT\"},\"@aave/aave-token/contracts/open-zeppelin/SafeMath.sol\":{\"content\":\"pragma solidity ^0.7.5;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x7cbc3384eb31fefce484ce5307dde0096f894d590d5b00b977a1a5a8682bb78f\"},\"@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {SafeMath} from '../../open-zeppelin/SafeMath.sol';\\nimport {ERC20} from '../../open-zeppelin/ERC20.sol';\\nimport {\\n  IGovernancePowerDelegationToken\\n} from '../../interfaces/IGovernancePowerDelegationToken.sol';\\n\\n/**\\n * @notice implementation of the AAVE token contract\\n * @author Aave\\n */\\nabstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {\\n  using SafeMath for uint256;\\n  /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(\\n    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  bytes32 public constant DELEGATE_TYPEHASH = keccak256(\\n    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'\\n  );\\n\\n  /// @dev snapshot of a value on a specific block, used for votes\\n  struct Snapshot {\\n    uint128 blockNumber;\\n    uint128 value;\\n  }\\n\\n  /**\\n   * @dev delegates one specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function delegateByType(address delegatee, DelegationType delegationType) external override {\\n    _delegateByType(msg.sender, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev delegates all the powers to a specific user\\n   * @param delegatee the user to which the power will be delegated\\n   **/\\n  function delegate(address delegatee) external override {\\n    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);\\n    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);\\n  }\\n\\n  /**\\n   * @dev returns the delegatee of an user\\n   * @param delegator the address of the delegator\\n   **/\\n  function getDelegateeByType(address delegator, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (address)\\n  {\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    return _getDelegatee(delegator, delegates);\\n  }\\n\\n  /**\\n   * @dev returns the current delegated power of a user. The current power is the\\n   * power delegated at the time of the last snapshot\\n   * @param user the user\\n   **/\\n  function getPowerCurrent(address user, DelegationType delegationType)\\n    external\\n    override\\n    view\\n    returns (uint256)\\n  {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);\\n  }\\n\\n  /**\\n   * @dev returns the delegated power of a user at a certain block\\n   * @param user the user\\n   **/\\n  function getPowerAtBlock(\\n    address user,\\n    uint256 blockNumber,\\n    DelegationType delegationType\\n  ) external override view returns (uint256) {\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);\\n  }\\n\\n  /**\\n   * @dev returns the total supply at a certain block number\\n   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum\\n   * In this initial implementation with no AAVE minting, simply returns the current supply\\n   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future\\n   **/\\n  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {\\n    return super.totalSupply();\\n  }\\n\\n  /**\\n   * @dev delegates the specific power to a delegatee\\n   * @param delegatee the user which delegated power has changed\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _delegateByType(\\n    address delegator,\\n    address delegatee,\\n    DelegationType delegationType\\n  ) internal {\\n    require(delegatee != address(0), 'INVALID_DELEGATEE');\\n\\n    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);\\n\\n    uint256 delegatorBalance = balanceOf(delegator);\\n\\n    address previousDelegatee = _getDelegatee(delegator, delegates);\\n\\n    delegates[delegator] = delegatee;\\n\\n    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);\\n    emit DelegateChanged(delegator, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev moves delegated power from one user to another\\n   * @param from the user from which delegated power is moved\\n   * @param to the user that will receive the delegated power\\n   * @param amount the amount of delegated power to be moved\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   **/\\n  function _moveDelegatesByType(\\n    address from,\\n    address to,\\n    uint256 amount,\\n    DelegationType delegationType\\n  ) internal {\\n    if (from == to) {\\n      return;\\n    }\\n\\n    (\\n      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n      mapping(address => uint256) storage snapshotsCounts,\\n\\n    ) = _getDelegationDataByType(delegationType);\\n\\n    if (from != address(0)) {\\n      uint256 previous = 0;\\n      uint256 fromSnapshotsCount = snapshotsCounts[from];\\n\\n      if (fromSnapshotsCount != 0) {\\n        previous = snapshots[from][fromSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(from);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        from,\\n        uint128(previous),\\n        uint128(previous.sub(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(from, previous.sub(amount), delegationType);\\n    }\\n    if (to != address(0)) {\\n      uint256 previous = 0;\\n      uint256 toSnapshotsCount = snapshotsCounts[to];\\n      if (toSnapshotsCount != 0) {\\n        previous = snapshots[to][toSnapshotsCount - 1].value;\\n      } else {\\n        previous = balanceOf(to);\\n      }\\n\\n      _writeSnapshot(\\n        snapshots,\\n        snapshotsCounts,\\n        to,\\n        uint128(previous),\\n        uint128(previous.add(amount))\\n      );\\n\\n      emit DelegatedPowerChanged(to, previous.add(amount), delegationType);\\n    }\\n  }\\n\\n  /**\\n   * @dev searches a snapshot by block number. Uses binary search.\\n   * @param snapshots the snapshots mapping\\n   * @param snapshotsCounts the number of snapshots\\n   * @param user the user for which the snapshot is being searched\\n   * @param blockNumber the block number being searched\\n   **/\\n  function _searchByBlockNumber(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address user,\\n    uint256 blockNumber\\n  ) internal view returns (uint256) {\\n    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');\\n\\n    uint256 snapshotsCount = snapshotsCounts[user];\\n\\n    if (snapshotsCount == 0) {\\n      return balanceOf(user);\\n    }\\n\\n    // First check most recent balance\\n    if (snapshots[user][snapshotsCount - 1].blockNumber <= blockNumber) {\\n      return snapshots[user][snapshotsCount - 1].value;\\n    }\\n\\n    // Next check implicit zero balance\\n    if (snapshots[user][0].blockNumber > blockNumber) {\\n      return 0;\\n    }\\n\\n    uint256 lower = 0;\\n    uint256 upper = snapshotsCount - 1;\\n    while (upper > lower) {\\n      uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n      Snapshot memory snapshot = snapshots[user][center];\\n      if (snapshot.blockNumber == blockNumber) {\\n        return snapshot.value;\\n      } else if (snapshot.blockNumber < blockNumber) {\\n        lower = center;\\n      } else {\\n        upper = center - 1;\\n      }\\n    }\\n    return snapshots[user][lower].value;\\n  }\\n\\n  /**\\n   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type\\n   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,\\n   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts\\n   * who inherit from this to provide access to the delegation data by overriding this method.\\n   * @param delegationType the type of delegation\\n   **/\\n  function _getDelegationDataByType(DelegationType delegationType)\\n    internal\\n    virtual\\n    view\\n    returns (\\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\\n      mapping(address => uint256) storage, //snapshots count\\n      mapping(address => address) storage //delegatees list\\n    );\\n\\n  /**\\n   * @dev Writes a snapshot for an owner of tokens\\n   * @param owner The owner of the tokens\\n   * @param oldValue The value before the operation that is gonna be executed after the snapshot\\n   * @param newValue The value after the operation\\n   */\\n  function _writeSnapshot(\\n    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,\\n    mapping(address => uint256) storage snapshotsCounts,\\n    address owner,\\n    uint128 oldValue,\\n    uint128 newValue\\n  ) internal {\\n    uint128 currentBlock = uint128(block.number);\\n\\n    uint256 ownerSnapshotsCount = snapshotsCounts[owner];\\n    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];\\n\\n    // Doing multiple operations in the same block\\n    if (\\n      ownerSnapshotsCount != 0 &&\\n      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock\\n    ) {\\n      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;\\n    } else {\\n      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);\\n      snapshotsCounts[owner] = ownerSnapshotsCount + 1;\\n    }\\n  }\\n\\n  /**\\n   * @dev returns the user delegatee. If a user never performed any delegation,\\n   * his delegated address will be 0x0. In that case we simply return the user itself\\n   * @param delegator the address of the user for which return the delegatee\\n   * @param delegates the array of delegates for a particular type of delegation\\n   **/\\n  function _getDelegatee(address delegator, mapping(address => address) storage delegates)\\n    internal\\n    view\\n    returns (address)\\n  {\\n    address previousDelegatee = delegates[delegator];\\n\\n    if (previousDelegatee == address(0)) {\\n      return delegator;\\n    }\\n\\n    return previousDelegatee;\\n  }\\n}\\n\",\"keccak256\":\"0x866ad035070a7ec3551303a27b2089b372cb4ac393c985d6896678cad8be6662\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IAaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\n\\ninterface IAaveDistributionManager {\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external;\\n}\\n\",\"keccak256\":\"0xb9f57138a1840eea2b01e686f7fcfc296a631ba602c9404b70752ecb8f86f8db\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x150506e2e40dc3cea841fe0ade6021b9b0d4e09f7616d312bc7c1300a2d7a94f\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/interfaces/IERC20Detailed.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from './IERC20.sol';\\n\\n/**\\n * @dev Interface for ERC20 including metadata\\n **/\\ninterface IERC20Detailed is IERC20 {\\n  function name() external view returns (string memory);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x7c5310c66f68c2e72afcafbdaa4e2d8dce9b3bdaab553274ddf96a597ed863ef\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/IStakedAave.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface IStakedAave {\\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x757fb8a77394148520347549d7d339f5902e4beb113db528788e2d44b0bb7289\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/interfaces/ITransferHook.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\ninterface ITransferHook {\\n  function onTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x1e060af926104d5750b18ab3594b65ec354c14022f35acf06cf109f2f5e91908\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x456a1aebf00cb1f2987ca41f1924e4811703f10800a34ecb759e5d1dc472bb78\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xb4df619dd013c574e0d5188bd1f52908898745703bc055e07e88f90b0fba6601\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/DistributionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nlibrary DistributionTypes {\\n  struct AssetConfigInput {\\n    uint128 emissionPerSecond;\\n    uint256 totalStaked;\\n    address underlyingAsset;\\n  }\\n\\n  struct UserStakeInput {\\n    address underlyingAsset;\\n    uint256 stakedByUser;\\n    uint256 totalStaked;\\n  }\\n}\\n\",\"keccak256\":\"0x8d71c65f5244916694428b5943f58d80250576666e8067eb4914aa2794f17aaa\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {Context} from './Context.sol';\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IERC20Detailed} from '../interfaces/IERC20Detailed.sol';\\nimport {SafeMath} from './SafeMath.sol';\\n\\n/**\\n * @title ERC20\\n * @notice Basic ERC20 implementation\\n * @author Aave\\n **/\\ncontract ERC20 is Context, IERC20, IERC20Detailed {\\n  using SafeMath for uint256;\\n\\n  mapping(address => uint256) private _balances;\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n  uint256 private _totalSupply;\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals\\n  ) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token\\n   **/\\n  function name() public view override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token\\n   **/\\n  function symbol() public view override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the decimals of the token\\n   **/\\n  function decimals() public view override returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @return the total supply of the token\\n   **/\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @return the balance of the token\\n   **/\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev executes a transfer of tokens from msg.sender to recipient\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev returns the allowance of spender on the tokens owned by owner\\n   * @param owner the owner of the tokens\\n   * @param spender the user allowed to spend the owner's tokens\\n   * @return the amount of owner's tokens spender is allowed to spend\\n   **/\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev allows spender to spend the tokens owned by msg.sender\\n   * @param spender the user allowed to spend msg.sender tokens\\n   * @return true\\n   **/\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev executes a transfer of token from sender to recipient, if msg.sender is allowed to do so\\n   * @param sender the owner of the tokens\\n   * @param recipient the recipient of the tokens\\n   * @param amount the amount of tokens being transferred\\n   * @return true if the transfer succeeds, false otherwise\\n   **/\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev increases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param addedValue the amount being added to the allowance\\n   * @return true\\n   **/\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev decreases the allowance of spender to spend msg.sender tokens\\n   * @param spender the user allowed to spend on behalf of msg.sender\\n   * @param subtractedValue the amount being subtracted to the allowance\\n   * @return true\\n   **/\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  function _setName(string memory newName) internal {\\n    _name = newName;\\n  }\\n\\n  function _setSymbol(string memory newSymbol) internal {\\n    _symbol = newSymbol;\\n  }\\n\\n  function _setDecimals(uint8 newDecimals) internal {\\n    _decimals = newDecimals;\\n  }\\n\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x3308bb3d8d3c5076d4db352fe8c994506ac813e45a44acb121980097f8153996\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/GovernancePowerWithSnapshot.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\nimport {ERC20} from '../lib/ERC20.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {\\n  GovernancePowerDelegationERC20\\n} from '@aave/aave-token/contracts/token/base/GovernancePowerDelegationERC20.sol';\\n\\n/**\\n * @title ERC20WithSnapshot\\n * @notice ERC20 including snapshots of balances on transfer-related actions\\n * @author Aave\\n **/\\nabstract contract GovernancePowerWithSnapshot is GovernancePowerDelegationERC20 {\\n  using SafeMath for uint256;\\n\\n  /**\\n   * @dev The following storage layout points to the prior StakedToken.sol implementation:\\n   * _snapshots => _votingSnapshots\\n   * _snapshotsCounts =>  _votingSnapshotsCounts\\n   * _aaveGovernance => _aaveGovernance\\n   */\\n  mapping(address => mapping(uint256 => Snapshot)) public _votingSnapshots;\\n  mapping(address => uint256) public _votingSnapshotsCounts;\\n\\n  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer\\n  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility\\n  /// to control all potential reentrancies by calling back the this contract\\n  ITransferHook public _aaveGovernance;\\n\\n  function _setAaveGovernance(ITransferHook aaveGovernance) internal virtual {\\n    _aaveGovernance = aaveGovernance;\\n  }\\n}\\n\",\"keccak256\":\"0xac61858e050c12b7fa21543c4fc86e9fa2065f4607b74d3d2ce79b73e88e5c4c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.5;\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {SafeMath} from './SafeMath.sol';\\nimport {Address} from './Address.sol';\\n\\n/**\\n * @title SafeERC20\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n  }\\n\\n  function safeApprove(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    require(\\n      (value == 0) || (token.allowance(address(this), spender) == 0),\\n      'SafeERC20: approve from non-zero to non-zero allowance'\\n    );\\n    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n  }\\n\\n  function callOptionalReturn(IERC20 token, bytes memory data) private {\\n    require(address(token).isContract(), 'SafeERC20: call to non-contract');\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = address(token).call(data);\\n    require(success, 'SafeERC20: low-level call failed');\\n\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xbba27d4b67c08f2a51ecf534aadfd510260996fcf91299691e955ee7539dd5a0\",\"license\":\"MIT\"},\"@aave/safety-module/contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts\\n * Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xf32a71745588178f5f64b96e7766589e48d5402c4679b3c04085760f9437f00b\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/AaveDistributionManager.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';\\n\\n/**\\n * @title AaveDistributionManager\\n * @notice Accounting contract to manage multiple staking distributions\\n * @author Aave\\n **/\\ncontract AaveDistributionManager is IAaveDistributionManager {\\n  using SafeMath for uint256;\\n\\n  struct AssetData {\\n    uint128 emissionPerSecond;\\n    uint128 lastUpdateTimestamp;\\n    uint256 index;\\n    mapping(address => uint256) users;\\n  }\\n\\n  uint256 public immutable DISTRIBUTION_END;\\n\\n  address public immutable EMISSION_MANAGER;\\n\\n  uint8 public constant PRECISION = 18;\\n\\n  mapping(address => AssetData) public assets;\\n\\n  event AssetConfigUpdated(address indexed asset, uint256 emission);\\n  event AssetIndexUpdated(address indexed asset, uint256 index);\\n  event UserIndexUpdated(address indexed user, address indexed asset, uint256 index);\\n\\n  constructor(address emissionManager, uint256 distributionDuration) public {\\n    DISTRIBUTION_END = block.timestamp.add(distributionDuration);\\n    EMISSION_MANAGER = emissionManager;\\n  }\\n\\n  /**\\n   * @dev Configures the distribution of rewards for a list of assets\\n   * @param assetsConfigInput The list of configurations to apply\\n   **/\\n  function configureAssets(DistributionTypes.AssetConfigInput[] calldata assetsConfigInput)\\n    external\\n    override\\n  {\\n    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');\\n\\n    for (uint256 i = 0; i < assetsConfigInput.length; i++) {\\n      AssetData storage assetConfig = assets[assetsConfigInput[i].underlyingAsset];\\n\\n      _updateAssetStateInternal(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetConfig,\\n        assetsConfigInput[i].totalStaked\\n      );\\n\\n      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;\\n\\n      emit AssetConfigUpdated(\\n        assetsConfigInput[i].underlyingAsset,\\n        assetsConfigInput[i].emissionPerSecond\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Updates the state of one distribution, mainly rewards index and timestamp\\n   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave\\n   * @param assetConfig Storage pointer to the distribution's config\\n   * @param totalStaked Current total of staked assets for this distribution\\n   * @return The new distribution index\\n   **/\\n  function _updateAssetStateInternal(\\n    address underlyingAsset,\\n    AssetData storage assetConfig,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    uint256 oldIndex = assetConfig.index;\\n    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;\\n\\n    if (block.timestamp == lastUpdateTimestamp) {\\n      return oldIndex;\\n    }\\n\\n    uint256 newIndex =\\n      _getAssetIndex(oldIndex, assetConfig.emissionPerSecond, lastUpdateTimestamp, totalStaked);\\n\\n    if (newIndex != oldIndex) {\\n      assetConfig.index = newIndex;\\n      emit AssetIndexUpdated(underlyingAsset, newIndex);\\n    }\\n\\n    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);\\n\\n    return newIndex;\\n  }\\n\\n  /**\\n   * @dev Updates the state of an user in a distribution\\n   * @param user The user's address\\n   * @param asset The address of the reference asset of the distribution\\n   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment\\n   * @param totalStaked Total tokens staked in the distribution\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _updateUserAssetInternal(\\n    address user,\\n    address asset,\\n    uint256 stakedByUser,\\n    uint256 totalStaked\\n  ) internal returns (uint256) {\\n    AssetData storage assetData = assets[asset];\\n    uint256 userIndex = assetData.users[user];\\n    uint256 accruedRewards = 0;\\n\\n    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);\\n\\n    if (userIndex != newIndex) {\\n      if (stakedByUser != 0) {\\n        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);\\n      }\\n\\n      assetData.users[user] = newIndex;\\n      emit UserIndexUpdated(user, asset, newIndex);\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Used by \\\"frontend\\\" stake contracts to update the data of an user when claiming rewards from there\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _claimRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      accruedRewards = accruedRewards.add(\\n        _updateUserAssetInternal(\\n          user,\\n          stakes[i].underlyingAsset,\\n          stakes[i].stakedByUser,\\n          stakes[i].totalStaked\\n        )\\n      );\\n    }\\n\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Return the accrued rewards for an user over a list of distribution\\n   * @param user The address of the user\\n   * @param stakes List of structs of the user data related with his stake\\n   * @return The accrued rewards for the user until the moment\\n   **/\\n  function _getUnclaimedRewards(address user, DistributionTypes.UserStakeInput[] memory stakes)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 accruedRewards = 0;\\n\\n    for (uint256 i = 0; i < stakes.length; i++) {\\n      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];\\n      uint256 assetIndex =\\n        _getAssetIndex(\\n          assetConfig.index,\\n          assetConfig.emissionPerSecond,\\n          assetConfig.lastUpdateTimestamp,\\n          stakes[i].totalStaked\\n        );\\n\\n      accruedRewards = accruedRewards.add(\\n        _getRewards(stakes[i].stakedByUser, assetIndex, assetConfig.users[user])\\n      );\\n    }\\n    return accruedRewards;\\n  }\\n\\n  /**\\n   * @dev Internal function for the calculation of user's rewards on a distribution\\n   * @param principalUserBalance Amount staked by the user on a distribution\\n   * @param reserveIndex Current index of the distribution\\n   * @param userIndex Index stored for the user, representation his staking moment\\n   * @return The rewards\\n   **/\\n  function _getRewards(\\n    uint256 principalUserBalance,\\n    uint256 reserveIndex,\\n    uint256 userIndex\\n  ) internal pure returns (uint256) {\\n    return principalUserBalance.mul(reserveIndex.sub(userIndex)).div(10**uint256(PRECISION));\\n  }\\n\\n  /**\\n   * @dev Calculates the next value of an specific distribution index, with validations\\n   * @param currentIndex Current index of the distribution\\n   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution\\n   * @param lastUpdateTimestamp Last moment this distribution was updated\\n   * @param totalBalance of tokens considered for the distribution\\n   * @return The new index.\\n   **/\\n  function _getAssetIndex(\\n    uint256 currentIndex,\\n    uint256 emissionPerSecond,\\n    uint128 lastUpdateTimestamp,\\n    uint256 totalBalance\\n  ) internal view returns (uint256) {\\n    if (\\n      emissionPerSecond == 0 ||\\n      totalBalance == 0 ||\\n      lastUpdateTimestamp == block.timestamp ||\\n      lastUpdateTimestamp >= DISTRIBUTION_END\\n    ) {\\n      return currentIndex;\\n    }\\n\\n    uint256 currentTimestamp =\\n      block.timestamp > DISTRIBUTION_END ? DISTRIBUTION_END : block.timestamp;\\n    uint256 timeDelta = currentTimestamp.sub(lastUpdateTimestamp);\\n    return\\n      emissionPerSecond.mul(timeDelta).mul(10**uint256(PRECISION)).div(totalBalance).add(\\n        currentIndex\\n      );\\n  }\\n\\n  /**\\n   * @dev Returns the data of an user on a distribution\\n   * @param user Address of the user\\n   * @param asset The address of the reference asset of the distribution\\n   * @return The new index\\n   **/\\n  function getUserAssetData(address user, address asset) public view returns (uint256) {\\n    return assets[asset].users[user];\\n  }\\n}\\n\",\"keccak256\":\"0x1f639ee1fe125ee2122aefd7b849b54d548b3dd7623280ae216320e98f2c6d3c\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/stake/StakedTokenV2.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\npragma experimental ABIEncoderV2;\\n\\nimport {ERC20} from '@aave/aave-token/contracts/open-zeppelin/ERC20.sol';\\n\\nimport {IERC20} from '../interfaces/IERC20.sol';\\nimport {IStakedAave} from '../interfaces/IStakedAave.sol';\\nimport {ITransferHook} from '../interfaces/ITransferHook.sol';\\n\\nimport {DistributionTypes} from '../lib/DistributionTypes.sol';\\nimport {SafeMath} from '../lib/SafeMath.sol';\\nimport {SafeERC20} from '../lib/SafeERC20.sol';\\n\\nimport {VersionedInitializable} from '../utils/VersionedInitializable.sol';\\nimport {AaveDistributionManager} from './AaveDistributionManager.sol';\\nimport {GovernancePowerWithSnapshot} from '../lib/GovernancePowerWithSnapshot.sol';\\n\\n/**\\n * @title StakedToken\\n * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract\\n * @author Aave\\n **/\\ncontract StakedTokenV2 is\\n  IStakedAave,\\n  GovernancePowerWithSnapshot,\\n  VersionedInitializable,\\n  AaveDistributionManager\\n{\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  /// @dev Start of Storage layout from StakedToken v1\\n  uint256 public constant REVISION = 2;\\n\\n  IERC20 public immutable STAKED_TOKEN;\\n  IERC20 public immutable REWARD_TOKEN;\\n  uint256 public immutable COOLDOWN_SECONDS;\\n\\n  /// @notice Seconds available to redeem once the cooldown period is fullfilled\\n  uint256 public immutable UNSTAKE_WINDOW;\\n\\n  /// @notice Address to pull from the rewards, needs to have approved this contract\\n  address public immutable REWARDS_VAULT;\\n\\n  mapping(address => uint256) public stakerRewardsToClaim;\\n  mapping(address => uint256) public stakersCooldowns;\\n\\n  /// @dev End of Storage layout from StakedToken v1\\n\\n  /// @dev To see the voting mappings, go to GovernancePowerWithSnapshot.sol\\n  mapping(address => address) internal _votingDelegates;\\n\\n  mapping(address => mapping(uint256 => Snapshot)) internal _propositionPowerSnapshots;\\n  mapping(address => uint256) internal _propositionPowerSnapshotsCounts;\\n  mapping(address => address) internal _propositionPowerDelegates;\\n\\n  bytes32 public DOMAIN_SEPARATOR;\\n  bytes public constant EIP712_REVISION = bytes('1');\\n  bytes32 internal constant EIP712_DOMAIN =\\n    keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)');\\n  bytes32 public constant PERMIT_TYPEHASH =\\n    keccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');\\n\\n  /// @dev owner => next valid nonce to submit with permit()\\n  mapping(address => uint256) public _nonces;\\n\\n  event Staked(address indexed from, address indexed onBehalfOf, uint256 amount);\\n  event Redeem(address indexed from, address indexed to, uint256 amount);\\n\\n  event RewardsAccrued(address user, uint256 amount);\\n  event RewardsClaimed(address indexed from, address indexed to, uint256 amount);\\n\\n  event Cooldown(address indexed user);\\n\\n  constructor(\\n    IERC20 stakedToken,\\n    IERC20 rewardToken,\\n    uint256 cooldownSeconds,\\n    uint256 unstakeWindow,\\n    address rewardsVault,\\n    address emissionManager,\\n    uint128 distributionDuration,\\n    string memory name,\\n    string memory symbol,\\n    uint8 decimals,\\n    address governance\\n  ) public ERC20(name, symbol) AaveDistributionManager(emissionManager, distributionDuration) {\\n    STAKED_TOKEN = stakedToken;\\n    REWARD_TOKEN = rewardToken;\\n    COOLDOWN_SECONDS = cooldownSeconds;\\n    UNSTAKE_WINDOW = unstakeWindow;\\n    REWARDS_VAULT = rewardsVault;\\n    _aaveGovernance = ITransferHook(governance);\\n    ERC20._setupDecimals(decimals);\\n  }\\n\\n  /**\\n   * @dev Called by the proxy contract\\n   **/\\n  function initialize() external initializer {\\n    uint256 chainId;\\n\\n    //solium-disable-next-line\\n    assembly {\\n      chainId := chainid()\\n    }\\n\\n    DOMAIN_SEPARATOR = keccak256(\\n      abi.encode(\\n        EIP712_DOMAIN,\\n        keccak256(bytes(name())),\\n        keccak256(EIP712_REVISION),\\n        chainId,\\n        address(this)\\n      )\\n    );\\n  }\\n\\n  function stake(address onBehalfOf, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    uint256 balanceOfUser = balanceOf(onBehalfOf);\\n\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(onBehalfOf, address(this), balanceOfUser, totalSupply());\\n    if (accruedRewards != 0) {\\n      emit RewardsAccrued(onBehalfOf, accruedRewards);\\n      stakerRewardsToClaim[onBehalfOf] = stakerRewardsToClaim[onBehalfOf].add(accruedRewards);\\n    }\\n\\n    stakersCooldowns[onBehalfOf] = getNextCooldownTimestamp(0, amount, onBehalfOf, balanceOfUser);\\n\\n    _mint(onBehalfOf, amount);\\n    IERC20(STAKED_TOKEN).safeTransferFrom(msg.sender, address(this), amount);\\n\\n    emit Staked(msg.sender, onBehalfOf, amount);\\n  }\\n\\n  /**\\n   * @dev Redeems staked tokens, and stop earning rewards\\n   * @param to Address to redeem to\\n   * @param amount Amount to redeem\\n   **/\\n  function redeem(address to, uint256 amount) external override {\\n    require(amount != 0, 'INVALID_ZERO_AMOUNT');\\n    //solium-disable-next-line\\n    uint256 cooldownStartTimestamp = stakersCooldowns[msg.sender];\\n    require(\\n      block.timestamp > cooldownStartTimestamp.add(COOLDOWN_SECONDS),\\n      'INSUFFICIENT_COOLDOWN'\\n    );\\n    require(\\n      block.timestamp.sub(cooldownStartTimestamp.add(COOLDOWN_SECONDS)) <= UNSTAKE_WINDOW,\\n      'UNSTAKE_WINDOW_FINISHED'\\n    );\\n    uint256 balanceOfMessageSender = balanceOf(msg.sender);\\n\\n    uint256 amountToRedeem = (amount > balanceOfMessageSender) ? balanceOfMessageSender : amount;\\n\\n    _updateCurrentUnclaimedRewards(msg.sender, balanceOfMessageSender, true);\\n\\n    _burn(msg.sender, amountToRedeem);\\n\\n    if (balanceOfMessageSender.sub(amountToRedeem) == 0) {\\n      stakersCooldowns[msg.sender] = 0;\\n    }\\n\\n    IERC20(STAKED_TOKEN).safeTransfer(to, amountToRedeem);\\n\\n    emit Redeem(msg.sender, to, amountToRedeem);\\n  }\\n\\n  /**\\n   * @dev Activates the cooldown period to unstake\\n   * - It can't be called if the user is not staking\\n   **/\\n  function cooldown() external override {\\n    require(balanceOf(msg.sender) != 0, 'INVALID_BALANCE_ON_COOLDOWN');\\n    //solium-disable-next-line\\n    stakersCooldowns[msg.sender] = block.timestamp;\\n\\n    emit Cooldown(msg.sender);\\n  }\\n\\n  /**\\n   * @dev Claims an `amount` of `REWARD_TOKEN` to the address `to`\\n   * @param to Address to stake for\\n   * @param amount Amount to stake\\n   **/\\n  function claimRewards(address to, uint256 amount) external override {\\n    uint256 newTotalRewards =\\n      _updateCurrentUnclaimedRewards(msg.sender, balanceOf(msg.sender), false);\\n    uint256 amountToClaim = (amount == type(uint256).max) ? newTotalRewards : amount;\\n\\n    stakerRewardsToClaim[msg.sender] = newTotalRewards.sub(amountToClaim, 'INVALID_AMOUNT');\\n\\n    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);\\n\\n    emit RewardsClaimed(msg.sender, to, amountToClaim);\\n  }\\n\\n  /**\\n   * @dev Internal ERC20 _transfer of the tokenized staked tokens\\n   * @param from Address to transfer from\\n   * @param to Address to transfer to\\n   * @param amount Amount to transfer\\n   **/\\n  function _transfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    uint256 balanceOfFrom = balanceOf(from);\\n    // Sender\\n    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);\\n\\n    // Recipient\\n    if (from != to) {\\n      uint256 balanceOfTo = balanceOf(to);\\n      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);\\n\\n      uint256 previousSenderCooldown = stakersCooldowns[from];\\n      stakersCooldowns[to] = getNextCooldownTimestamp(\\n        previousSenderCooldown,\\n        amount,\\n        to,\\n        balanceOfTo\\n      );\\n      // if cooldown was set and whole balance of sender was transferred - clear cooldown\\n      if (balanceOfFrom == amount && previousSenderCooldown != 0) {\\n        stakersCooldowns[from] = 0;\\n      }\\n    }\\n\\n    super._transfer(from, to, amount);\\n  }\\n\\n  /**\\n   * @dev Updates the user state related with his accrued rewards\\n   * @param user Address of the user\\n   * @param userBalance The current balance of the user\\n   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user\\n   * @return The unclaimed rewards that were added to the total accrued\\n   **/\\n  function _updateCurrentUnclaimedRewards(\\n    address user,\\n    uint256 userBalance,\\n    bool updateStorage\\n  ) internal returns (uint256) {\\n    uint256 accruedRewards =\\n      _updateUserAssetInternal(user, address(this), userBalance, totalSupply());\\n    uint256 unclaimedRewards = stakerRewardsToClaim[user].add(accruedRewards);\\n\\n    if (accruedRewards != 0) {\\n      if (updateStorage) {\\n        stakerRewardsToClaim[user] = unclaimedRewards;\\n      }\\n      emit RewardsAccrued(user, accruedRewards);\\n    }\\n\\n    return unclaimedRewards;\\n  }\\n\\n  /**\\n   * @dev Calculates the how is gonna be a new cooldown timestamp depending on the sender/receiver situation\\n   *  - If the timestamp of the sender is \\\"better\\\" or the timestamp of the recipient is 0, we take the one of the recipient\\n   *  - Weighted average of from/to cooldown timestamps if:\\n   *    # The sender doesn't have the cooldown activated (timestamp 0).\\n   *    # The sender timestamp is expired\\n   *    # The sender has a \\\"worse\\\" timestamp\\n   *  - If the receiver's cooldown timestamp expired (too old), the next is 0\\n   * @param fromCooldownTimestamp Cooldown timestamp of the sender\\n   * @param amountToReceive Amount\\n   * @param toAddress Address of the recipient\\n   * @param toBalance Current balance of the receiver\\n   * @return The new cooldown timestamp\\n   **/\\n  function getNextCooldownTimestamp(\\n    uint256 fromCooldownTimestamp,\\n    uint256 amountToReceive,\\n    address toAddress,\\n    uint256 toBalance\\n  ) public view returns (uint256) {\\n    uint256 toCooldownTimestamp = stakersCooldowns[toAddress];\\n    if (toCooldownTimestamp == 0) {\\n      return 0;\\n    }\\n\\n    uint256 minimalValidCooldownTimestamp =\\n      block.timestamp.sub(COOLDOWN_SECONDS).sub(UNSTAKE_WINDOW);\\n\\n    if (minimalValidCooldownTimestamp > toCooldownTimestamp) {\\n      toCooldownTimestamp = 0;\\n    } else {\\n      uint256 fromCooldownTimestamp =\\n        (minimalValidCooldownTimestamp > fromCooldownTimestamp)\\n          ? block.timestamp\\n          : fromCooldownTimestamp;\\n\\n      if (fromCooldownTimestamp < toCooldownTimestamp) {\\n        return toCooldownTimestamp;\\n      } else {\\n        toCooldownTimestamp = (\\n          amountToReceive.mul(fromCooldownTimestamp).add(toBalance.mul(toCooldownTimestamp))\\n        )\\n          .div(amountToReceive.add(toBalance));\\n      }\\n    }\\n    return toCooldownTimestamp;\\n  }\\n\\n  /**\\n   * @dev Return the total rewards pending to claim by an staker\\n   * @param staker The staker address\\n   * @return The rewards\\n   */\\n  function getTotalRewardsBalance(address staker) external view returns (uint256) {\\n    DistributionTypes.UserStakeInput[] memory userStakeInputs =\\n      new DistributionTypes.UserStakeInput[](1);\\n    userStakeInputs[0] = DistributionTypes.UserStakeInput({\\n      underlyingAsset: address(this),\\n      stakedByUser: balanceOf(staker),\\n      totalStaked: totalSupply()\\n    });\\n    return stakerRewardsToClaim[staker].add(_getUnclaimedRewards(staker, userStakeInputs));\\n  }\\n\\n  /**\\n   * @dev returns the revision of the implementation contract\\n   * @return The revision\\n   */\\n  function getRevision() internal pure override returns (uint256) {\\n    return REVISION;\\n  }\\n\\n  /**\\n   * @dev implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\\n   * @param owner the owner of the funds\\n   * @param spender the spender\\n   * @param value the amount\\n   * @param deadline the deadline timestamp, type(uint256).max for no deadline\\n   * @param v signature param\\n   * @param s signature param\\n   * @param r signature param\\n   */\\n\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external {\\n    require(owner != address(0), 'INVALID_OWNER');\\n    //solium-disable-next-line\\n    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\\n    uint256 currentValidNonce = _nonces[owner];\\n    bytes32 digest =\\n      keccak256(\\n        abi.encodePacked(\\n          '\\\\x19\\\\x01',\\n          DOMAIN_SEPARATOR,\\n          keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))\\n        )\\n      );\\n\\n    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\\n    _nonces[owner] = currentValidNonce.add(1);\\n    _approve(owner, spender, value);\\n  }\\n\\n  /**\\n   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn\\n   * - On _transfer, it writes snapshots for both \\\"from\\\" and \\\"to\\\"\\n   * - On _mint, only for _to\\n   * - On _burn, only for _from\\n   * @param from the from address\\n   * @param to the to address\\n   * @param amount the amount to transfer\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    address votingFromDelegatee = _votingDelegates[from];\\n    address votingToDelegatee = _votingDelegates[to];\\n\\n    if (votingFromDelegatee == address(0)) {\\n      votingFromDelegatee = from;\\n    }\\n    if (votingToDelegatee == address(0)) {\\n      votingToDelegatee = to;\\n    }\\n\\n    _moveDelegatesByType(\\n      votingFromDelegatee,\\n      votingToDelegatee,\\n      amount,\\n      DelegationType.VOTING_POWER\\n    );\\n\\n    address propPowerFromDelegatee = _propositionPowerDelegates[from];\\n    address propPowerToDelegatee = _propositionPowerDelegates[to];\\n\\n    if (propPowerFromDelegatee == address(0)) {\\n      propPowerFromDelegatee = from;\\n    }\\n    if (propPowerToDelegatee == address(0)) {\\n      propPowerToDelegatee = to;\\n    }\\n\\n    _moveDelegatesByType(\\n      propPowerFromDelegatee,\\n      propPowerToDelegatee,\\n      amount,\\n      DelegationType.PROPOSITION_POWER\\n    );\\n\\n    // caching the aave governance address to avoid multiple state loads\\n    ITransferHook aaveGovernance = _aaveGovernance;\\n    if (aaveGovernance != ITransferHook(0)) {\\n      aaveGovernance.onTransfer(from, to, amount);\\n    }\\n  }\\n\\n  function _getDelegationDataByType(DelegationType delegationType)\\n    internal\\n    view\\n    override\\n    returns (\\n      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots\\n      mapping(address => uint256) storage, //snapshots count\\n      mapping(address => address) storage //delegatees list\\n    )\\n  {\\n    if (delegationType == DelegationType.VOTING_POWER) {\\n      return (_votingSnapshots, _votingSnapshotsCounts, _votingDelegates);\\n    } else {\\n      return (\\n        _propositionPowerSnapshots,\\n        _propositionPowerSnapshotsCounts,\\n        _propositionPowerDelegates\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Delegates power from signatory to `delegatee`\\n   * @param delegatee The address to delegate votes to\\n   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)\\n   * @param nonce The contract state required to match the signature\\n   * @param expiry The time at which to expire the signature\\n   * @param v The recovery byte of the signature\\n   * @param r Half of the ECDSA signature pair\\n   * @param s Half of the ECDSA signature pair\\n   */\\n  function delegateByTypeBySig(\\n    address delegatee,\\n    DelegationType delegationType,\\n    uint256 nonce,\\n    uint256 expiry,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public {\\n    bytes32 structHash =\\n      keccak256(\\n        abi.encode(DELEGATE_BY_TYPE_TYPEHASH, delegatee, uint256(delegationType), nonce, expiry)\\n      );\\n    bytes32 digest = keccak256(abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash));\\n    address signatory = ecrecover(digest, v, r, s);\\n    require(signatory != address(0), 'INVALID_SIGNATURE');\\n    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');\\n    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');\\n    _delegateByType(signatory, delegatee, delegationType);\\n  }\\n\\n  /**\\n   * @dev Delegates power from signatory to `delegatee`\\n   * @param delegatee The address to delegate votes to\\n   * @param nonce The contract state required to match the signature\\n   * @param expiry The time at which to expire the signature\\n   * @param v The recovery byte of the signature\\n   * @param r Half of the ECDSA signature pair\\n   * @param s Half of the ECDSA signature pair\\n   */\\n  function delegateBySig(\\n    address delegatee,\\n    uint256 nonce,\\n    uint256 expiry,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public {\\n    bytes32 structHash = keccak256(abi.encode(DELEGATE_TYPEHASH, delegatee, nonce, expiry));\\n    bytes32 digest = keccak256(abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash));\\n    address signatory = ecrecover(digest, v, r, s);\\n    require(signatory != address(0), 'INVALID_SIGNATURE');\\n    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');\\n    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');\\n    _delegateByType(signatory, delegatee, DelegationType.VOTING_POWER);\\n    _delegateByType(signatory, delegatee, DelegationType.PROPOSITION_POWER);\\n  }\\n}\\n\",\"keccak256\":\"0xaaab02803560c6fc01dd578b8045abe5f32f0c2baaa7a0554561a6f783f084b6\",\"license\":\"agpl-3.0\"},\"@aave/safety-module/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":263,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":269,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":271,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":273,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":275,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":277,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":2687,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_votingSnapshots","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))"},{"astId":2691,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_votingSnapshotsCounts","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2694,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_aaveGovernance","offset":0,"slot":"8","type":"t_contract(ITransferHook)1786"},{"astId":5701,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"lastInitializedRevision","offset":0,"slot":"9","type":"t_uint256"},{"astId":5732,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"______gap","offset":0,"slot":"10","type":"t_array(t_uint256)50_storage"},{"astId":3095,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"assets","offset":0,"slot":"60","type":"t_mapping(t_address,t_struct(AssetData)3084_storage)"},{"astId":4508,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"stakerRewardsToClaim","offset":0,"slot":"61","type":"t_mapping(t_address,t_uint256)"},{"astId":4512,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"stakersCooldowns","offset":0,"slot":"62","type":"t_mapping(t_address,t_uint256)"},{"astId":4517,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_votingDelegates","offset":0,"slot":"63","type":"t_mapping(t_address,t_address)"},{"astId":4523,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_propositionPowerSnapshots","offset":0,"slot":"64","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))"},{"astId":4527,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_propositionPowerSnapshotsCounts","offset":0,"slot":"65","type":"t_mapping(t_address,t_uint256)"},{"astId":4531,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_propositionPowerDelegates","offset":0,"slot":"66","type":"t_mapping(t_address,t_address)"},{"astId":4533,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"DOMAIN_SEPARATOR","offset":0,"slot":"67","type":"t_bytes32"},{"astId":4554,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"_nonces","offset":0,"slot":"68","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ITransferHook)1786":{"encoding":"inplace","label":"contract ITransferHook","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Snapshot)977_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Snapshot)977_storage)"},"t_mapping(t_address,t_struct(AssetData)3084_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AaveDistributionManager.AssetData)","numberOfBytes":"32","value":"t_struct(AssetData)3084_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Snapshot)977_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GovernancePowerDelegationERC20.Snapshot)","numberOfBytes":"32","value":"t_struct(Snapshot)977_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetData)3084_storage":{"encoding":"inplace","label":"struct AaveDistributionManager.AssetData","members":[{"astId":3075,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"emissionPerSecond","offset":0,"slot":"0","type":"t_uint128"},{"astId":3077,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"lastUpdateTimestamp","offset":16,"slot":"0","type":"t_uint128"},{"astId":3079,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"index","offset":0,"slot":"1","type":"t_uint256"},{"astId":3083,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"users","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"96"},"t_struct(Snapshot)977_storage":{"encoding":"inplace","label":"struct GovernancePowerDelegationERC20.Snapshot","members":[{"astId":974,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"blockNumber","offset":0,"slot":"0","type":"t_uint128"},{"astId":976,"contract":"@aave/safety-module/contracts/stake/StakedTokenV2.sol:StakedTokenV2","label":"value","offset":16,"slot":"0","type":"t_uint128"}],"numberOfBytes":"32"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"DELEGATE_BY_TYPE_TYPEHASH()":{"notice":"The EIP-712 typehash for the delegation struct used by the contract"},"REWARDS_VAULT()":{"notice":"Address to pull from the rewards, needs to have approved this contract"},"UNSTAKE_WINDOW()":{"notice":"Seconds available to redeem once the cooldown period is fullfilled"}},"notice":"Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract","version":1}}},"@aave/safety-module/contracts/utils/VersionedInitializable.sol":{"VersionedInitializable":{"abi":[],"devdoc":{"author":"Aave, inspired by the OpenZeppelin Initializable contract","details":"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.","kind":"dev","methods":{},"stateVariables":{"lastInitializedRevision":{"details":"Indicates that the contract has been initialized."}},"title":"VersionedInitializable","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave, inspired by the OpenZeppelin Initializable contract\",\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"lastInitializedRevision\":{\"details\":\"Indicates that the contract has been initialized.\"}},\"title\":\"VersionedInitializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/safety-module/contracts/utils/VersionedInitializable.sol\":\"VersionedInitializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/safety-module/contracts/utils/VersionedInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.5;\\n\\n/**\\n * @title VersionedInitializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n *\\n * @author Aave, inspired by the OpenZeppelin Initializable contract\\n */\\nabstract contract VersionedInitializable {\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  uint256 internal lastInitializedRevision = 0;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    uint256 revision = getRevision();\\n    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');\\n\\n    lastInitializedRevision = revision;\\n\\n    _;\\n  }\\n\\n  /// @dev returns the revision number of the contract.\\n  /// Needs to be defined in the inherited class as a constant.\\n  function getRevision() internal pure virtual returns (uint256);\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\\n\",\"keccak256\":\"0xedfec4c491ad24c0a1024fc801c22f2a16d1f316f2a5cdcc883e0bbc451cffc7\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":5701,"contract":"@aave/safety-module/contracts/utils/VersionedInitializable.sol:VersionedInitializable","label":"lastInitializedRevision","offset":0,"slot":"0","type":"t_uint256"},{"astId":5732,"contract":"@aave/safety-module/contracts/utils/VersionedInitializable.sol:VersionedInitializable","label":"______gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}